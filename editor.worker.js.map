{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/winjs.base.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/uint.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/functional.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/event.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/token.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/async.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","process","__webpack_exports__","isWindows","isWeb","globals","Platform","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_locale","undefined","navigator","userAgent","indexOf","language","Web","Mac","Windows","Linux","_globals","self","nextTick","fn","setTimeout","platform","arch","execPath","title","pid","browser","env","argv","binding","Error","path","cwd","chdir","dir","resolve","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","__winjs_exports","TPromise","_modules","_winjs","deps","factory","exportsPassedIn","depsValues","map","dep","result","apply","globalObject","window","_Global","hasWinRT","markSupportedForProcessing","func","supportedForProcessing","actualSetImmediate","_setImmediate","callback","setImmediate","msWriteProfilerMark","_WinJS","_BaseCoreUtils","_WriteProfilerMark","initializeProperties","target","members","prefix","properties","len","keys","isArray","Array","length","charCodeAt","member","set","forEach","configurable","writable","setName","defineProperties","_rootNamespace","createNamespace","parentNamespace","currentNamespace","namespaceFragments","split","splice","namespaceName","defineWithParent","define","Namespace","LazyStates","uninitialized","working","initialized","lazy","f","state","moduleDefine","publicNS","push","_lazy","_moduleDefine","constructor","instanceMembers","staticMembers","derive","baseClass","basePrototype","mix","arguments","Class","_Base","ErrorFromName","message","this","createEventProperty","eventPropStateName","userHandler","handler","wrapper","evt","addEventListener","removeEventListener","createEventProperties","props","EventMixinEvent","type","detail","timeStamp","Date","now","bubbles","cancelable","currentTarget","defaultPrevented","_preventDefaultCalled","trusted","eventPhase","preventDefault","stopImmediatePropagation","_stopImmediatePropagationCalled","stopPropagation","eventMixin","_listeners","listener","useCapture","eventListeners","dispatchEvent","details","listeners","eventValue","slice","_createEventProperty","nop","v","_traceAsyncOperationStarting","Debug","msTraceAsyncOperationStarting","_traceAsyncOperationCompleted","msTraceAsyncOperationCompleted","_traceAsyncCallbackStarting","msTraceAsyncCallbackStarting","_traceAsyncCallbackCompleted","msTraceAsyncCallbackCompleted","_ErrorFromName","_Events","_Trace","setNonUserCodeExceptions","ListenerType","promiseEventListeners","errorET","canceledName","tagWithStack","tag","promise","thenPromise","errorPromise","exceptionPromise","completePromise","all","state_created","state_working","state_waiting","state_waiting_canceled","state_canceled","state_canceling","state_success_notify","state_success","state_error_notify","state_error","error_number","_","enter","_setState","cancel","done","then","_completed","_error","_notify","_progress","_setCompleteValue","_setErrorValue","completed","error","progress","setCompleteValue","setErrorValue","waitedUpon","_value","ThenPromise","_state","pushListener","_errorId","_chainedError","callonerror","detailsForHandledError","handlesOnError","_cancelAction","CompletePromise","queue","shift","notifySuccess","_cleanupAction","ErrorPromise","notifyError","PromiseStateMachine","_nextState","_run","onComplete","onError","onProgress","Promise_then","context","detailsForChainedError","detailsForError","_setChainedErrorValue","_setExceptionValue","detailsForException","targetState","createErrorDetails","exception","id","parent","errorValue","_isException","errorId","setErrorInfo","exceptionValue","asyncOpID","e","onerrorDetails","MS_ASYNC_OP_STATUS_SUCCESS","ex","errorID","MS_ASYNC_OP_STATUS_CANCELED","MS_ASYNC_OP_STATUS_ERROR","asyncCallbackStarted","onerrorDetailsGenerator","isException","staticCanceledPromise","creator","_stack","Promise","_getStack","_creator","unused","_doneHandler","ExceptionPromise","newValue","timeout","timeoutMS","clearTimeout","timeoutWithPromise","cancelPromise","cancelTimeout","init","oncancel","_oncancel","complete","stack","eventType","capture","any","values","canceled","as","is","join","errors","results","undefineds","pending","argDone","errorCount","canceledCount","Key","Done","thenEach","time","to","wrap","wrapError","_veryExpensiveTagWithStack","_veryExpensiveTagWithStack_tag","debuggerEnabled","_cancelBlocker","input","output","_StateMachine","PPromise","g","Function","eval","normalizeArray","parts","allowAboveRoot","up","last","unshift","splitPathRe","splitPath","filename","exec","filter","xs","res","resolvedPath","resolvedAbsolute","TypeError","charAt","normalize","isAbsolute","trailingSlash","substr","paths","index","relative","from","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","root","basename","ext","extname","str","uri_a","__extends","extendStatics","setPrototypeOf","__proto__","b","__","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","ret","scheme","test","authority","_referenceResolution","_slash","_empty","_regexp","uri_URI","URI","schemeOrData","query","fragment","isUri","thing","_makeFsPath","with","change","_URI","parse","match","decodeURIComponent","file","replace","idx","substring","components","toString","skipEncoding","_asFormatted","toJSON","revive","data","_fsPath","fsPath","_formatted","external","common_uri","_super","_this","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","code","encodeURIComponent","escaped","encodeURIComponentMinimal","uri","toLowerCase","encoder","userinfo","String","fromCharCode","Position","lineNumber","column","equals","other","a","isBefore","isBeforeOrEqual","compare","aLineNumber","bLineNumber","aColumn","bColumn","clone","lift","isIPosition","obj","range_Range","Range","startLineNumber","startColumn","endLineNumber","endColumn","isEmpty","range","containsPosition","position","containsRange","otherRange","plusRange","max","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","compareRangesUsingEnds","spansMultipleLines","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","createStringSequence","getLength","getElementAtIndex","stringDiff","original","modified","pretty","diff_LcsDiff","ComputeDiff","Assert","condition","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","MaxDifferencesHistory","diff_DiffChangeHelper","DiffChangeHelper","m_changes","m_originalStart","Number","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","AddModifiedElement","getChanges","getReverseChanges","reverse","LcsDiff","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_forwardHistory","m_reverseHistory","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","changes","ComputeDiffRecursive","ShiftChanges","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","diagonal","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","originalStartPoint","modifiedStartPoint","lastForwardChange","numDifferences","tempOriginalIndex","maxDifferences","numDiagonals","delta","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","abs","matchLengthOfLongest","temp","mergedDiffs","originalStop","modifiedStop","checkOriginal","checkModified","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","_OriginalIsBoundary","element","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","originalScore","modifiedScore","left","right","diagonalBaseIndex","diagonalsBelow","diagonalsAbove","diffEven","lowerBoundEven","upperBoundEven","firstNonWhitespaceIndex","chCode","lastNonWhitespaceIndex","startIndex","MAXIMUM_RUN_TIME","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","modifiedSequence","diffAlgo","diffComputer_LineMarkerSequence","LineMarkerSequence","lines","startColumns","endColumns","length_1","_getFirstNonBlankColumn","_getLastNonBlankColumn","_lines","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","txt","defaultValue","getCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","postProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","matchingLength","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","shouldComputeCharChanges","shouldPostProcessCharChanges","length_2","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","maximumRunTimeMs","computationStartTime","getTime","_continueProcessingPredicate","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","originalChar","modifiedChar","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","Uint8Matrix","rows","cols","Uint8Array","_data","row","toUint8","toUint32","PrefixSumIndexOfResult","remainder","prefixSumComputer_PrefixSumComputer","PrefixSumComputer","prefixSum","Uint32Array","prefixSumValidIndex","Int32Array","getCount","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","changeValue","removeValues","cnt","maxCnt","getTotalValue","_getAccumulatedValue","getAccumulatedValue","getIndexOf","accumulatedValue","floor","mid","midStop","midStart","low","high","mirrorTextModel_MirrorTextModel","PrefixSumComputerWithCache","_cacheAccumulatedValueStart","_cache","_actual","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","MirrorTextModel","eol","versionId","_uri","_eol","_versionId","dispose","getText","onEvents","_lineStarts","_acceptDeleteRange","_acceptInsertText","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","_setLineText","lineIndex","insertText","insertLines","newLengths","characterClassifier_CharacterClassifier","CharacterClassifier","_defaultValue","_asciiMap","_createAsciiMap","_map","Map","asciiMap","charCode","linkComputer_StateMachine","CharacterSet","add","has","StateMachine","edges","maxCharCode","maxState","_a","states","_b","_states","_maxCharCode","nextState","currentState","_stateMachine","getStateMachine","_classifier","getClassifier","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","LinkComputer","_createLink","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","chClass","charCodeBeforeLink","lastCharCodeInLink","url","computeLinks","model","stateMachine","lineCount","getLineCount","getLineContent","j","linkBeginChCode","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","lastIndexOf","n1","n2","parseFloat","isNaN","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","USUAL_WORD_SEPARATORS","createWordRegExp","allowInWords","source","RegExp","DEFAULT_WORD_REGEXP","ensureValidWordDefinition","wordDefinition","flags","ignoreCase","multiline","lastIndex","getWordAtPosFast","textOffset","word","getWordAtPosSlow","getWordAtText","outstandingPromiseErrors","promiseErrorHandler","onUnexpectedError","console","log","winjs_base","ErrorHandler","unexpectedErrorHandler","emit","onUnexpectedExternalError","errorHandler","isPromiseCanceledError","transformErrorForSerialization","name_1","stacktrace","$isError","once","didCall","lifecycle_dispose","first","rest","_i","toDisposable","Event","Disposable","_toDispose","_register","None","freeze","Node","ImmortalReference","LinkedList","_first","insert","atTheEnd","newNode","oldLast","_last","prev","next","oldFirst","candidate","anchor","iterator","node","_disposable","event_Emitter","Emitter","_options","_event","thisArgs","disposables","firstListener","onFirstListenerAdd","remove","onFirstListenerDidAdd","onListenerDidAdd","_noop","_disposed","onLastListenerRemove","fire","event","_deliveryQueue","iter","event_1","EventMultiplexer","hasListeners","events","emitter","hook","unhook","EventBufferer","buffers","wrapEvent","buffer","bufferEvents","pop","flush","mapEvent","filterEvent","ChainableEvent","on","Relay","disposable","KeyCodeUtils","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","keyCode","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","KeyChord","firstPart","secondPart","chordPart","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","SimpleKeybinding","ctrlKey","shiftKey","altKey","metaKey","isModifierKey","isDuplicateModifierCase","ChordKeybinding","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","ResolvedKeybinding","SelectionDirection","selection_extends","cancellation_CancellationToken","selection_Selection","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","LTR","RTL","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","shortcutEvent","handle","CancellationToken","isCancellationRequested","onCancellationRequested","Cancelled","MarkerTag","MarkerSeverity","cancellation_MutableToken","MutableToken","_isCancelled","_emitter","CancellationTokenSource","_token","Token","offset","TokenizationResult","tokens","endState","TokenizationResult2","KeyCode","standaloneBase_KeyMod","KeyMod","chord","CtrlCmd","Shift","Alt","WinCtrl","createMonacoBaseAPI","editor","languages","Uri","editorSimpleWorker_extends","editorSimpleWorker_MirrorModel","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordAtText","getWordUntilPosition","wordAtPosition","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","content","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","out","lineLength","hasChanged","maxCharacter","editorSimpleWorker_BaseEditorSimpleWorker","BaseEditorSimpleWorker","foreignModuleFactory","_foreignModuleFactory","_foreignModule","originalUrl","modifiedUrl","ignoreTrimWhitespace","_getModel","diffComputer","computeMoreMinimalEdits","modelUrl","edits","lastEol","edits_1","_diffLimit","editOffset","changes_1","newEdit","textualSuggest","wordDef","wordDefFlags","suggestions","wordDefRegExp","currentWord","seen","_suggestionsLimit","label","noAutoAccept","overwriteBefore","selectionText","wordRange","loadForeignModule","createData","ctx","getMirrorModels","_getModels","methods","prop","fmr","method","args","editorSimpleWorker_EditorSimpleWorkerImpl","EditorSimpleWorkerImpl","_models","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","importScripts","monaco","async_extends","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete_1","err","Delayer","defaultDelay","completionPromise","onSuccess","task","trigger","delay","async_ShallowCancelThenPromise","ShallowCancelThenPromise","outer","completeCallback","errorCallback","progressCallback","TimeoutTimer","cancelAndSet","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","isScheduled","schedule","doRun","simpleWorker_extends","INITIALIZE","simpleWorker_SimpleWorkerProtocol","SimpleWorkerProtocol","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","req","reply","_send","vsWorker","handleMessage","serializedMessage","JSON","_handleMessage","msg","seq","replyMessage","warn","requestMessage","strMsg","stringify","simpleWorker_SimpleWorkerServer","SimpleWorkerClient","workerFactory","lazyProxyFulfill","lazyProxyReject","_worker","_protocol","postMessage","getId","loaderConfiguration","require","getConfig","requirejs","contexts","config","_lazyProxy","_onModuleLoaded","availableMethods","proxy","createProxyMethod","proxyMethodRequest","_onError","_request","getProxyObject","info","SimpleWorkerServer","postSerializedMessage","requestHandler","_requestHandler","onmessage","initialize","loaderConfig","cc","ee","baseUrl","vs","catchError","handlerModule","foreignModule","editorWorker","simpleWorker"],"mappings":"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","file":"editor.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"e500\");\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar _isWindows = false;\r\nvar _isMacintosh = false;\r\nvar _isLinux = false;\r\nvar _isNative = false;\r\nvar _isWeb = false;\r\nvar _locale = undefined;\r\nvar _language = undefined;\r\nvar _translationsConfigFile = undefined;\r\nexport var LANGUAGE_DEFAULT = 'en';\r\n// OS detection\r\n// if (typeof process === 'object' && typeof process.nextTick === 'function' && typeof process.platform === 'string') {\r\n//     _isWindows = (process.platform === 'win32');\r\n//     _isMacintosh = (process.platform === 'darwin');\r\n//     _isLinux = (process.platform === 'linux');\r\n//     _locale = LANGUAGE_DEFAULT;\r\n//     _language = LANGUAGE_DEFAULT;\r\n//     var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\r\n//     if (rawNlsConfig) {\r\n//         try {\r\n//             var nlsConfig = JSON.parse(rawNlsConfig);\r\n//             var resolved = nlsConfig.availableLanguages['*'];\r\n//             _locale = nlsConfig.locale;\r\n//             // VSCode's default language is 'en'\r\n//             _language = resolved ? resolved : LANGUAGE_DEFAULT;\r\n//             _translationsConfigFile = nlsConfig._translationsConfigFile;\r\n//         }\r\n//         catch (e) {\r\n//         }\r\n//     }\r\n//     _isNative = true;\r\n// }\r\n// else if (typeof navigator === 'object') {\r\nif (typeof navigator === 'object') {\r\n    var userAgent = navigator.userAgent;\r\n    _isWindows = userAgent.indexOf('Windows') >= 0;\r\n    _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\r\n    _isLinux = userAgent.indexOf('Linux') >= 0;\r\n    _isWeb = true;\r\n    _locale = navigator.language;\r\n    _language = _locale;\r\n}\r\nexport var Platform;\r\n(function (Platform) {\r\n    Platform[Platform[\"Web\"] = 0] = \"Web\";\r\n    Platform[Platform[\"Mac\"] = 1] = \"Mac\";\r\n    Platform[Platform[\"Linux\"] = 2] = \"Linux\";\r\n    Platform[Platform[\"Windows\"] = 3] = \"Windows\";\r\n})(Platform || (Platform = {}));\r\nvar _platform = Platform.Web;\r\nif (_isNative) {\r\n    if (_isMacintosh) {\r\n        _platform = Platform.Mac;\r\n    }\r\n    else if (_isWindows) {\r\n        _platform = Platform.Windows;\r\n    }\r\n    else if (_isLinux) {\r\n        _platform = Platform.Linux;\r\n    }\r\n}\r\nexport var isWindows = _isWindows;\r\nexport var isMacintosh = _isMacintosh;\r\nexport var isLinux = _isLinux;\r\nexport var isNative = _isNative;\r\nexport var isWeb = _isWeb;\r\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\r\nexport var globals = _globals;\r\nvar _setImmediate = null;\r\nexport function setImmediate(callback) {\r\n    if (_setImmediate === null) {\r\n        if (globals.setImmediate) {\r\n            _setImmediate = globals.setImmediate.bind(globals);\r\n        }\r\n        else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\r\n            _setImmediate = process.nextTick.bind(process);\r\n        }\r\n        else {\r\n            _setImmediate = globals.setTimeout.bind(globals);\r\n        }\r\n    }\r\n    return _setImmediate(callback);\r\n}\r\nexport var OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\r\n","exports.nextTick = function nextTick(fn) {\n\tsetTimeout(fn, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","/**\r\n * Extracted from https://github.com/winjs/winjs\r\n * Version: 4.4.0(ec3258a9f3a36805a187848984e3bb938044178d)\r\n * Copyright (c) Microsoft Corporation.\r\n * All Rights Reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar __winjs_exports;\r\n\r\n(function() {\r\n\r\nvar _modules = Object.create(null);//{};\r\n_modules[\"WinJS/Core/_WinJS\"] = {};\r\n\r\nvar _winjs = function(moduleId, deps, factory) {\r\n    var exports = {};\r\n    var exportsPassedIn = false;\r\n\r\n    var depsValues = deps.map(function(dep) {\r\n        if (dep === 'exports') {\r\n            exportsPassedIn = true;\r\n            return exports;\r\n        }\r\n        return _modules[dep];\r\n    });\r\n\r\n    var result = factory.apply({}, depsValues);\r\n\r\n    _modules[moduleId] = exportsPassedIn ? exports : result;\r\n};\r\n\r\n\r\n_winjs(\"WinJS/Core/_Global\", [], function () {\r\n    \"use strict\";\r\n\r\n    // Appease jshint\r\n    /* global window, self, global */\r\n\r\n    var globalObject =\r\n        typeof window !== 'undefined' ? window :\r\n        typeof self !== 'undefined' ? self :\r\n        typeof global !== 'undefined' ? global :\r\n        {};\r\n    return globalObject;\r\n});\r\n\r\n_winjs(\"WinJS/Core/_BaseCoreUtils\", [\"WinJS/Core/_Global\"], function baseCoreUtilsInit(_Global) {\r\n    \"use strict\";\r\n\r\n    var hasWinRT = !!_Global.Windows;\r\n\r\n    function markSupportedForProcessing(func) {\r\n        /// <signature helpKeyword=\"WinJS.Utilities.markSupportedForProcessing\">\r\n        /// <summary locid=\"WinJS.Utilities.markSupportedForProcessing\">\r\n        /// Marks a function as being compatible with declarative processing, such as WinJS.UI.processAll\r\n        /// or WinJS.Binding.processAll.\r\n        /// </summary>\r\n        /// <param name=\"func\" type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_p:func\">\r\n        /// The function to be marked as compatible with declarative processing.\r\n        /// </param>\r\n        /// <returns type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_returnValue\">\r\n        /// The input function.\r\n        /// </returns>\r\n        /// </signature>\r\n        func.supportedForProcessing = true;\r\n        return func;\r\n    }\r\n\r\n    var actualSetImmediate = null;\r\n\r\n    return {\r\n        hasWinRT: hasWinRT,\r\n        markSupportedForProcessing: markSupportedForProcessing,\r\n        _setImmediate: function (callback) {\r\n            // BEGIN monaco change\r\n            if (actualSetImmediate === null) {\r\n                if (_Global.setImmediate) {\r\n                    actualSetImmediate = _Global.setImmediate.bind(_Global);\r\n                } else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\r\n                    actualSetImmediate = process.nextTick.bind(process);\r\n                } else {\r\n                    actualSetImmediate = _Global.setTimeout.bind(_Global);\r\n                }\r\n            }\r\n            actualSetImmediate(callback);\r\n            // END monaco change\r\n        }\r\n    };\r\n});\r\n_winjs(\"WinJS/Core/_WriteProfilerMark\", [\"WinJS/Core/_Global\"], function profilerInit(_Global) {\r\n    \"use strict\";\r\n\r\n    return _Global.msWriteProfilerMark || function () { };\r\n});\r\n_winjs(\"WinJS/Core/_Base\", [\"WinJS/Core/_WinJS\",\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_WriteProfilerMark\"], function baseInit(_WinJS, _Global, _BaseCoreUtils, _WriteProfilerMark) {\r\n    \"use strict\";\r\n\r\n    function initializeProperties(target, members, prefix) {\r\n        var keys = Object.keys(members);\r\n        var isArray = Array.isArray(target);\r\n        var properties;\r\n        var i, len;\r\n        for (i = 0, len = keys.length; i < len; i++) {\r\n            var key = keys[i];\r\n            var enumerable = key.charCodeAt(0) !== /*_*/95;\r\n            var member = members[key];\r\n            if (member && typeof member === 'object') {\r\n                if (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\r\n                    if (member.enumerable === undefined) {\r\n                        member.enumerable = enumerable;\r\n                    }\r\n                    if (prefix && member.setName && typeof member.setName === 'function') {\r\n                        member.setName(prefix + \".\" + key);\r\n                    }\r\n                    properties = properties || {};\r\n                    properties[key] = member;\r\n                    continue;\r\n                }\r\n            }\r\n            if (!enumerable) {\r\n                properties = properties || {};\r\n                properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true };\r\n                continue;\r\n            }\r\n            if (isArray) {\r\n                target.forEach(function (target) {\r\n                    target[key] = member;\r\n                });\r\n            } else {\r\n                target[key] = member;\r\n            }\r\n        }\r\n        if (properties) {\r\n            if (isArray) {\r\n                target.forEach(function (target) {\r\n                    Object.defineProperties(target, properties);\r\n                });\r\n            } else {\r\n                Object.defineProperties(target, properties);\r\n            }\r\n        }\r\n    }\r\n\r\n    (function () {\r\n\r\n        var _rootNamespace = _WinJS;\r\n        if (!_rootNamespace.Namespace) {\r\n            _rootNamespace.Namespace = Object.create(Object.prototype);\r\n        }\r\n\r\n        function createNamespace(parentNamespace, name) {\r\n            var currentNamespace = parentNamespace || {};\r\n            if (name) {\r\n                var namespaceFragments = name.split(\".\");\r\n                if (currentNamespace === _Global && namespaceFragments[0] === \"WinJS\") {\r\n                    currentNamespace = _WinJS;\r\n                    namespaceFragments.splice(0, 1);\r\n                }\r\n                for (var i = 0, len = namespaceFragments.length; i < len; i++) {\r\n                    var namespaceName = namespaceFragments[i];\r\n                    if (!currentNamespace[namespaceName]) {\r\n                        Object.defineProperty(currentNamespace, namespaceName,\r\n                            { value: {}, writable: false, enumerable: true, configurable: true }\r\n                        );\r\n                    }\r\n                    currentNamespace = currentNamespace[namespaceName];\r\n                }\r\n            }\r\n            return currentNamespace;\r\n        }\r\n\r\n        function defineWithParent(parentNamespace, name, members) {\r\n            /// <signature helpKeyword=\"WinJS.Namespace.defineWithParent\">\r\n            /// <summary locid=\"WinJS.Namespace.defineWithParent\">\r\n            /// Defines a new namespace with the specified name under the specified parent namespace.\r\n            /// </summary>\r\n            /// <param name=\"parentNamespace\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:parentNamespace\">\r\n            /// The parent namespace.\r\n            /// </param>\r\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.defineWithParent_p:name\">\r\n            /// The name of the new namespace.\r\n            /// </param>\r\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:members\">\r\n            /// The members of the new namespace.\r\n            /// </param>\r\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_returnValue\">\r\n            /// The newly-defined namespace.\r\n            /// </returns>\r\n            /// </signature>\r\n            var currentNamespace = createNamespace(parentNamespace, name);\r\n\r\n            if (members) {\r\n                initializeProperties(currentNamespace, members, name || \"<ANONYMOUS>\");\r\n            }\r\n\r\n            return currentNamespace;\r\n        }\r\n\r\n        function define(name, members) {\r\n            /// <signature helpKeyword=\"WinJS.Namespace.define\">\r\n            /// <summary locid=\"WinJS.Namespace.define\">\r\n            /// Defines a new namespace with the specified name.\r\n            /// </summary>\r\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.define_p:name\">\r\n            /// The name of the namespace. This could be a dot-separated name for nested namespaces.\r\n            /// </param>\r\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.define_p:members\">\r\n            /// The members of the new namespace.\r\n            /// </param>\r\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.define_returnValue\">\r\n            /// The newly-defined namespace.\r\n            /// </returns>\r\n            /// </signature>\r\n            return defineWithParent(_Global, name, members);\r\n        }\r\n\r\n        var LazyStates = {\r\n            uninitialized: 1,\r\n            working: 2,\r\n            initialized: 3,\r\n        };\r\n\r\n        function lazy(f) {\r\n            var name;\r\n            var state = LazyStates.uninitialized;\r\n            var result;\r\n            return {\r\n                setName: function (value) {\r\n                    name = value;\r\n                },\r\n                get: function () {\r\n                    switch (state) {\r\n                        case LazyStates.initialized:\r\n                            return result;\r\n\r\n                        case LazyStates.uninitialized:\r\n                            state = LazyStates.working;\r\n                            try {\r\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StartTM\");\r\n                                result = f();\r\n                            } finally {\r\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StopTM\");\r\n                                state = LazyStates.uninitialized;\r\n                            }\r\n                            f = null;\r\n                            state = LazyStates.initialized;\r\n                            return result;\r\n\r\n                        case LazyStates.working:\r\n                            throw \"Illegal: reentrancy on initialization\";\r\n\r\n                        default:\r\n                            throw \"Illegal\";\r\n                    }\r\n                },\r\n                set: function (value) {\r\n                    switch (state) {\r\n                        case LazyStates.working:\r\n                            throw \"Illegal: reentrancy on initialization\";\r\n\r\n                        default:\r\n                            state = LazyStates.initialized;\r\n                            result = value;\r\n                            break;\r\n                    }\r\n                },\r\n                enumerable: true,\r\n                configurable: true,\r\n            };\r\n        }\r\n\r\n        // helper for defining AMD module members\r\n        function moduleDefine(exports, name, members) {\r\n            var target = [exports];\r\n            var publicNS = null;\r\n            if (name) {\r\n                publicNS = createNamespace(_Global, name);\r\n                target.push(publicNS);\r\n            }\r\n            initializeProperties(target, members, name || \"<ANONYMOUS>\");\r\n            return publicNS;\r\n        }\r\n\r\n        // Establish members of the \"WinJS.Namespace\" namespace\r\n        Object.defineProperties(_rootNamespace.Namespace, {\r\n\r\n            defineWithParent: { value: defineWithParent, writable: true, enumerable: true, configurable: true },\r\n\r\n            define: { value: define, writable: true, enumerable: true, configurable: true },\r\n\r\n            _lazy: { value: lazy, writable: true, enumerable: true, configurable: true },\r\n\r\n            _moduleDefine: { value: moduleDefine, writable: true, enumerable: true, configurable: true }\r\n\r\n        });\r\n\r\n    })();\r\n\r\n    (function () {\r\n\r\n        function define(constructor, instanceMembers, staticMembers) {\r\n            /// <signature helpKeyword=\"WinJS.Class.define\">\r\n            /// <summary locid=\"WinJS.Class.define\">\r\n            /// Defines a class using the given constructor and the specified instance members.\r\n            /// </summary>\r\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.define_p:constructor\">\r\n            /// A constructor function that is used to instantiate this class.\r\n            /// </param>\r\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:instanceMembers\">\r\n            /// The set of instance fields, properties, and methods made available on the class.\r\n            /// </param>\r\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:staticMembers\">\r\n            /// The set of static fields, properties, and methods made available on the class.\r\n            /// </param>\r\n            /// <returns type=\"Function\" locid=\"WinJS.Class.define_returnValue\">\r\n            /// The newly-defined class.\r\n            /// </returns>\r\n            /// </signature>\r\n            constructor = constructor || function () { };\r\n            _BaseCoreUtils.markSupportedForProcessing(constructor);\r\n            if (instanceMembers) {\r\n                initializeProperties(constructor.prototype, instanceMembers);\r\n            }\r\n            if (staticMembers) {\r\n                initializeProperties(constructor, staticMembers);\r\n            }\r\n            return constructor;\r\n        }\r\n\r\n        function derive(baseClass, constructor, instanceMembers, staticMembers) {\r\n            /// <signature helpKeyword=\"WinJS.Class.derive\">\r\n            /// <summary locid=\"WinJS.Class.derive\">\r\n            /// Creates a sub-class based on the supplied baseClass parameter, using prototypal inheritance.\r\n            /// </summary>\r\n            /// <param name=\"baseClass\" type=\"Function\" locid=\"WinJS.Class.derive_p:baseClass\">\r\n            /// The class to inherit from.\r\n            /// </param>\r\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.derive_p:constructor\">\r\n            /// A constructor function that is used to instantiate this class.\r\n            /// </param>\r\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:instanceMembers\">\r\n            /// The set of instance fields, properties, and methods to be made available on the class.\r\n            /// </param>\r\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:staticMembers\">\r\n            /// The set of static fields, properties, and methods to be made available on the class.\r\n            /// </param>\r\n            /// <returns type=\"Function\" locid=\"WinJS.Class.derive_returnValue\">\r\n            /// The newly-defined class.\r\n            /// </returns>\r\n            /// </signature>\r\n            if (baseClass) {\r\n                constructor = constructor || function () { };\r\n                var basePrototype = baseClass.prototype;\r\n                constructor.prototype = Object.create(basePrototype);\r\n                _BaseCoreUtils.markSupportedForProcessing(constructor);\r\n                Object.defineProperty(constructor.prototype, \"constructor\", { value: constructor, writable: true, configurable: true, enumerable: true });\r\n                if (instanceMembers) {\r\n                    initializeProperties(constructor.prototype, instanceMembers);\r\n                }\r\n                if (staticMembers) {\r\n                    initializeProperties(constructor, staticMembers);\r\n                }\r\n                return constructor;\r\n            } else {\r\n                return define(constructor, instanceMembers, staticMembers);\r\n            }\r\n        }\r\n\r\n        function mix(constructor) {\r\n            /// <signature helpKeyword=\"WinJS.Class.mix\">\r\n            /// <summary locid=\"WinJS.Class.mix\">\r\n            /// Defines a class using the given constructor and the union of the set of instance members\r\n            /// specified by all the mixin objects. The mixin parameter list is of variable length.\r\n            /// </summary>\r\n            /// <param name=\"constructor\" locid=\"WinJS.Class.mix_p:constructor\">\r\n            /// A constructor function that is used to instantiate this class.\r\n            /// </param>\r\n            /// <returns type=\"Function\" locid=\"WinJS.Class.mix_returnValue\">\r\n            /// The newly-defined class.\r\n            /// </returns>\r\n            /// </signature>\r\n            constructor = constructor || function () { };\r\n            var i, len;\r\n            for (i = 1, len = arguments.length; i < len; i++) {\r\n                initializeProperties(constructor.prototype, arguments[i]);\r\n            }\r\n            return constructor;\r\n        }\r\n\r\n        // Establish members of \"WinJS.Class\" namespace\r\n        _WinJS.Namespace.define(\"WinJS.Class\", {\r\n            define: define,\r\n            derive: derive,\r\n            mix: mix\r\n        });\r\n\r\n    })();\r\n\r\n    return {\r\n        Namespace: _WinJS.Namespace,\r\n        Class: _WinJS.Class\r\n    };\r\n\r\n});\r\n_winjs(\"WinJS/Core/_ErrorFromName\", [\"WinJS/Core/_Base\"], function errorsInit(_Base) {\r\n    \"use strict\";\r\n\r\n    var ErrorFromName = _Base.Class.derive(Error, function (name, message) {\r\n        /// <signature helpKeyword=\"WinJS.ErrorFromName\">\r\n        /// <summary locid=\"WinJS.ErrorFromName\">\r\n        /// Creates an Error object with the specified name and message properties.\r\n        /// </summary>\r\n        /// <param name=\"name\" type=\"String\" locid=\"WinJS.ErrorFromName_p:name\">The name of this error. The name is meant to be consumed programmatically and should not be localized.</param>\r\n        /// <param name=\"message\" type=\"String\" optional=\"true\" locid=\"WinJS.ErrorFromName_p:message\">The message for this error. The message is meant to be consumed by humans and should be localized.</param>\r\n        /// <returns type=\"Error\" locid=\"WinJS.ErrorFromName_returnValue\">Error instance with .name and .message properties populated</returns>\r\n        /// </signature>\r\n        this.name = name;\r\n        this.message = message || name;\r\n    }, {\r\n        /* empty */\r\n    }, {\r\n        supportedForProcessing: false,\r\n    });\r\n\r\n    _Base.Namespace.define(\"WinJS\", {\r\n        // ErrorFromName establishes a simple pattern for returning error codes.\r\n        //\r\n        ErrorFromName: ErrorFromName\r\n    });\r\n\r\n    return ErrorFromName;\r\n\r\n});\r\n\r\n\r\n_winjs(\"WinJS/Core/_Events\", [\"exports\",\"WinJS/Core/_Base\"], function eventsInit(exports, _Base) {\r\n    \"use strict\";\r\n\r\n\r\n    function createEventProperty(name) {\r\n        var eventPropStateName = \"_on\" + name + \"state\";\r\n\r\n        return {\r\n            get: function () {\r\n                var state = this[eventPropStateName];\r\n                return state && state.userHandler;\r\n            },\r\n            set: function (handler) {\r\n                var state = this[eventPropStateName];\r\n                if (handler) {\r\n                    if (!state) {\r\n                        state = { wrapper: function (evt) { return state.userHandler(evt); }, userHandler: handler };\r\n                        Object.defineProperty(this, eventPropStateName, { value: state, enumerable: false, writable:true, configurable: true });\r\n                        this.addEventListener(name, state.wrapper, false);\r\n                    }\r\n                    state.userHandler = handler;\r\n                } else if (state) {\r\n                    this.removeEventListener(name, state.wrapper, false);\r\n                    this[eventPropStateName] = null;\r\n                }\r\n            },\r\n            enumerable: true\r\n        };\r\n    }\r\n\r\n    function createEventProperties() {\r\n        /// <signature helpKeyword=\"WinJS.Utilities.createEventProperties\">\r\n        /// <summary locid=\"WinJS.Utilities.createEventProperties\">\r\n        /// Creates an object that has one property for each name passed to the function.\r\n        /// </summary>\r\n        /// <param name=\"events\" locid=\"WinJS.Utilities.createEventProperties_p:events\">\r\n        /// A variable list of property names.\r\n        /// </param>\r\n        /// <returns type=\"Object\" locid=\"WinJS.Utilities.createEventProperties_returnValue\">\r\n        /// The object with the specified properties. The names of the properties are prefixed with 'on'.\r\n        /// </returns>\r\n        /// </signature>\r\n        var props = {};\r\n        for (var i = 0, len = arguments.length; i < len; i++) {\r\n            var name = arguments[i];\r\n            props[\"on\" + name] = createEventProperty(name);\r\n        }\r\n        return props;\r\n    }\r\n\r\n    var EventMixinEvent = _Base.Class.define(\r\n        function EventMixinEvent_ctor(type, detail, target) {\r\n            this.detail = detail;\r\n            this.target = target;\r\n            this.timeStamp = Date.now();\r\n            this.type = type;\r\n        },\r\n        {\r\n            bubbles: { value: false, writable: false },\r\n            cancelable: { value: false, writable: false },\r\n            currentTarget: {\r\n                get: function () { return this.target; }\r\n            },\r\n            defaultPrevented: {\r\n                get: function () { return this._preventDefaultCalled; }\r\n            },\r\n            trusted: { value: false, writable: false },\r\n            eventPhase: { value: 0, writable: false },\r\n            target: null,\r\n            timeStamp: null,\r\n            type: null,\r\n\r\n            preventDefault: function () {\r\n                this._preventDefaultCalled = true;\r\n            },\r\n            stopImmediatePropagation: function () {\r\n                this._stopImmediatePropagationCalled = true;\r\n            },\r\n            stopPropagation: function () {\r\n            }\r\n        }, {\r\n            supportedForProcessing: false,\r\n        }\r\n    );\r\n\r\n    var eventMixin = {\r\n        _listeners: null,\r\n\r\n        addEventListener: function (type, listener, useCapture) {\r\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.addEventListener\">\r\n            /// <summary locid=\"WinJS.Utilities.eventMixin.addEventListener\">\r\n            /// Adds an event listener to the control.\r\n            /// </summary>\r\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:type\">\r\n            /// The type (name) of the event.\r\n            /// </param>\r\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:listener\">\r\n            /// The listener to invoke when the event is raised.\r\n            /// </param>\r\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:useCapture\">\r\n            /// if true initiates capture, otherwise false.\r\n            /// </param>\r\n            /// </signature>\r\n            useCapture = useCapture || false;\r\n            this._listeners = this._listeners || {};\r\n            var eventListeners = (this._listeners[type] = this._listeners[type] || []);\r\n            for (var i = 0, len = eventListeners.length; i < len; i++) {\r\n                var l = eventListeners[i];\r\n                if (l.useCapture === useCapture && l.listener === listener) {\r\n                    return;\r\n                }\r\n            }\r\n            eventListeners.push({ listener: listener, useCapture: useCapture });\r\n        },\r\n        dispatchEvent: function (type, details) {\r\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.dispatchEvent\">\r\n            /// <summary locid=\"WinJS.Utilities.eventMixin.dispatchEvent\">\r\n            /// Raises an event of the specified type and with the specified additional properties.\r\n            /// </summary>\r\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:type\">\r\n            /// The type (name) of the event.\r\n            /// </param>\r\n            /// <param name=\"details\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:details\">\r\n            /// The set of additional properties to be attached to the event object when the event is raised.\r\n            /// </param>\r\n            /// <returns type=\"Boolean\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_returnValue\">\r\n            /// true if preventDefault was called on the event.\r\n            /// </returns>\r\n            /// </signature>\r\n            var listeners = this._listeners && this._listeners[type];\r\n            if (listeners) {\r\n                var eventValue = new EventMixinEvent(type, details, this);\r\n                // Need to copy the array to protect against people unregistering while we are dispatching\r\n                listeners = listeners.slice(0, listeners.length);\r\n                for (var i = 0, len = listeners.length; i < len && !eventValue._stopImmediatePropagationCalled; i++) {\r\n                    listeners[i].listener(eventValue);\r\n                }\r\n                return eventValue.defaultPrevented || false;\r\n            }\r\n            return false;\r\n        },\r\n        removeEventListener: function (type, listener, useCapture) {\r\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.removeEventListener\">\r\n            /// <summary locid=\"WinJS.Utilities.eventMixin.removeEventListener\">\r\n            /// Removes an event listener from the control.\r\n            /// </summary>\r\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:type\">\r\n            /// The type (name) of the event.\r\n            /// </param>\r\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:listener\">\r\n            /// The listener to remove.\r\n            /// </param>\r\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:useCapture\">\r\n            /// Specifies whether to initiate capture.\r\n            /// </param>\r\n            /// </signature>\r\n            useCapture = useCapture || false;\r\n            var listeners = this._listeners && this._listeners[type];\r\n            if (listeners) {\r\n                for (var i = 0, len = listeners.length; i < len; i++) {\r\n                    var l = listeners[i];\r\n                    if (l.listener === listener && l.useCapture === useCapture) {\r\n                        listeners.splice(i, 1);\r\n                        if (listeners.length === 0) {\r\n                            delete this._listeners[type];\r\n                        }\r\n                        // Only want to remove one element for each call to removeEventListener\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    _Base.Namespace._moduleDefine(exports, \"WinJS.Utilities\", {\r\n        _createEventProperty: createEventProperty,\r\n        createEventProperties: createEventProperties,\r\n        eventMixin: eventMixin\r\n    });\r\n\r\n});\r\n\r\n\r\n_winjs(\"WinJS/Core/_Trace\", [\"WinJS/Core/_Global\"], function traceInit(_Global) {\r\n    \"use strict\";\r\n\r\n    function nop(v) {\r\n        return v;\r\n    }\r\n\r\n    return {\r\n        _traceAsyncOperationStarting: (_Global.Debug && _Global.Debug.msTraceAsyncOperationStarting && _Global.Debug.msTraceAsyncOperationStarting.bind(_Global.Debug)) || nop,\r\n        _traceAsyncOperationCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncOperationCompleted && _Global.Debug.msTraceAsyncOperationCompleted.bind(_Global.Debug)) || nop,\r\n        _traceAsyncCallbackStarting: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackStarting && _Global.Debug.msTraceAsyncCallbackStarting.bind(_Global.Debug)) || nop,\r\n        _traceAsyncCallbackCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackCompleted && _Global.Debug.msTraceAsyncCallbackCompleted.bind(_Global.Debug)) || nop\r\n    };\r\n});\r\n_winjs(\"WinJS/Promise/_StateMachine\", [\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_Base\",\"WinJS/Core/_ErrorFromName\",\"WinJS/Core/_Events\",\"WinJS/Core/_Trace\"], function promiseStateMachineInit(_Global, _BaseCoreUtils, _Base, _ErrorFromName, _Events, _Trace) {\r\n    \"use strict\";\r\n\r\n    _Global.Debug && (_Global.Debug.setNonUserCodeExceptions = true);\r\n\r\n    var ListenerType = _Base.Class.mix(_Base.Class.define(null, { /*empty*/ }, { supportedForProcessing: false }), _Events.eventMixin);\r\n    var promiseEventListeners = new ListenerType();\r\n    // make sure there is a listeners collection so that we can do a more trivial check below\r\n    promiseEventListeners._listeners = {};\r\n    var errorET = \"error\";\r\n    var canceledName = \"Canceled\";\r\n    var tagWithStack = false;\r\n    var tag = {\r\n        promise: 0x01,\r\n        thenPromise: 0x02,\r\n        errorPromise: 0x04,\r\n        exceptionPromise: 0x08,\r\n        completePromise: 0x10,\r\n    };\r\n    tag.all = tag.promise | tag.thenPromise | tag.errorPromise | tag.exceptionPromise | tag.completePromise;\r\n\r\n    //\r\n    // Global error counter, for each error which enters the system we increment this once and then\r\n    // the error number travels with the error as it traverses the tree of potential handlers.\r\n    //\r\n    // When someone has registered to be told about errors (WinJS.Promise.callonerror) promises\r\n    // which are in error will get tagged with a ._errorId field. This tagged field is the\r\n    // contract by which nested promises with errors will be identified as chaining for the\r\n    // purposes of the callonerror semantics. If a nested promise in error is encountered without\r\n    // a ._errorId it will be assumed to be foreign and treated as an interop boundary and\r\n    // a new error id will be minted.\r\n    //\r\n    var error_number = 1;\r\n\r\n    //\r\n    // The state machine has a interesting hiccup in it with regards to notification, in order\r\n    // to flatten out notification and avoid recursion for synchronous completion we have an\r\n    // explicit set of *_notify states which are responsible for notifying their entire tree\r\n    // of children. They can do this because they know that immediate children are always\r\n    // ThenPromise instances and we can therefore reach into their state to access the\r\n    // _listeners collection.\r\n    //\r\n    // So, what happens is that a Promise will be fulfilled through the _completed or _error\r\n    // messages at which point it will enter a *_notify state and be responsible for to move\r\n    // its children into an (as appropriate) success or error state and also notify that child's\r\n    // listeners of the state transition, until leaf notes are reached.\r\n    //\r\n\r\n    var state_created,              // -> working\r\n        state_working,              // -> error | error_notify | success | success_notify | canceled | waiting\r\n        state_waiting,              // -> error | error_notify | success | success_notify | waiting_canceled\r\n        state_waiting_canceled,     // -> error | error_notify | success | success_notify | canceling\r\n        state_canceled,             // -> error | error_notify | success | success_notify | canceling\r\n        state_canceling,            // -> error_notify\r\n        state_success_notify,       // -> success\r\n        state_success,              // -> .\r\n        state_error_notify,         // -> error\r\n        state_error;                // -> .\r\n\r\n    // Noop function, used in the various states to indicate that they don't support a given\r\n    // message. Named with the somewhat cute name '_' because it reads really well in the states.\r\n\r\n    function _() { }\r\n\r\n    // Initial state\r\n    //\r\n    state_created = {\r\n        name: \"created\",\r\n        enter: function (promise) {\r\n            promise._setState(state_working);\r\n        },\r\n        cancel: _,\r\n        done: _,\r\n        then: _,\r\n        _completed: _,\r\n        _error: _,\r\n        _notify: _,\r\n        _progress: _,\r\n        _setCompleteValue: _,\r\n        _setErrorValue: _\r\n    };\r\n\r\n    // Ready state, waiting for a message (completed/error/progress), able to be canceled\r\n    //\r\n    state_working = {\r\n        name: \"working\",\r\n        enter: _,\r\n        cancel: function (promise) {\r\n            promise._setState(state_canceled);\r\n        },\r\n        done: done,\r\n        then: then,\r\n        _completed: completed,\r\n        _error: error,\r\n        _notify: _,\r\n        _progress: progress,\r\n        _setCompleteValue: setCompleteValue,\r\n        _setErrorValue: setErrorValue\r\n    };\r\n\r\n    // Waiting state, if a promise is completed with a value which is itself a promise\r\n    // (has a then() method) it signs up to be informed when that child promise is\r\n    // fulfilled at which point it will be fulfilled with that value.\r\n    //\r\n    state_waiting = {\r\n        name: \"waiting\",\r\n        enter: function (promise) {\r\n            var waitedUpon = promise._value;\r\n            // We can special case our own intermediate promises which are not in a\r\n            //  terminal state by just pushing this promise as a listener without\r\n            //  having to create new indirection functions\r\n            if (waitedUpon instanceof ThenPromise &&\r\n                waitedUpon._state !== state_error &&\r\n                waitedUpon._state !== state_success) {\r\n                pushListener(waitedUpon, { promise: promise });\r\n            } else {\r\n                var error = function (value) {\r\n                    if (waitedUpon._errorId) {\r\n                        promise._chainedError(value, waitedUpon);\r\n                    } else {\r\n                        // Because this is an interop boundary we want to indicate that this\r\n                        //  error has been handled by the promise infrastructure before we\r\n                        //  begin a new handling chain.\r\n                        //\r\n                        callonerror(promise, value, detailsForHandledError, waitedUpon, error);\r\n                        promise._error(value);\r\n                    }\r\n                };\r\n                error.handlesOnError = true;\r\n                waitedUpon.then(\r\n                    promise._completed.bind(promise),\r\n                    error,\r\n                    promise._progress.bind(promise)\r\n                );\r\n            }\r\n        },\r\n        cancel: function (promise) {\r\n            promise._setState(state_waiting_canceled);\r\n        },\r\n        done: done,\r\n        then: then,\r\n        _completed: completed,\r\n        _error: error,\r\n        _notify: _,\r\n        _progress: progress,\r\n        _setCompleteValue: setCompleteValue,\r\n        _setErrorValue: setErrorValue\r\n    };\r\n\r\n    // Waiting canceled state, when a promise has been in a waiting state and receives a\r\n    // request to cancel its pending work it will forward that request to the child promise\r\n    // and then waits to be informed of the result. This promise moves itself into the\r\n    // canceling state but understands that the child promise may instead push it to a\r\n    // different state.\r\n    //\r\n    state_waiting_canceled = {\r\n        name: \"waiting_canceled\",\r\n        enter: function (promise) {\r\n            // Initiate a transition to canceling. Triggering a cancel on the promise\r\n            // that we are waiting upon may result in a different state transition\r\n            // before the state machine pump runs again.\r\n            promise._setState(state_canceling);\r\n            var waitedUpon = promise._value;\r\n            if (waitedUpon.cancel) {\r\n                waitedUpon.cancel();\r\n            }\r\n        },\r\n        cancel: _,\r\n        done: done,\r\n        then: then,\r\n        _completed: completed,\r\n        _error: error,\r\n        _notify: _,\r\n        _progress: progress,\r\n        _setCompleteValue: setCompleteValue,\r\n        _setErrorValue: setErrorValue\r\n    };\r\n\r\n    // Canceled state, moves to the canceling state and then tells the promise to do\r\n    // whatever it might need to do on cancelation.\r\n    //\r\n    state_canceled = {\r\n        name: \"canceled\",\r\n        enter: function (promise) {\r\n            // Initiate a transition to canceling. The _cancelAction may change the state\r\n            // before the state machine pump runs again.\r\n            promise._setState(state_canceling);\r\n            promise._cancelAction();\r\n        },\r\n        cancel: _,\r\n        done: done,\r\n        then: then,\r\n        _completed: completed,\r\n        _error: error,\r\n        _notify: _,\r\n        _progress: progress,\r\n        _setCompleteValue: setCompleteValue,\r\n        _setErrorValue: setErrorValue\r\n    };\r\n\r\n    // Canceling state, commits to the promise moving to an error state with an error\r\n    // object whose 'name' and 'message' properties contain the string \"Canceled\"\r\n    //\r\n    state_canceling = {\r\n        name: \"canceling\",\r\n        enter: function (promise) {\r\n            var error = new Error(canceledName);\r\n            error.name = error.message;\r\n            promise._value = error;\r\n            promise._setState(state_error_notify);\r\n        },\r\n        cancel: _,\r\n        done: _,\r\n        then: _,\r\n        _completed: _,\r\n        _error: _,\r\n        _notify: _,\r\n        _progress: _,\r\n        _setCompleteValue: _,\r\n        _setErrorValue: _\r\n    };\r\n\r\n    // Success notify state, moves a promise to the success state and notifies all children\r\n    //\r\n    state_success_notify = {\r\n        name: \"complete_notify\",\r\n        enter: function (promise) {\r\n            promise.done = CompletePromise.prototype.done;\r\n            promise.then = CompletePromise.prototype.then;\r\n            if (promise._listeners) {\r\n                var queue = [promise];\r\n                var p;\r\n                while (queue.length) {\r\n                    p = queue.shift();\r\n                    p._state._notify(p, queue);\r\n                }\r\n            }\r\n            promise._setState(state_success);\r\n        },\r\n        cancel: _,\r\n        done: null, /*error to get here */\r\n        then: null, /*error to get here */\r\n        _completed: _,\r\n        _error: _,\r\n        _notify: notifySuccess,\r\n        _progress: _,\r\n        _setCompleteValue: _,\r\n        _setErrorValue: _\r\n    };\r\n\r\n    // Success state, moves a promise to the success state and does NOT notify any children.\r\n    // Some upstream promise is owning the notification pass.\r\n    //\r\n    state_success = {\r\n        name: \"success\",\r\n        enter: function (promise) {\r\n            promise.done = CompletePromise.prototype.done;\r\n            promise.then = CompletePromise.prototype.then;\r\n            promise._cleanupAction();\r\n        },\r\n        cancel: _,\r\n        done: null, /*error to get here */\r\n        then: null, /*error to get here */\r\n        _completed: _,\r\n        _error: _,\r\n        _notify: notifySuccess,\r\n        _progress: _,\r\n        _setCompleteValue: _,\r\n        _setErrorValue: _\r\n    };\r\n\r\n    // Error notify state, moves a promise to the error state and notifies all children\r\n    //\r\n    state_error_notify = {\r\n        name: \"error_notify\",\r\n        enter: function (promise) {\r\n            promise.done = ErrorPromise.prototype.done;\r\n            promise.then = ErrorPromise.prototype.then;\r\n            if (promise._listeners) {\r\n                var queue = [promise];\r\n                var p;\r\n                while (queue.length) {\r\n                    p = queue.shift();\r\n                    p._state._notify(p, queue);\r\n                }\r\n            }\r\n            promise._setState(state_error);\r\n        },\r\n        cancel: _,\r\n        done: null, /*error to get here*/\r\n        then: null, /*error to get here*/\r\n        _completed: _,\r\n        _error: _,\r\n        _notify: notifyError,\r\n        _progress: _,\r\n        _setCompleteValue: _,\r\n        _setErrorValue: _\r\n    };\r\n\r\n    // Error state, moves a promise to the error state and does NOT notify any children.\r\n    // Some upstream promise is owning the notification pass.\r\n    //\r\n    state_error = {\r\n        name: \"error\",\r\n        enter: function (promise) {\r\n            promise.done = ErrorPromise.prototype.done;\r\n            promise.then = ErrorPromise.prototype.then;\r\n            promise._cleanupAction();\r\n        },\r\n        cancel: _,\r\n        done: null, /*error to get here*/\r\n        then: null, /*error to get here*/\r\n        _completed: _,\r\n        _error: _,\r\n        _notify: notifyError,\r\n        _progress: _,\r\n        _setCompleteValue: _,\r\n        _setErrorValue: _\r\n    };\r\n\r\n    //\r\n    // The statemachine implementation follows a very particular pattern, the states are specified\r\n    // as static stateless bags of functions which are then indirected through the state machine\r\n    // instance (a Promise). As such all of the functions on each state have the promise instance\r\n    // passed to them explicitly as a parameter and the Promise instance members do a little\r\n    // dance where they indirect through the state and insert themselves in the argument list.\r\n    //\r\n    // We could instead call directly through the promise states however then every caller\r\n    // would have to remember to do things like pumping the state machine to catch state transitions.\r\n    //\r\n\r\n    var PromiseStateMachine = _Base.Class.define(null, {\r\n        _listeners: null,\r\n        _nextState: null,\r\n        _state: null,\r\n        _value: null,\r\n\r\n        cancel: function () {\r\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\r\n            /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\r\n            /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\r\n            /// already been fulfilled and cancellation is supported, the promise enters\r\n            /// the error state with a value of Error(\"Canceled\").\r\n            /// </summary>\r\n            /// </signature>\r\n            this._state.cancel(this);\r\n            this._run();\r\n        },\r\n        done: function Promise_done(onComplete, onError, onProgress) {\r\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\r\n            /// <summary locid=\"WinJS.PromiseStateMachine.done\">\r\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\r\n            /// the error handling to be performed if the promise fails to fulfill\r\n            /// a value, and the handling of progress notifications along the way.\r\n            ///\r\n            /// After the handlers have finished executing, this function throws any error that would have been returned\r\n            /// from then() as a promise in the error state.\r\n            /// </summary>\r\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\r\n            /// The function to be called if the promise is fulfilled successfully with a value.\r\n            /// The fulfilled value is passed as the single argument. If the value is null,\r\n            /// the fulfilled value is returned. The value returned\r\n            /// from the function becomes the fulfilled value of the promise returned by\r\n            /// then(). If an exception is thrown while executing the function, the promise returned\r\n            /// by then() moves into the error state.\r\n            /// </param>\r\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\r\n            /// The function to be called if the promise is fulfilled with an error. The error\r\n            /// is passed as the single argument. If it is null, the error is forwarded.\r\n            /// The value returned from the function is the fulfilled value of the promise returned by then().\r\n            /// </param>\r\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\r\n            /// the function to be called if the promise reports progress. Data about the progress\r\n            /// is passed as the single argument. Promises are not required to support\r\n            /// progress.\r\n            /// </param>\r\n            /// </signature>\r\n            this._state.done(this, onComplete, onError, onProgress);\r\n        },\r\n        then: function Promise_then(onComplete, onError, onProgress) {\r\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\r\n            /// <summary locid=\"WinJS.PromiseStateMachine.then\">\r\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\r\n            /// the error handling to be performed if the promise fails to fulfill\r\n            /// a value, and the handling of progress notifications along the way.\r\n            /// </summary>\r\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\r\n            /// The function to be called if the promise is fulfilled successfully with a value.\r\n            /// The value is passed as the single argument. If the value is null, the value is returned.\r\n            /// The value returned from the function becomes the fulfilled value of the promise returned by\r\n            /// then(). If an exception is thrown while this function is being executed, the promise returned\r\n            /// by then() moves into the error state.\r\n            /// </param>\r\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\r\n            /// The function to be called if the promise is fulfilled with an error. The error\r\n            /// is passed as the single argument. If it is null, the error is forwarded.\r\n            /// The value returned from the function becomes the fulfilled value of the promise returned by then().\r\n            /// </param>\r\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\r\n            /// The function to be called if the promise reports progress. Data about the progress\r\n            /// is passed as the single argument. Promises are not required to support\r\n            /// progress.\r\n            /// </param>\r\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\r\n            /// The promise whose value is the result of executing the complete or\r\n            /// error function.\r\n            /// </returns>\r\n            /// </signature>\r\n            // BEGIN monaco change\r\n            if (this.then !== Promise_then) {\r\n                this.then(onComplete, onError, onProgress);\r\n                return;\r\n            }\r\n            // END monaco change\r\n            return this._state.then(this, onComplete, onError, onProgress);\r\n        },\r\n\r\n        _chainedError: function (value, context) {\r\n            var result = this._state._error(this, value, detailsForChainedError, context);\r\n            this._run();\r\n            return result;\r\n        },\r\n        _completed: function (value) {\r\n            var result = this._state._completed(this, value);\r\n            this._run();\r\n            return result;\r\n        },\r\n        _error: function (value) {\r\n            var result = this._state._error(this, value, detailsForError);\r\n            this._run();\r\n            return result;\r\n        },\r\n        _progress: function (value) {\r\n            this._state._progress(this, value);\r\n        },\r\n        _setState: function (state) {\r\n            this._nextState = state;\r\n        },\r\n        _setCompleteValue: function (value) {\r\n            this._state._setCompleteValue(this, value);\r\n            this._run();\r\n        },\r\n        _setChainedErrorValue: function (value, context) {\r\n            var result = this._state._setErrorValue(this, value, detailsForChainedError, context);\r\n            this._run();\r\n            return result;\r\n        },\r\n        _setExceptionValue: function (value) {\r\n            var result = this._state._setErrorValue(this, value, detailsForException);\r\n            this._run();\r\n            return result;\r\n        },\r\n        _run: function () {\r\n            while (this._nextState) {\r\n                this._state = this._nextState;\r\n                this._nextState = null;\r\n                this._state.enter(this);\r\n            }\r\n        }\r\n    }, {\r\n        supportedForProcessing: false\r\n    });\r\n\r\n    //\r\n    // Implementations of shared state machine code.\r\n    //\r\n\r\n    function completed(promise, value) {\r\n        var targetState;\r\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\r\n            targetState = state_waiting;\r\n        } else {\r\n            targetState = state_success_notify;\r\n        }\r\n        promise._value = value;\r\n        promise._setState(targetState);\r\n    }\r\n    function createErrorDetails(exception, error, promise, id, parent, handler) {\r\n        return {\r\n            exception: exception,\r\n            error: error,\r\n            promise: promise,\r\n            handler: handler,\r\n            id: id,\r\n            parent: parent\r\n        };\r\n    }\r\n    function detailsForHandledError(promise, errorValue, context, handler) {\r\n        var exception = context._isException;\r\n        var errorId = context._errorId;\r\n        return createErrorDetails(\r\n            exception ? errorValue : null,\r\n            exception ? null : errorValue,\r\n            promise,\r\n            errorId,\r\n            context,\r\n            handler\r\n        );\r\n    }\r\n    function detailsForChainedError(promise, errorValue, context) {\r\n        var exception = context._isException;\r\n        var errorId = context._errorId;\r\n        setErrorInfo(promise, errorId, exception);\r\n        return createErrorDetails(\r\n            exception ? errorValue : null,\r\n            exception ? null : errorValue,\r\n            promise,\r\n            errorId,\r\n            context\r\n        );\r\n    }\r\n    function detailsForError(promise, errorValue) {\r\n        var errorId = ++error_number;\r\n        setErrorInfo(promise, errorId);\r\n        return createErrorDetails(\r\n            null,\r\n            errorValue,\r\n            promise,\r\n            errorId\r\n        );\r\n    }\r\n    function detailsForException(promise, exceptionValue) {\r\n        var errorId = ++error_number;\r\n        setErrorInfo(promise, errorId, true);\r\n        return createErrorDetails(\r\n            exceptionValue,\r\n            null,\r\n            promise,\r\n            errorId\r\n        );\r\n    }\r\n    function done(promise, onComplete, onError, onProgress) {\r\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.done\");\r\n        pushListener(promise, { c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\r\n    }\r\n    function error(promise, value, onerrorDetails, context) {\r\n        promise._value = value;\r\n        callonerror(promise, value, onerrorDetails, context);\r\n        promise._setState(state_error_notify);\r\n    }\r\n    function notifySuccess(promise, queue) {\r\n        var value = promise._value;\r\n        var listeners = promise._listeners;\r\n        if (!listeners) {\r\n            return;\r\n        }\r\n        promise._listeners = null;\r\n        var i, len;\r\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\r\n            var listener = len === 1 ? listeners : listeners[i];\r\n            var onComplete = listener.c;\r\n            var target = listener.promise;\r\n\r\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, _Global.Debug && _Global.Debug.MS_ASYNC_OP_STATUS_SUCCESS);\r\n\r\n            if (target) {\r\n                _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\r\n                try {\r\n                    target._setCompleteValue(onComplete ? onComplete(value) : value);\r\n                } catch (ex) {\r\n                    target._setExceptionValue(ex);\r\n                } finally {\r\n                    _Trace._traceAsyncCallbackCompleted();\r\n                }\r\n                if (target._state !== state_waiting && target._listeners) {\r\n                    queue.push(target);\r\n                }\r\n            } else {\r\n                CompletePromise.prototype.done.call(promise, onComplete);\r\n            }\r\n        }\r\n    }\r\n    function notifyError(promise, queue) {\r\n        var value = promise._value;\r\n        var listeners = promise._listeners;\r\n        if (!listeners) {\r\n            return;\r\n        }\r\n        promise._listeners = null;\r\n        var i, len;\r\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\r\n            var listener = len === 1 ? listeners : listeners[i];\r\n            var onError = listener.e;\r\n            var target = listener.promise;\r\n\r\n            var errorID = _Global.Debug && (value && value.name === canceledName ? _Global.Debug.MS_ASYNC_OP_STATUS_CANCELED : _Global.Debug.MS_ASYNC_OP_STATUS_ERROR);\r\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, errorID);\r\n\r\n            if (target) {\r\n                var asyncCallbackStarted = false;\r\n                try {\r\n                    if (onError) {\r\n                        _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\r\n                        asyncCallbackStarted = true;\r\n                        if (!onError.handlesOnError) {\r\n                            callonerror(target, value, detailsForHandledError, promise, onError);\r\n                        }\r\n                        target._setCompleteValue(onError(value));\r\n                    } else {\r\n                        target._setChainedErrorValue(value, promise);\r\n                    }\r\n                } catch (ex) {\r\n                    target._setExceptionValue(ex);\r\n                } finally {\r\n                    if (asyncCallbackStarted) {\r\n                        _Trace._traceAsyncCallbackCompleted();\r\n                    }\r\n                }\r\n                if (target._state !== state_waiting && target._listeners) {\r\n                    queue.push(target);\r\n                }\r\n            } else {\r\n                ErrorPromise.prototype.done.call(promise, null, onError);\r\n            }\r\n        }\r\n    }\r\n    function callonerror(promise, value, onerrorDetailsGenerator, context, handler) {\r\n        if (promiseEventListeners._listeners[errorET]) {\r\n            if (value instanceof Error && value.message === canceledName) {\r\n                return;\r\n            }\r\n            promiseEventListeners.dispatchEvent(errorET, onerrorDetailsGenerator(promise, value, context, handler));\r\n        }\r\n    }\r\n    function progress(promise, value) {\r\n        var listeners = promise._listeners;\r\n        if (listeners) {\r\n            var i, len;\r\n            for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\r\n                var listener = len === 1 ? listeners : listeners[i];\r\n                var onProgress = listener.p;\r\n                if (onProgress) {\r\n                    try { onProgress(value); } catch (ex) { }\r\n                }\r\n                if (!(listener.c || listener.e) && listener.promise) {\r\n                    listener.promise._progress(value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function pushListener(promise, listener) {\r\n        var listeners = promise._listeners;\r\n        if (listeners) {\r\n            // We may have either a single listener (which will never be wrapped in an array)\r\n            // or 2+ listeners (which will be wrapped). Since we are now adding one more listener\r\n            // we may have to wrap the single listener before adding the second.\r\n            listeners = Array.isArray(listeners) ? listeners : [listeners];\r\n            listeners.push(listener);\r\n        } else {\r\n            listeners = listener;\r\n        }\r\n        promise._listeners = listeners;\r\n    }\r\n    // The difference beween setCompleteValue()/setErrorValue() and complete()/error() is that setXXXValue() moves\r\n    // a promise directly to the success/error state without starting another notification pass (because one\r\n    // is already ongoing).\r\n    function setErrorInfo(promise, errorId, isException) {\r\n        promise._isException = isException || false;\r\n        promise._errorId = errorId;\r\n    }\r\n    function setErrorValue(promise, value, onerrorDetails, context) {\r\n        promise._value = value;\r\n        callonerror(promise, value, onerrorDetails, context);\r\n        promise._setState(state_error);\r\n    }\r\n    function setCompleteValue(promise, value) {\r\n        var targetState;\r\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\r\n            targetState = state_waiting;\r\n        } else {\r\n            targetState = state_success;\r\n        }\r\n        promise._value = value;\r\n        promise._setState(targetState);\r\n    }\r\n    function then(promise, onComplete, onError, onProgress) {\r\n        var result = new ThenPromise(promise);\r\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.then\");\r\n        pushListener(promise, { promise: result, c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\r\n        return result;\r\n    }\r\n\r\n    //\r\n    // Internal implementation detail promise, ThenPromise is created when a promise needs\r\n    // to be returned from a then() method.\r\n    //\r\n    var ThenPromise = _Base.Class.derive(PromiseStateMachine,\r\n        function (creator) {\r\n\r\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.thenPromise))) {\r\n                this._stack = Promise._getStack();\r\n            }\r\n\r\n            this._creator = creator;\r\n            this._setState(state_created);\r\n            this._run();\r\n        }, {\r\n            _creator: null,\r\n\r\n            _cancelAction: function () { if (this._creator) { this._creator.cancel(); } },\r\n            _cleanupAction: function () { this._creator = null; }\r\n        }, {\r\n            supportedForProcessing: false\r\n        }\r\n    );\r\n\r\n    //\r\n    // Slim promise implementations for already completed promises, these are created\r\n    // under the hood on synchronous completion paths as well as by WinJS.Promise.wrap\r\n    // and WinJS.Promise.wrapError.\r\n    //\r\n\r\n    var ErrorPromise = _Base.Class.define(\r\n        function ErrorPromise_ctor(value) {\r\n\r\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.errorPromise))) {\r\n                this._stack = Promise._getStack();\r\n            }\r\n\r\n            this._value = value;\r\n            callonerror(this, value, detailsForError);\r\n        }, {\r\n            cancel: function () {\r\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\r\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\r\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\r\n                /// already been fulfilled and cancellation is supported, the promise enters\r\n                /// the error state with a value of Error(\"Canceled\").\r\n                /// </summary>\r\n                /// </signature>\r\n            },\r\n            done: function ErrorPromise_done(unused, onError) {\r\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\r\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\r\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\r\n                /// the error handling to be performed if the promise fails to fulfill\r\n                /// a value, and the handling of progress notifications along the way.\r\n                ///\r\n                /// After the handlers have finished executing, this function throws any error that would have been returned\r\n                /// from then() as a promise in the error state.\r\n                /// </summary>\r\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\r\n                /// The function to be called if the promise is fulfilled successfully with a value.\r\n                /// The fulfilled value is passed as the single argument. If the value is null,\r\n                /// the fulfilled value is returned. The value returned\r\n                /// from the function becomes the fulfilled value of the promise returned by\r\n                /// then(). If an exception is thrown while executing the function, the promise returned\r\n                /// by then() moves into the error state.\r\n                /// </param>\r\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\r\n                /// The function to be called if the promise is fulfilled with an error. The error\r\n                /// is passed as the single argument. If it is null, the error is forwarded.\r\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\r\n                /// </param>\r\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\r\n                /// the function to be called if the promise reports progress. Data about the progress\r\n                /// is passed as the single argument. Promises are not required to support\r\n                /// progress.\r\n                /// </param>\r\n                /// </signature>\r\n                var value = this._value;\r\n                if (onError) {\r\n                    try {\r\n                        if (!onError.handlesOnError) {\r\n                            callonerror(null, value, detailsForHandledError, this, onError);\r\n                        }\r\n                        var result = onError(value);\r\n                        if (result && typeof result === \"object\" && typeof result.done === \"function\") {\r\n                            // If a promise is returned we need to wait on it.\r\n                            result.done();\r\n                        }\r\n                        return;\r\n                    } catch (ex) {\r\n                        value = ex;\r\n                    }\r\n                }\r\n                if (value instanceof Error && value.message === canceledName) {\r\n                    // suppress cancel\r\n                    return;\r\n                }\r\n                // force the exception to be thrown asyncronously to avoid any try/catch blocks\r\n                //\r\n                Promise._doneHandler(value);\r\n            },\r\n            then: function ErrorPromise_then(unused, onError) {\r\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\r\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\r\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\r\n                /// the error handling to be performed if the promise fails to fulfill\r\n                /// a value, and the handling of progress notifications along the way.\r\n                /// </summary>\r\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\r\n                /// The function to be called if the promise is fulfilled successfully with a value.\r\n                /// The value is passed as the single argument. If the value is null, the value is returned.\r\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\r\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\r\n                /// by then() moves into the error state.\r\n                /// </param>\r\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\r\n                /// The function to be called if the promise is fulfilled with an error. The error\r\n                /// is passed as the single argument. If it is null, the error is forwarded.\r\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\r\n                /// </param>\r\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\r\n                /// The function to be called if the promise reports progress. Data about the progress\r\n                /// is passed as the single argument. Promises are not required to support\r\n                /// progress.\r\n                /// </param>\r\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\r\n                /// The promise whose value is the result of executing the complete or\r\n                /// error function.\r\n                /// </returns>\r\n                /// </signature>\r\n\r\n                // If the promise is already in a error state and no error handler is provided\r\n                // we optimize by simply returning the promise instead of creating a new one.\r\n                //\r\n                if (!onError) { return this; }\r\n                var result;\r\n                var value = this._value;\r\n                try {\r\n                    if (!onError.handlesOnError) {\r\n                        callonerror(null, value, detailsForHandledError, this, onError);\r\n                    }\r\n                    result = new CompletePromise(onError(value));\r\n                } catch (ex) {\r\n                    // If the value throw from the error handler is the same as the value\r\n                    // provided to the error handler then there is no need for a new promise.\r\n                    //\r\n                    if (ex === value) {\r\n                        result = this;\r\n                    } else {\r\n                        result = new ExceptionPromise(ex);\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        }, {\r\n            supportedForProcessing: false\r\n        }\r\n    );\r\n\r\n    var ExceptionPromise = _Base.Class.derive(ErrorPromise,\r\n        function ExceptionPromise_ctor(value) {\r\n\r\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.exceptionPromise))) {\r\n                this._stack = Promise._getStack();\r\n            }\r\n\r\n            this._value = value;\r\n            callonerror(this, value, detailsForException);\r\n        }, {\r\n            /* empty */\r\n        }, {\r\n            supportedForProcessing: false\r\n        }\r\n    );\r\n\r\n    var CompletePromise = _Base.Class.define(\r\n        function CompletePromise_ctor(value) {\r\n\r\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.completePromise))) {\r\n                this._stack = Promise._getStack();\r\n            }\r\n\r\n            if (value && typeof value === \"object\" && typeof value.then === \"function\") {\r\n                var result = new ThenPromise(null);\r\n                result._setCompleteValue(value);\r\n                return result;\r\n            }\r\n            this._value = value;\r\n        }, {\r\n            cancel: function () {\r\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\r\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\r\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\r\n                /// already been fulfilled and cancellation is supported, the promise enters\r\n                /// the error state with a value of Error(\"Canceled\").\r\n                /// </summary>\r\n                /// </signature>\r\n            },\r\n            done: function CompletePromise_done(onComplete) {\r\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\r\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\r\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\r\n                /// the error handling to be performed if the promise fails to fulfill\r\n                /// a value, and the handling of progress notifications along the way.\r\n                ///\r\n                /// After the handlers have finished executing, this function throws any error that would have been returned\r\n                /// from then() as a promise in the error state.\r\n                /// </summary>\r\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\r\n                /// The function to be called if the promise is fulfilled successfully with a value.\r\n                /// The fulfilled value is passed as the single argument. If the value is null,\r\n                /// the fulfilled value is returned. The value returned\r\n                /// from the function becomes the fulfilled value of the promise returned by\r\n                /// then(). If an exception is thrown while executing the function, the promise returned\r\n                /// by then() moves into the error state.\r\n                /// </param>\r\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\r\n                /// The function to be called if the promise is fulfilled with an error. The error\r\n                /// is passed as the single argument. If it is null, the error is forwarded.\r\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\r\n                /// </param>\r\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\r\n                /// the function to be called if the promise reports progress. Data about the progress\r\n                /// is passed as the single argument. Promises are not required to support\r\n                /// progress.\r\n                /// </param>\r\n                /// </signature>\r\n                if (!onComplete) { return; }\r\n                try {\r\n                    var result = onComplete(this._value);\r\n                    if (result && typeof result === \"object\" && typeof result.done === \"function\") {\r\n                        result.done();\r\n                    }\r\n                } catch (ex) {\r\n                    // force the exception to be thrown asynchronously to avoid any try/catch blocks\r\n                    Promise._doneHandler(ex);\r\n                }\r\n            },\r\n            then: function CompletePromise_then(onComplete) {\r\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\r\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\r\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\r\n                /// the error handling to be performed if the promise fails to fulfill\r\n                /// a value, and the handling of progress notifications along the way.\r\n                /// </summary>\r\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\r\n                /// The function to be called if the promise is fulfilled successfully with a value.\r\n                /// The value is passed as the single argument. If the value is null, the value is returned.\r\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\r\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\r\n                /// by then() moves into the error state.\r\n                /// </param>\r\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\r\n                /// The function to be called if the promise is fulfilled with an error. The error\r\n                /// is passed as the single argument. If it is null, the error is forwarded.\r\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\r\n                /// </param>\r\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\r\n                /// The function to be called if the promise reports progress. Data about the progress\r\n                /// is passed as the single argument. Promises are not required to support\r\n                /// progress.\r\n                /// </param>\r\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\r\n                /// The promise whose value is the result of executing the complete or\r\n                /// error function.\r\n                /// </returns>\r\n                /// </signature>\r\n                try {\r\n                    // If the value returned from the completion handler is the same as the value\r\n                    // provided to the completion handler then there is no need for a new promise.\r\n                    //\r\n                    var newValue = onComplete ? onComplete(this._value) : this._value;\r\n                    return newValue === this._value ? this : new CompletePromise(newValue);\r\n                } catch (ex) {\r\n                    return new ExceptionPromise(ex);\r\n                }\r\n            }\r\n        }, {\r\n            supportedForProcessing: false\r\n        }\r\n    );\r\n\r\n    //\r\n    // Promise is the user-creatable WinJS.Promise object.\r\n    //\r\n\r\n    function timeout(timeoutMS) {\r\n        var id;\r\n        return new Promise(\r\n            function (c) {\r\n                if (timeoutMS) {\r\n                    id = _Global.setTimeout(c, timeoutMS);\r\n                } else {\r\n                    _BaseCoreUtils._setImmediate(c);\r\n                }\r\n            },\r\n            function () {\r\n                if (id) {\r\n                    _Global.clearTimeout(id);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    function timeoutWithPromise(timeout, promise) {\r\n        var cancelPromise = function () { promise.cancel(); };\r\n        var cancelTimeout = function () { timeout.cancel(); };\r\n        timeout.then(cancelPromise);\r\n        promise.then(cancelTimeout, cancelTimeout);\r\n        return promise;\r\n    }\r\n\r\n    var staticCanceledPromise;\r\n\r\n    var Promise = _Base.Class.derive(PromiseStateMachine,\r\n        function Promise_ctor(init, oncancel) {\r\n            /// <signature helpKeyword=\"WinJS.Promise\">\r\n            /// <summary locid=\"WinJS.Promise\">\r\n            /// A promise provides a mechanism to schedule work to be done on a value that\r\n            /// has not yet been computed. It is a convenient abstraction for managing\r\n            /// interactions with asynchronous APIs.\r\n            /// </summary>\r\n            /// <param name=\"init\" type=\"Function\" locid=\"WinJS.Promise_p:init\">\r\n            /// The function that is called during construction of the  promise. The function\r\n            /// is given three arguments (complete, error, progress). Inside this function\r\n            /// you should add event listeners for the notifications supported by this value.\r\n            /// </param>\r\n            /// <param name=\"oncancel\" optional=\"true\" locid=\"WinJS.Promise_p:oncancel\">\r\n            /// The function to call if a consumer of this promise wants\r\n            /// to cancel its undone work. Promises are not required to\r\n            /// support cancellation.\r\n            /// </param>\r\n            /// </signature>\r\n\r\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.promise))) {\r\n                this._stack = Promise._getStack();\r\n            }\r\n\r\n            this._oncancel = oncancel;\r\n            this._setState(state_created);\r\n            this._run();\r\n\r\n            try {\r\n                var complete = this._completed.bind(this);\r\n                var error = this._error.bind(this);\r\n                var progress = this._progress.bind(this);\r\n                init(complete, error, progress);\r\n            } catch (ex) {\r\n                this._setExceptionValue(ex);\r\n            }\r\n        }, {\r\n            _oncancel: null,\r\n\r\n            _cancelAction: function () {\r\n                // BEGIN monaco change\r\n                try {\r\n                    if (this._oncancel) {\r\n                        this._oncancel();\r\n                    } else {\r\n                        throw new Error('Promise did not implement oncancel');\r\n                    }\r\n                } catch (ex) {\r\n                    // Access fields to get them created\r\n                    var msg = ex.message;\r\n                    var stack = ex.stack;\r\n                    promiseEventListeners.dispatchEvent('error', ex);\r\n                }\r\n                // END monaco change\r\n            },\r\n            _cleanupAction: function () { this._oncancel = null; }\r\n        }, {\r\n\r\n            addEventListener: function Promise_addEventListener(eventType, listener, capture) {\r\n                /// <signature helpKeyword=\"WinJS.Promise.addEventListener\">\r\n                /// <summary locid=\"WinJS.Promise.addEventListener\">\r\n                /// Adds an event listener to the control.\r\n                /// </summary>\r\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.addEventListener_p:eventType\">\r\n                /// The type (name) of the event.\r\n                /// </param>\r\n                /// <param name=\"listener\" locid=\"WinJS.Promise.addEventListener_p:listener\">\r\n                /// The listener to invoke when the event is raised.\r\n                /// </param>\r\n                /// <param name=\"capture\" locid=\"WinJS.Promise.addEventListener_p:capture\">\r\n                /// Specifies whether or not to initiate capture.\r\n                /// </param>\r\n                /// </signature>\r\n                promiseEventListeners.addEventListener(eventType, listener, capture);\r\n            },\r\n            any: function Promise_any(values) {\r\n                /// <signature helpKeyword=\"WinJS.Promise.any\">\r\n                /// <summary locid=\"WinJS.Promise.any\">\r\n                /// Returns a promise that is fulfilled when one of the input promises\r\n                /// has been fulfilled.\r\n                /// </summary>\r\n                /// <param name=\"values\" type=\"Array\" locid=\"WinJS.Promise.any_p:values\">\r\n                /// An array that contains promise objects or objects whose property\r\n                /// values include promise objects.\r\n                /// </param>\r\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.any_returnValue\">\r\n                /// A promise that on fulfillment yields the value of the input (complete or error).\r\n                /// </returns>\r\n                /// </signature>\r\n                return new Promise(\r\n                    function (complete, error) {\r\n                        var keys = Object.keys(values);\r\n                        if (keys.length === 0) {\r\n                            complete();\r\n                        }\r\n                        var canceled = 0;\r\n                        keys.forEach(function (key) {\r\n                            Promise.as(values[key]).then(\r\n                                function () { complete({ key: key, value: values[key] }); },\r\n                                function (e) {\r\n                                    if (e instanceof Error && e.name === canceledName) {\r\n                                        if ((++canceled) === keys.length) {\r\n                                            complete(Promise.cancel);\r\n                                        }\r\n                                        return;\r\n                                    }\r\n                                    error({ key: key, value: values[key] });\r\n                                }\r\n                            );\r\n                        });\r\n                    },\r\n                    function () {\r\n                        var keys = Object.keys(values);\r\n                        keys.forEach(function (key) {\r\n                            var promise = Promise.as(values[key]);\r\n                            if (typeof promise.cancel === \"function\") {\r\n                                promise.cancel();\r\n                            }\r\n                        });\r\n                    }\r\n                );\r\n            },\r\n            as: function Promise_as(value) {\r\n                /// <signature helpKeyword=\"WinJS.Promise.as\">\r\n                /// <summary locid=\"WinJS.Promise.as\">\r\n                /// Returns a promise. If the object is already a promise it is returned;\r\n                /// otherwise the object is wrapped in a promise.\r\n                /// </summary>\r\n                /// <param name=\"value\" locid=\"WinJS.Promise.as_p:value\">\r\n                /// The value to be treated as a promise.\r\n                /// </param>\r\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.as_returnValue\">\r\n                /// A promise.\r\n                /// </returns>\r\n                /// </signature>\r\n                if (value && typeof value === \"object\" && typeof value.then === \"function\") {\r\n                    return value;\r\n                }\r\n                return new CompletePromise(value);\r\n            },\r\n            /// <field type=\"WinJS.Promise\" helpKeyword=\"WinJS.Promise.cancel\" locid=\"WinJS.Promise.cancel\">\r\n            /// Canceled promise value, can be returned from a promise completion handler\r\n            /// to indicate cancelation of the promise chain.\r\n            /// </field>\r\n            cancel: {\r\n                get: function () {\r\n                    return (staticCanceledPromise = staticCanceledPromise || new ErrorPromise(new _ErrorFromName(canceledName)));\r\n                }\r\n            },\r\n            dispatchEvent: function Promise_dispatchEvent(eventType, details) {\r\n                /// <signature helpKeyword=\"WinJS.Promise.dispatchEvent\">\r\n                /// <summary locid=\"WinJS.Promise.dispatchEvent\">\r\n                /// Raises an event of the specified type and properties.\r\n                /// </summary>\r\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.dispatchEvent_p:eventType\">\r\n                /// The type (name) of the event.\r\n                /// </param>\r\n                /// <param name=\"details\" locid=\"WinJS.Promise.dispatchEvent_p:details\">\r\n                /// The set of additional properties to be attached to the event object.\r\n                /// </param>\r\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.dispatchEvent_returnValue\">\r\n                /// Specifies whether preventDefault was called on the event.\r\n                /// </returns>\r\n                /// </signature>\r\n                return promiseEventListeners.dispatchEvent(eventType, details);\r\n            },\r\n            is: function Promise_is(value) {\r\n                /// <signature helpKeyword=\"WinJS.Promise.is\">\r\n                /// <summary locid=\"WinJS.Promise.is\">\r\n                /// Determines whether a value fulfills the promise contract.\r\n                /// </summary>\r\n                /// <param name=\"value\" locid=\"WinJS.Promise.is_p:value\">\r\n                /// A value that may be a promise.\r\n                /// </param>\r\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.is_returnValue\">\r\n                /// true if the specified value is a promise, otherwise false.\r\n                /// </returns>\r\n                /// </signature>\r\n                return value && typeof value === \"object\" && typeof value.then === \"function\";\r\n            },\r\n            join: function Promise_join(values) {\r\n                /// <signature helpKeyword=\"WinJS.Promise.join\">\r\n                /// <summary locid=\"WinJS.Promise.join\">\r\n                /// Creates a promise that is fulfilled when all the values are fulfilled.\r\n                /// </summary>\r\n                /// <param name=\"values\" type=\"Object\" locid=\"WinJS.Promise.join_p:values\">\r\n                /// An object whose fields contain values, some of which may be promises.\r\n                /// </param>\r\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.join_returnValue\">\r\n                /// A promise whose value is an object with the same field names as those of the object in the values parameter, where\r\n                /// each field value is the fulfilled value of a promise.\r\n                /// </returns>\r\n                /// </signature>\r\n                return new Promise(\r\n                    function (complete, error, progress) {\r\n                        var keys = Object.keys(values);\r\n                        var errors = Array.isArray(values) ? [] : {};\r\n                        var results = Array.isArray(values) ? [] : {};\r\n                        var undefineds = 0;\r\n                        var pending = keys.length;\r\n                        var argDone = function (key) {\r\n                            if ((--pending) === 0) {\r\n                                var errorCount = Object.keys(errors).length;\r\n                                if (errorCount === 0) {\r\n                                    complete(results);\r\n                                } else {\r\n                                    var canceledCount = 0;\r\n                                    keys.forEach(function (key) {\r\n                                        var e = errors[key];\r\n                                        if (e instanceof Error && e.name === canceledName) {\r\n                                            canceledCount++;\r\n                                        }\r\n                                    });\r\n                                    if (canceledCount === errorCount) {\r\n                                        complete(Promise.cancel);\r\n                                    } else {\r\n                                        error(errors);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                progress({ Key: key, Done: true });\r\n                            }\r\n                        };\r\n                        keys.forEach(function (key) {\r\n                            var value = values[key];\r\n                            if (value === undefined) {\r\n                                undefineds++;\r\n                            } else {\r\n                                Promise.then(value,\r\n                                    function (value) { results[key] = value; argDone(key); },\r\n                                    function (value) { errors[key] = value; argDone(key); }\r\n                                );\r\n                            }\r\n                        });\r\n                        pending -= undefineds;\r\n                        if (pending === 0) {\r\n                            complete(results);\r\n                            return;\r\n                        }\r\n                    },\r\n                    function () {\r\n                        Object.keys(values).forEach(function (key) {\r\n                            var promise = Promise.as(values[key]);\r\n                            if (typeof promise.cancel === \"function\") {\r\n                                promise.cancel();\r\n                            }\r\n                        });\r\n                    }\r\n                );\r\n            },\r\n            removeEventListener: function Promise_removeEventListener(eventType, listener, capture) {\r\n                /// <signature helpKeyword=\"WinJS.Promise.removeEventListener\">\r\n                /// <summary locid=\"WinJS.Promise.removeEventListener\">\r\n                /// Removes an event listener from the control.\r\n                /// </summary>\r\n                /// <param name='eventType' locid=\"WinJS.Promise.removeEventListener_eventType\">\r\n                /// The type (name) of the event.\r\n                /// </param>\r\n                /// <param name='listener' locid=\"WinJS.Promise.removeEventListener_listener\">\r\n                /// The listener to remove.\r\n                /// </param>\r\n                /// <param name='capture' locid=\"WinJS.Promise.removeEventListener_capture\">\r\n                /// Specifies whether or not to initiate capture.\r\n                /// </param>\r\n                /// </signature>\r\n                promiseEventListeners.removeEventListener(eventType, listener, capture);\r\n            },\r\n            supportedForProcessing: false,\r\n            then: function Promise_then(value, onComplete, onError, onProgress) {\r\n                /// <signature helpKeyword=\"WinJS.Promise.then\">\r\n                /// <summary locid=\"WinJS.Promise.then\">\r\n                /// A static version of the promise instance method then().\r\n                /// </summary>\r\n                /// <param name=\"value\" locid=\"WinJS.Promise.then_p:value\">\r\n                /// the value to be treated as a promise.\r\n                /// </param>\r\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.then_p:complete\">\r\n                /// The function to be called if the promise is fulfilled with a value.\r\n                /// If it is null, the promise simply\r\n                /// returns the value. The value is passed as the single argument.\r\n                /// </param>\r\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:error\">\r\n                /// The function to be called if the promise is fulfilled with an error. The error\r\n                /// is passed as the single argument.\r\n                /// </param>\r\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:progress\">\r\n                /// The function to be called if the promise reports progress. Data about the progress\r\n                /// is passed as the single argument. Promises are not required to support\r\n                /// progress.\r\n                /// </param>\r\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.then_returnValue\">\r\n                /// A promise whose value is the result of executing the provided complete function.\r\n                /// </returns>\r\n                /// </signature>\r\n                return Promise.as(value).then(onComplete, onError, onProgress);\r\n            },\r\n            thenEach: function Promise_thenEach(values, onComplete, onError, onProgress) {\r\n                /// <signature helpKeyword=\"WinJS.Promise.thenEach\">\r\n                /// <summary locid=\"WinJS.Promise.thenEach\">\r\n                /// Performs an operation on all the input promises and returns a promise\r\n                /// that has the shape of the input and contains the result of the operation\r\n                /// that has been performed on each input.\r\n                /// </summary>\r\n                /// <param name=\"values\" locid=\"WinJS.Promise.thenEach_p:values\">\r\n                /// A set of values (which could be either an array or an object) of which some or all are promises.\r\n                /// </param>\r\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.thenEach_p:complete\">\r\n                /// The function to be called if the promise is fulfilled with a value.\r\n                /// If the value is null, the promise returns the value.\r\n                /// The value is passed as the single argument.\r\n                /// </param>\r\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:error\">\r\n                /// The function to be called if the promise is fulfilled with an error. The error\r\n                /// is passed as the single argument.\r\n                /// </param>\r\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:progress\">\r\n                /// The function to be called if the promise reports progress. Data about the progress\r\n                /// is passed as the single argument. Promises are not required to support\r\n                /// progress.\r\n                /// </param>\r\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.thenEach_returnValue\">\r\n                /// A promise that is the result of calling Promise.join on the values parameter.\r\n                /// </returns>\r\n                /// </signature>\r\n                var result = Array.isArray(values) ? [] : {};\r\n                Object.keys(values).forEach(function (key) {\r\n                    result[key] = Promise.as(values[key]).then(onComplete, onError, onProgress);\r\n                });\r\n                return Promise.join(result);\r\n            },\r\n            timeout: function Promise_timeout(time, promise) {\r\n                /// <signature helpKeyword=\"WinJS.Promise.timeout\">\r\n                /// <summary locid=\"WinJS.Promise.timeout\">\r\n                /// Creates a promise that is fulfilled after a timeout.\r\n                /// </summary>\r\n                /// <param name=\"timeout\" type=\"Number\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:timeout\">\r\n                /// The timeout period in milliseconds. If this value is zero or not specified\r\n                /// setImmediate is called, otherwise setTimeout is called.\r\n                /// </param>\r\n                /// <param name=\"promise\" type=\"Promise\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:promise\">\r\n                /// A promise that will be canceled if it doesn't complete before the\r\n                /// timeout has expired.\r\n                /// </param>\r\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.timeout_returnValue\">\r\n                /// A promise that is completed asynchronously after the specified timeout.\r\n                /// </returns>\r\n                /// </signature>\r\n                var to = timeout(time);\r\n                return promise ? timeoutWithPromise(to, promise) : to;\r\n            },\r\n            wrap: function Promise_wrap(value) {\r\n                /// <signature helpKeyword=\"WinJS.Promise.wrap\">\r\n                /// <summary locid=\"WinJS.Promise.wrap\">\r\n                /// Wraps a non-promise value in a promise. You can use this function if you need\r\n                /// to pass a value to a function that requires a promise.\r\n                /// </summary>\r\n                /// <param name=\"value\" locid=\"WinJS.Promise.wrap_p:value\">\r\n                /// Some non-promise value to be wrapped in a promise.\r\n                /// </param>\r\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrap_returnValue\">\r\n                /// A promise that is successfully fulfilled with the specified value\r\n                /// </returns>\r\n                /// </signature>\r\n                return new CompletePromise(value);\r\n            },\r\n            wrapError: function Promise_wrapError(error) {\r\n                /// <signature helpKeyword=\"WinJS.Promise.wrapError\">\r\n                /// <summary locid=\"WinJS.Promise.wrapError\">\r\n                /// Wraps a non-promise error value in a promise. You can use this function if you need\r\n                /// to pass an error to a function that requires a promise.\r\n                /// </summary>\r\n                /// <param name=\"error\" locid=\"WinJS.Promise.wrapError_p:error\">\r\n                /// A non-promise error value to be wrapped in a promise.\r\n                /// </param>\r\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrapError_returnValue\">\r\n                /// A promise that is in an error state with the specified value.\r\n                /// </returns>\r\n                /// </signature>\r\n                return new ErrorPromise(error);\r\n            },\r\n\r\n            _veryExpensiveTagWithStack: {\r\n                get: function () { return tagWithStack; },\r\n                set: function (value) { tagWithStack = value; }\r\n            },\r\n            _veryExpensiveTagWithStack_tag: tag,\r\n            _getStack: function () {\r\n                if (_Global.Debug && _Global.Debug.debuggerEnabled) {\r\n                    try { throw new Error(); } catch (e) { return e.stack; }\r\n                }\r\n            },\r\n\r\n            _cancelBlocker: function Promise__cancelBlocker(input, oncancel) {\r\n                //\r\n                // Returns a promise which on cancelation will still result in downstream cancelation while\r\n                //  protecting the promise 'input' from being  canceled which has the effect of allowing\r\n                //  'input' to be shared amoung various consumers.\r\n                //\r\n                if (!Promise.is(input)) {\r\n                    return Promise.wrap(input);\r\n                }\r\n                var complete;\r\n                var error;\r\n                var output = new Promise(\r\n                    function (c, e) {\r\n                        complete = c;\r\n                        error = e;\r\n                    },\r\n                    function () {\r\n                        complete = null;\r\n                        error = null;\r\n                        oncancel && oncancel();\r\n                    }\r\n                );\r\n                input.then(\r\n                    function (v) { complete && complete(v); },\r\n                    function (e) { error && error(e); }\r\n                );\r\n                return output;\r\n            },\r\n\r\n        }\r\n    );\r\n    Object.defineProperties(Promise, _Events.createEventProperties(errorET));\r\n\r\n    Promise._doneHandler = function (value) {\r\n        _BaseCoreUtils._setImmediate(function Promise_done_rethrow() {\r\n            throw value;\r\n        });\r\n    };\r\n\r\n    return {\r\n        PromiseStateMachine: PromiseStateMachine,\r\n        Promise: Promise,\r\n        state_created: state_created\r\n    };\r\n});\r\n\r\n_winjs(\"WinJS/Promise\", [\"WinJS/Core/_Base\",\"WinJS/Promise/_StateMachine\"], function promiseInit( _Base, _StateMachine) {\r\n    \"use strict\";\r\n\r\n    _Base.Namespace.define(\"WinJS\", {\r\n        Promise: _StateMachine.Promise\r\n    });\r\n\r\n    return _StateMachine.Promise;\r\n});\r\n\r\n__winjs_exports = _modules[\"WinJS/Core/_WinJS\"];\r\n__winjs_exports.TPromise = __winjs_exports.Promise;\r\n__winjs_exports.PPromise = __winjs_exports.Promise;\r\n\r\n// ESM-comment-begin\r\n// if (typeof exports === 'undefined' && typeof define === 'function' && define.amd) {\r\n//     define([], __winjs_exports);\r\n// } else {\r\n//     module.exports = __winjs_exports;\r\n// }\r\n// ESM-comment-end\r\n\r\n})();\r\n\r\n// ESM-uncomment-begin\r\nexport var Promise = __winjs_exports.Promise;\r\nexport var TPromise = __winjs_exports.TPromise;\r\nexport var PPromise = __winjs_exports.PPromise;\r\n// ESM-uncomment-end\r\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar _a;\r\nimport { isWindows } from './platform.js';\r\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\r\nvar _singleSlashStart = /^\\//;\r\nvar _doubleSlashStart = /^\\/\\//;\r\nfunction _validateUri(ret) {\r\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\r\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\r\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\r\n        throw new Error('[UriError]: Scheme contains illegal characters.');\r\n    }\r\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\r\n    // If a URI contains an authority component, then the path component\r\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\r\n    // does not contain an authority component, then the path cannot begin\r\n    // with two slash characters (\"//\").\r\n    if (ret.path) {\r\n        if (ret.authority) {\r\n            if (!_singleSlashStart.test(ret.path)) {\r\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\r\n            }\r\n        }\r\n        else {\r\n            if (_doubleSlashStart.test(ret.path)) {\r\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\r\n            }\r\n        }\r\n    }\r\n}\r\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\r\nfunction _referenceResolution(scheme, path) {\r\n    // the slash-character is our 'default base' as we don't\r\n    // support constructing URIs relative to other URIs. This\r\n    // also means that we alter and potentially break paths.\r\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\r\n    switch (scheme) {\r\n        case 'https':\r\n        case 'http':\r\n        case 'file':\r\n            if (!path) {\r\n                path = _slash;\r\n            }\r\n            else if (path[0] !== _slash) {\r\n                path = _slash + path;\r\n            }\r\n            break;\r\n    }\r\n    return path;\r\n}\r\nvar _empty = '';\r\nvar _slash = '/';\r\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\r\n/**\r\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\r\n * This class is a simple parser which creates the basic component paths\r\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\r\n * and encoding.\r\n *\r\n *       foo://example.com:8042/over/there?name=ferret#nose\r\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\r\n *        |           |            |            |        |\r\n *     scheme     authority       path        query   fragment\r\n *        |   _____________________|__\r\n *       / \\ /                        \\\r\n *       urn:example:animal:ferret:nose\r\n *\r\n *\r\n */\r\nvar URI = /** @class */ (function () {\r\n    /**\r\n     * @internal\r\n     */\r\n    function URI(schemeOrData, authority, path, query, fragment) {\r\n        if (typeof schemeOrData === 'object') {\r\n            this.scheme = schemeOrData.scheme || _empty;\r\n            this.authority = schemeOrData.authority || _empty;\r\n            this.path = schemeOrData.path || _empty;\r\n            this.query = schemeOrData.query || _empty;\r\n            this.fragment = schemeOrData.fragment || _empty;\r\n            // no validation because it's this URI\r\n            // that creates uri components.\r\n            // _validateUri(this);\r\n        }\r\n        else {\r\n            this.scheme = schemeOrData || _empty;\r\n            this.authority = authority || _empty;\r\n            this.path = _referenceResolution(this.scheme, path || _empty);\r\n            this.query = query || _empty;\r\n            this.fragment = fragment || _empty;\r\n            _validateUri(this);\r\n        }\r\n    }\r\n    URI.isUri = function (thing) {\r\n        if (thing instanceof URI) {\r\n            return true;\r\n        }\r\n        if (!thing) {\r\n            return false;\r\n        }\r\n        return typeof thing.authority === 'string'\r\n            && typeof thing.fragment === 'string'\r\n            && typeof thing.path === 'string'\r\n            && typeof thing.query === 'string'\r\n            && typeof thing.scheme === 'string';\r\n    };\r\n    Object.defineProperty(URI.prototype, \"fsPath\", {\r\n        // ---- filesystem path -----------------------\r\n        /**\r\n         * Returns a string representing the corresponding file system path of this URI.\r\n         * Will handle UNC paths and normalize windows drive letters to lower-case. Also\r\n         * uses the platform specific path separator. Will *not* validate the path for\r\n         * invalid characters and semantics. Will *not* look at the scheme of this URI.\r\n         */\r\n        get: function () {\r\n            return _makeFsPath(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // ---- modify to new -------------------------\r\n    URI.prototype.with = function (change) {\r\n        if (!change) {\r\n            return this;\r\n        }\r\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\r\n        if (scheme === void 0) {\r\n            scheme = this.scheme;\r\n        }\r\n        else if (scheme === null) {\r\n            scheme = _empty;\r\n        }\r\n        if (authority === void 0) {\r\n            authority = this.authority;\r\n        }\r\n        else if (authority === null) {\r\n            authority = _empty;\r\n        }\r\n        if (path === void 0) {\r\n            path = this.path;\r\n        }\r\n        else if (path === null) {\r\n            path = _empty;\r\n        }\r\n        if (query === void 0) {\r\n            query = this.query;\r\n        }\r\n        else if (query === null) {\r\n            query = _empty;\r\n        }\r\n        if (fragment === void 0) {\r\n            fragment = this.fragment;\r\n        }\r\n        else if (fragment === null) {\r\n            fragment = _empty;\r\n        }\r\n        if (scheme === this.scheme\r\n            && authority === this.authority\r\n            && path === this.path\r\n            && query === this.query\r\n            && fragment === this.fragment) {\r\n            return this;\r\n        }\r\n        return new _URI(scheme, authority, path, query, fragment);\r\n    };\r\n    // ---- parse & validate ------------------------\r\n    URI.parse = function (value) {\r\n        var match = _regexp.exec(value);\r\n        if (!match) {\r\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\r\n        }\r\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty));\r\n    };\r\n    URI.file = function (path) {\r\n        var authority = _empty;\r\n        // normalize to fwd-slashes on windows,\r\n        // on other systems bwd-slashes are valid\r\n        // filename character, eg /f\\oo/ba\\r.txt\r\n        if (isWindows) {\r\n            path = path.replace(/\\\\/g, _slash);\r\n        }\r\n        // check for authority as used in UNC shares\r\n        // or use the path as given\r\n        if (path[0] === _slash && path[1] === _slash) {\r\n            var idx = path.indexOf(_slash, 2);\r\n            if (idx === -1) {\r\n                authority = path.substring(2);\r\n                path = _slash;\r\n            }\r\n            else {\r\n                authority = path.substring(2, idx);\r\n                path = path.substring(idx) || _slash;\r\n            }\r\n        }\r\n        return new _URI('file', authority, path, _empty, _empty);\r\n    };\r\n    URI.from = function (components) {\r\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\r\n    };\r\n    // ---- printing/externalize ---------------------------\r\n    /**\r\n     *\r\n     * @param skipEncoding Do not encode the result, default is `false`\r\n     */\r\n    URI.prototype.toString = function (skipEncoding) {\r\n        if (skipEncoding === void 0) { skipEncoding = false; }\r\n        return _asFormatted(this, skipEncoding);\r\n    };\r\n    URI.prototype.toJSON = function () {\r\n        return this;\r\n    };\r\n    URI.revive = function (data) {\r\n        if (!data) {\r\n            return data;\r\n        }\r\n        else if (data instanceof URI) {\r\n            return data;\r\n        }\r\n        else {\r\n            var result = new _URI(data);\r\n            result._fsPath = data.fsPath;\r\n            result._formatted = data.external;\r\n            return result;\r\n        }\r\n    };\r\n    return URI;\r\n}());\r\nexport default URI;\r\n// tslint:disable-next-line:class-name\r\nvar _URI = /** @class */ (function (_super) {\r\n    __extends(_URI, _super);\r\n    function _URI() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._formatted = null;\r\n        _this._fsPath = null;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\r\n        get: function () {\r\n            if (!this._fsPath) {\r\n                this._fsPath = _makeFsPath(this);\r\n            }\r\n            return this._fsPath;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    _URI.prototype.toString = function (skipEncoding) {\r\n        if (skipEncoding === void 0) { skipEncoding = false; }\r\n        if (!skipEncoding) {\r\n            if (!this._formatted) {\r\n                this._formatted = _asFormatted(this, false);\r\n            }\r\n            return this._formatted;\r\n        }\r\n        else {\r\n            // we don't cache that\r\n            return _asFormatted(this, true);\r\n        }\r\n    };\r\n    _URI.prototype.toJSON = function () {\r\n        var res = {\r\n            $mid: 1\r\n        };\r\n        // cached state\r\n        if (this._fsPath) {\r\n            res.fsPath = this._fsPath;\r\n        }\r\n        if (this._formatted) {\r\n            res.external = this._formatted;\r\n        }\r\n        // uri components\r\n        if (this.path) {\r\n            res.path = this.path;\r\n        }\r\n        if (this.scheme) {\r\n            res.scheme = this.scheme;\r\n        }\r\n        if (this.authority) {\r\n            res.authority = this.authority;\r\n        }\r\n        if (this.query) {\r\n            res.query = this.query;\r\n        }\r\n        if (this.fragment) {\r\n            res.fragment = this.fragment;\r\n        }\r\n        return res;\r\n    };\r\n    return _URI;\r\n}(URI));\r\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\r\nvar encodeTable = (_a = {},\r\n    _a[58 /* Colon */] = '%3A',\r\n    _a[47 /* Slash */] = '%2F',\r\n    _a[63 /* QuestionMark */] = '%3F',\r\n    _a[35 /* Hash */] = '%23',\r\n    _a[91 /* OpenSquareBracket */] = '%5B',\r\n    _a[93 /* CloseSquareBracket */] = '%5D',\r\n    _a[64 /* AtSign */] = '%40',\r\n    _a[33 /* ExclamationMark */] = '%21',\r\n    _a[36 /* DollarSign */] = '%24',\r\n    _a[38 /* Ampersand */] = '%26',\r\n    _a[39 /* SingleQuote */] = '%27',\r\n    _a[40 /* OpenParen */] = '%28',\r\n    _a[41 /* CloseParen */] = '%29',\r\n    _a[42 /* Asterisk */] = '%2A',\r\n    _a[43 /* Plus */] = '%2B',\r\n    _a[44 /* Comma */] = '%2C',\r\n    _a[59 /* Semicolon */] = '%3B',\r\n    _a[61 /* Equals */] = '%3D',\r\n    _a[32 /* Space */] = '%20',\r\n    _a);\r\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\r\n    var res = undefined;\r\n    var nativeEncodePos = -1;\r\n    for (var pos = 0; pos < uriComponent.length; pos++) {\r\n        var code = uriComponent.charCodeAt(pos);\r\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\r\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\r\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\r\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\r\n            || code === 45 /* Dash */\r\n            || code === 46 /* Period */\r\n            || code === 95 /* Underline */\r\n            || code === 126 /* Tilde */\r\n            || (allowSlash && code === 47 /* Slash */)) {\r\n            // check if we are delaying native encode\r\n            if (nativeEncodePos !== -1) {\r\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\r\n                nativeEncodePos = -1;\r\n            }\r\n            // check if we write into a new string (by default we try to return the param)\r\n            if (res !== undefined) {\r\n                res += uriComponent.charAt(pos);\r\n            }\r\n        }\r\n        else {\r\n            // encoding needed, we need to allocate a new string\r\n            if (res === undefined) {\r\n                res = uriComponent.substr(0, pos);\r\n            }\r\n            // check with default table first\r\n            var escaped = encodeTable[code];\r\n            if (escaped !== undefined) {\r\n                // check if we are delaying native encode\r\n                if (nativeEncodePos !== -1) {\r\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\r\n                    nativeEncodePos = -1;\r\n                }\r\n                // append escaped variant to result\r\n                res += escaped;\r\n            }\r\n            else if (nativeEncodePos === -1) {\r\n                // use native encode only when needed\r\n                nativeEncodePos = pos;\r\n            }\r\n        }\r\n    }\r\n    if (nativeEncodePos !== -1) {\r\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\r\n    }\r\n    return res !== undefined ? res : uriComponent;\r\n}\r\nfunction encodeURIComponentMinimal(path) {\r\n    var res = undefined;\r\n    for (var pos = 0; pos < path.length; pos++) {\r\n        var code = path.charCodeAt(pos);\r\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\r\n            if (res === undefined) {\r\n                res = path.substr(0, pos);\r\n            }\r\n            res += encodeTable[code];\r\n        }\r\n        else {\r\n            if (res !== undefined) {\r\n                res += path[pos];\r\n            }\r\n        }\r\n    }\r\n    return res !== undefined ? res : path;\r\n}\r\n/**\r\n * Compute `fsPath` for the given uri\r\n * @param uri\r\n */\r\nfunction _makeFsPath(uri) {\r\n    var value;\r\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\r\n        // unc path: file://shares/c$/far/boo\r\n        value = \"//\" + uri.authority + uri.path;\r\n    }\r\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\r\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\r\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\r\n        // windows drive letter: file:///c:/far/boo\r\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\r\n    }\r\n    else {\r\n        // other path\r\n        value = uri.path;\r\n    }\r\n    if (isWindows) {\r\n        value = value.replace(/\\//g, '\\\\');\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Create the external version of a uri\r\n */\r\nfunction _asFormatted(uri, skipEncoding) {\r\n    var encoder = !skipEncoding\r\n        ? encodeURIComponentFast\r\n        : encodeURIComponentMinimal;\r\n    var res = '';\r\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\r\n    if (scheme) {\r\n        res += scheme;\r\n        res += ':';\r\n    }\r\n    if (authority || scheme === 'file') {\r\n        res += _slash;\r\n        res += _slash;\r\n    }\r\n    if (authority) {\r\n        var idx = authority.indexOf('@');\r\n        if (idx !== -1) {\r\n            // <user>@<auth>\r\n            var userinfo = authority.substr(0, idx);\r\n            authority = authority.substr(idx + 1);\r\n            idx = userinfo.indexOf(':');\r\n            if (idx === -1) {\r\n                res += encoder(userinfo, false);\r\n            }\r\n            else {\r\n                // <user>:<pass>@<auth>\r\n                res += encoder(userinfo.substr(0, idx), false);\r\n                res += ':';\r\n                res += encoder(userinfo.substr(idx + 1), false);\r\n            }\r\n            res += '@';\r\n        }\r\n        authority = authority.toLowerCase();\r\n        idx = authority.indexOf(':');\r\n        if (idx === -1) {\r\n            res += encoder(authority, false);\r\n        }\r\n        else {\r\n            // <auth>:<port>\r\n            res += encoder(authority.substr(0, idx), false);\r\n            res += authority.substr(idx);\r\n        }\r\n    }\r\n    if (path) {\r\n        // lower-case windows drive letters in /C:/fff or C:/fff\r\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\r\n            var code = path.charCodeAt(1);\r\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\r\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\r\n            }\r\n        }\r\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\r\n            var code = path.charCodeAt(0);\r\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\r\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\r\n            }\r\n        }\r\n        // encode the rest of the path\r\n        res += encoder(path, true);\r\n    }\r\n    if (query) {\r\n        res += '?';\r\n        res += encoder(query, false);\r\n    }\r\n    if (fragment) {\r\n        res += '#';\r\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\r\n    }\r\n    return res;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n/**\r\n * A position in the editor.\r\n */\r\nvar Position = /** @class */ (function () {\r\n    function Position(lineNumber, column) {\r\n        this.lineNumber = lineNumber;\r\n        this.column = column;\r\n    }\r\n    /**\r\n     * Test if this position equals other position\r\n     */\r\n    Position.prototype.equals = function (other) {\r\n        return Position.equals(this, other);\r\n    };\r\n    /**\r\n     * Test if position `a` equals position `b`\r\n     */\r\n    Position.equals = function (a, b) {\r\n        if (!a && !b) {\r\n            return true;\r\n        }\r\n        return (!!a &&\r\n            !!b &&\r\n            a.lineNumber === b.lineNumber &&\r\n            a.column === b.column);\r\n    };\r\n    /**\r\n     * Test if this position is before other position.\r\n     * If the two positions are equal, the result will be false.\r\n     */\r\n    Position.prototype.isBefore = function (other) {\r\n        return Position.isBefore(this, other);\r\n    };\r\n    /**\r\n     * Test if position `a` is before position `b`.\r\n     * If the two positions are equal, the result will be false.\r\n     */\r\n    Position.isBefore = function (a, b) {\r\n        if (a.lineNumber < b.lineNumber) {\r\n            return true;\r\n        }\r\n        if (b.lineNumber < a.lineNumber) {\r\n            return false;\r\n        }\r\n        return a.column < b.column;\r\n    };\r\n    /**\r\n     * Test if this position is before other position.\r\n     * If the two positions are equal, the result will be true.\r\n     */\r\n    Position.prototype.isBeforeOrEqual = function (other) {\r\n        return Position.isBeforeOrEqual(this, other);\r\n    };\r\n    /**\r\n     * Test if position `a` is before position `b`.\r\n     * If the two positions are equal, the result will be true.\r\n     */\r\n    Position.isBeforeOrEqual = function (a, b) {\r\n        if (a.lineNumber < b.lineNumber) {\r\n            return true;\r\n        }\r\n        if (b.lineNumber < a.lineNumber) {\r\n            return false;\r\n        }\r\n        return a.column <= b.column;\r\n    };\r\n    /**\r\n     * A function that compares positions, useful for sorting\r\n     */\r\n    Position.compare = function (a, b) {\r\n        var aLineNumber = a.lineNumber | 0;\r\n        var bLineNumber = b.lineNumber | 0;\r\n        if (aLineNumber === bLineNumber) {\r\n            var aColumn = a.column | 0;\r\n            var bColumn = b.column | 0;\r\n            return aColumn - bColumn;\r\n        }\r\n        return aLineNumber - bLineNumber;\r\n    };\r\n    /**\r\n     * Clone this position.\r\n     */\r\n    Position.prototype.clone = function () {\r\n        return new Position(this.lineNumber, this.column);\r\n    };\r\n    /**\r\n     * Convert to a human-readable representation.\r\n     */\r\n    Position.prototype.toString = function () {\r\n        return '(' + this.lineNumber + ',' + this.column + ')';\r\n    };\r\n    // ---\r\n    /**\r\n     * Create a `Position` from an `IPosition`.\r\n     */\r\n    Position.lift = function (pos) {\r\n        return new Position(pos.lineNumber, pos.column);\r\n    };\r\n    /**\r\n     * Test if `obj` is an `IPosition`.\r\n     */\r\n    Position.isIPosition = function (obj) {\r\n        return (obj\r\n            && (typeof obj.lineNumber === 'number')\r\n            && (typeof obj.column === 'number'));\r\n    };\r\n    return Position;\r\n}());\r\nexport { Position };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { Position } from './position.js';\r\n/**\r\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\r\n */\r\nvar Range = /** @class */ (function () {\r\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\r\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\r\n            this.startLineNumber = endLineNumber;\r\n            this.startColumn = endColumn;\r\n            this.endLineNumber = startLineNumber;\r\n            this.endColumn = startColumn;\r\n        }\r\n        else {\r\n            this.startLineNumber = startLineNumber;\r\n            this.startColumn = startColumn;\r\n            this.endLineNumber = endLineNumber;\r\n            this.endColumn = endColumn;\r\n        }\r\n    }\r\n    /**\r\n     * Test if this range is empty.\r\n     */\r\n    Range.prototype.isEmpty = function () {\r\n        return Range.isEmpty(this);\r\n    };\r\n    /**\r\n     * Test if `range` is empty.\r\n     */\r\n    Range.isEmpty = function (range) {\r\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\r\n    };\r\n    /**\r\n     * Test if position is in this range. If the position is at the edges, will return true.\r\n     */\r\n    Range.prototype.containsPosition = function (position) {\r\n        return Range.containsPosition(this, position);\r\n    };\r\n    /**\r\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\r\n     */\r\n    Range.containsPosition = function (range, position) {\r\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\r\n            return false;\r\n        }\r\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\r\n            return false;\r\n        }\r\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Test if range is in this range. If the range is equal to this range, will return true.\r\n     */\r\n    Range.prototype.containsRange = function (range) {\r\n        return Range.containsRange(this, range);\r\n    };\r\n    /**\r\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\r\n     */\r\n    Range.containsRange = function (range, otherRange) {\r\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\r\n            return false;\r\n        }\r\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\r\n            return false;\r\n        }\r\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\r\n            return false;\r\n        }\r\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * A reunion of the two ranges.\r\n     * The smallest position will be used as the start point, and the largest one as the end point.\r\n     */\r\n    Range.prototype.plusRange = function (range) {\r\n        return Range.plusRange(this, range);\r\n    };\r\n    /**\r\n     * A reunion of the two ranges.\r\n     * The smallest position will be used as the start point, and the largest one as the end point.\r\n     */\r\n    Range.plusRange = function (a, b) {\r\n        var startLineNumber;\r\n        var startColumn;\r\n        var endLineNumber;\r\n        var endColumn;\r\n        if (b.startLineNumber < a.startLineNumber) {\r\n            startLineNumber = b.startLineNumber;\r\n            startColumn = b.startColumn;\r\n        }\r\n        else if (b.startLineNumber === a.startLineNumber) {\r\n            startLineNumber = b.startLineNumber;\r\n            startColumn = Math.min(b.startColumn, a.startColumn);\r\n        }\r\n        else {\r\n            startLineNumber = a.startLineNumber;\r\n            startColumn = a.startColumn;\r\n        }\r\n        if (b.endLineNumber > a.endLineNumber) {\r\n            endLineNumber = b.endLineNumber;\r\n            endColumn = b.endColumn;\r\n        }\r\n        else if (b.endLineNumber === a.endLineNumber) {\r\n            endLineNumber = b.endLineNumber;\r\n            endColumn = Math.max(b.endColumn, a.endColumn);\r\n        }\r\n        else {\r\n            endLineNumber = a.endLineNumber;\r\n            endColumn = a.endColumn;\r\n        }\r\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\r\n    };\r\n    /**\r\n     * A intersection of the two ranges.\r\n     */\r\n    Range.prototype.intersectRanges = function (range) {\r\n        return Range.intersectRanges(this, range);\r\n    };\r\n    /**\r\n     * A intersection of the two ranges.\r\n     */\r\n    Range.intersectRanges = function (a, b) {\r\n        var resultStartLineNumber = a.startLineNumber;\r\n        var resultStartColumn = a.startColumn;\r\n        var resultEndLineNumber = a.endLineNumber;\r\n        var resultEndColumn = a.endColumn;\r\n        var otherStartLineNumber = b.startLineNumber;\r\n        var otherStartColumn = b.startColumn;\r\n        var otherEndLineNumber = b.endLineNumber;\r\n        var otherEndColumn = b.endColumn;\r\n        if (resultStartLineNumber < otherStartLineNumber) {\r\n            resultStartLineNumber = otherStartLineNumber;\r\n            resultStartColumn = otherStartColumn;\r\n        }\r\n        else if (resultStartLineNumber === otherStartLineNumber) {\r\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\r\n        }\r\n        if (resultEndLineNumber > otherEndLineNumber) {\r\n            resultEndLineNumber = otherEndLineNumber;\r\n            resultEndColumn = otherEndColumn;\r\n        }\r\n        else if (resultEndLineNumber === otherEndLineNumber) {\r\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\r\n        }\r\n        // Check if selection is now empty\r\n        if (resultStartLineNumber > resultEndLineNumber) {\r\n            return null;\r\n        }\r\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\r\n            return null;\r\n        }\r\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\r\n    };\r\n    /**\r\n     * Test if this range equals other.\r\n     */\r\n    Range.prototype.equalsRange = function (other) {\r\n        return Range.equalsRange(this, other);\r\n    };\r\n    /**\r\n     * Test if range `a` equals `b`.\r\n     */\r\n    Range.equalsRange = function (a, b) {\r\n        return (!!a &&\r\n            !!b &&\r\n            a.startLineNumber === b.startLineNumber &&\r\n            a.startColumn === b.startColumn &&\r\n            a.endLineNumber === b.endLineNumber &&\r\n            a.endColumn === b.endColumn);\r\n    };\r\n    /**\r\n     * Return the end position (which will be after or equal to the start position)\r\n     */\r\n    Range.prototype.getEndPosition = function () {\r\n        return new Position(this.endLineNumber, this.endColumn);\r\n    };\r\n    /**\r\n     * Return the start position (which will be before or equal to the end position)\r\n     */\r\n    Range.prototype.getStartPosition = function () {\r\n        return new Position(this.startLineNumber, this.startColumn);\r\n    };\r\n    /**\r\n     * Transform to a user presentable string representation.\r\n     */\r\n    Range.prototype.toString = function () {\r\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\r\n    };\r\n    /**\r\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\r\n     */\r\n    Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\r\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\r\n    };\r\n    /**\r\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\r\n     */\r\n    Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\r\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\r\n    };\r\n    /**\r\n     * Create a new empty range using this range's start position.\r\n     */\r\n    Range.prototype.collapseToStart = function () {\r\n        return Range.collapseToStart(this);\r\n    };\r\n    /**\r\n     * Create a new empty range using this range's start position.\r\n     */\r\n    Range.collapseToStart = function (range) {\r\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\r\n    };\r\n    // ---\r\n    Range.fromPositions = function (start, end) {\r\n        if (end === void 0) { end = start; }\r\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\r\n    };\r\n    /**\r\n     * Create a `Range` from an `IRange`.\r\n     */\r\n    Range.lift = function (range) {\r\n        if (!range) {\r\n            return null;\r\n        }\r\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\r\n    };\r\n    /**\r\n     * Test if `obj` is an `IRange`.\r\n     */\r\n    Range.isIRange = function (obj) {\r\n        return (obj\r\n            && (typeof obj.startLineNumber === 'number')\r\n            && (typeof obj.startColumn === 'number')\r\n            && (typeof obj.endLineNumber === 'number')\r\n            && (typeof obj.endColumn === 'number'));\r\n    };\r\n    /**\r\n     * Test if the two ranges are touching in any way.\r\n     */\r\n    Range.areIntersectingOrTouching = function (a, b) {\r\n        // Check if `a` is before `b`\r\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\r\n            return false;\r\n        }\r\n        // Check if `b` is before `a`\r\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\r\n            return false;\r\n        }\r\n        // These ranges must intersect\r\n        return true;\r\n    };\r\n    /**\r\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\r\n     */\r\n    Range.areIntersecting = function (a, b) {\r\n        // Check if `a` is before `b`\r\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\r\n            return false;\r\n        }\r\n        // Check if `b` is before `a`\r\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\r\n            return false;\r\n        }\r\n        // These ranges must intersect\r\n        return true;\r\n    };\r\n    /**\r\n     * A function that compares ranges, useful for sorting ranges\r\n     * It will first compare ranges on the startPosition and then on the endPosition\r\n     */\r\n    Range.compareRangesUsingStarts = function (a, b) {\r\n        var aStartLineNumber = a.startLineNumber | 0;\r\n        var bStartLineNumber = b.startLineNumber | 0;\r\n        if (aStartLineNumber === bStartLineNumber) {\r\n            var aStartColumn = a.startColumn | 0;\r\n            var bStartColumn = b.startColumn | 0;\r\n            if (aStartColumn === bStartColumn) {\r\n                var aEndLineNumber = a.endLineNumber | 0;\r\n                var bEndLineNumber = b.endLineNumber | 0;\r\n                if (aEndLineNumber === bEndLineNumber) {\r\n                    var aEndColumn = a.endColumn | 0;\r\n                    var bEndColumn = b.endColumn | 0;\r\n                    return aEndColumn - bEndColumn;\r\n                }\r\n                return aEndLineNumber - bEndLineNumber;\r\n            }\r\n            return aStartColumn - bStartColumn;\r\n        }\r\n        return aStartLineNumber - bStartLineNumber;\r\n    };\r\n    /**\r\n     * A function that compares ranges, useful for sorting ranges\r\n     * It will first compare ranges on the endPosition and then on the startPosition\r\n     */\r\n    Range.compareRangesUsingEnds = function (a, b) {\r\n        if (a.endLineNumber === b.endLineNumber) {\r\n            if (a.endColumn === b.endColumn) {\r\n                if (a.startLineNumber === b.startLineNumber) {\r\n                    return a.startColumn - b.startColumn;\r\n                }\r\n                return a.startLineNumber - b.startLineNumber;\r\n            }\r\n            return a.endColumn - b.endColumn;\r\n        }\r\n        return a.endLineNumber - b.endLineNumber;\r\n    };\r\n    /**\r\n     * Test if the range spans multiple lines.\r\n     */\r\n    Range.spansMultipleLines = function (range) {\r\n        return range.endLineNumber > range.startLineNumber;\r\n    };\r\n    return Range;\r\n}());\r\nexport { Range };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n/**\r\n * Represents information about a specific difference between two sequences.\r\n */\r\nvar DiffChange = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new DiffChange with the given sequence information\r\n     * and content.\r\n     */\r\n    function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\r\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\r\n        this.originalStart = originalStart;\r\n        this.originalLength = originalLength;\r\n        this.modifiedStart = modifiedStart;\r\n        this.modifiedLength = modifiedLength;\r\n    }\r\n    /**\r\n     * The end point (exclusive) of the change in the original sequence.\r\n     */\r\n    DiffChange.prototype.getOriginalEnd = function () {\r\n        return this.originalStart + this.originalLength;\r\n    };\r\n    /**\r\n     * The end point (exclusive) of the change in the modified sequence.\r\n     */\r\n    DiffChange.prototype.getModifiedEnd = function () {\r\n        return this.modifiedStart + this.modifiedLength;\r\n    };\r\n    return DiffChange;\r\n}());\r\nexport { DiffChange };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { DiffChange } from './diffChange.js';\r\nfunction createStringSequence(a) {\r\n    return {\r\n        getLength: function () { return a.length; },\r\n        getElementAtIndex: function (pos) { return a.charCodeAt(pos); }\r\n    };\r\n}\r\nexport function stringDiff(original, modified, pretty) {\r\n    return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\r\n}\r\n//\r\n// The code below has been ported from a C# implementation in VS\r\n//\r\nvar Debug = /** @class */ (function () {\r\n    function Debug() {\r\n    }\r\n    Debug.Assert = function (condition, message) {\r\n        if (!condition) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n    return Debug;\r\n}());\r\nexport { Debug };\r\nvar MyArray = /** @class */ (function () {\r\n    function MyArray() {\r\n    }\r\n    /**\r\n     * Copies a range of elements from an Array starting at the specified source index and pastes\r\n     * them to another Array starting at the specified destination index. The length and the indexes\r\n     * are specified as 64-bit integers.\r\n     * sourceArray:\r\n     *\t\tThe Array that contains the data to copy.\r\n     * sourceIndex:\r\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\r\n     * destinationArray:\r\n     *\t\tThe Array that receives the data.\r\n     * destinationIndex:\r\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\r\n     * length:\r\n     *\t\tA 64-bit integer that represents the number of elements to copy.\r\n     */\r\n    MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\r\n        for (var i = 0; i < length; i++) {\r\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\r\n        }\r\n    };\r\n    return MyArray;\r\n}());\r\nexport { MyArray };\r\n//*****************************************************************************\r\n// LcsDiff.cs\r\n//\r\n// An implementation of the difference algorithm described in\r\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\r\n//\r\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\r\n//*****************************************************************************\r\n// Our total memory usage for storing history is (worst-case):\r\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\r\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\r\nvar MaxDifferencesHistory = 1447;\r\n//let MaxDifferencesHistory = 100;\r\n/**\r\n * A utility class which helps to create the set of DiffChanges from\r\n * a difference operation. This class accepts original DiffElements and\r\n * modified DiffElements that are involved in a particular change. The\r\n * MarktNextChange() method can be called to mark the separation between\r\n * distinct changes. At the end, the Changes property can be called to retrieve\r\n * the constructed changes.\r\n */\r\nvar DiffChangeHelper = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\r\n     */\r\n    function DiffChangeHelper() {\r\n        this.m_changes = [];\r\n        this.m_originalStart = Number.MAX_VALUE;\r\n        this.m_modifiedStart = Number.MAX_VALUE;\r\n        this.m_originalCount = 0;\r\n        this.m_modifiedCount = 0;\r\n    }\r\n    /**\r\n     * Marks the beginning of the next change in the set of differences.\r\n     */\r\n    DiffChangeHelper.prototype.MarkNextChange = function () {\r\n        // Only add to the list if there is something to add\r\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\r\n            // Add the new change to our list\r\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\r\n        }\r\n        // Reset for the next change\r\n        this.m_originalCount = 0;\r\n        this.m_modifiedCount = 0;\r\n        this.m_originalStart = Number.MAX_VALUE;\r\n        this.m_modifiedStart = Number.MAX_VALUE;\r\n    };\r\n    /**\r\n     * Adds the original element at the given position to the elements\r\n     * affected by the current change. The modified index gives context\r\n     * to the change position with respect to the original sequence.\r\n     * @param originalIndex The index of the original element to add.\r\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\r\n     */\r\n    DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\r\n        // The 'true' start index is the smallest of the ones we've seen\r\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\r\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\r\n        this.m_originalCount++;\r\n    };\r\n    /**\r\n     * Adds the modified element at the given position to the elements\r\n     * affected by the current change. The original index gives context\r\n     * to the change position with respect to the modified sequence.\r\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\r\n     * @param modifiedIndex The index of the modified element to add.\r\n     */\r\n    DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\r\n        // The 'true' start index is the smallest of the ones we've seen\r\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\r\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\r\n        this.m_modifiedCount++;\r\n    };\r\n    /**\r\n     * Retrieves all of the changes marked by the class.\r\n     */\r\n    DiffChangeHelper.prototype.getChanges = function () {\r\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\r\n            // Finish up on whatever is left\r\n            this.MarkNextChange();\r\n        }\r\n        return this.m_changes;\r\n    };\r\n    /**\r\n     * Retrieves all of the changes marked by the class in the reverse order\r\n     */\r\n    DiffChangeHelper.prototype.getReverseChanges = function () {\r\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\r\n            // Finish up on whatever is left\r\n            this.MarkNextChange();\r\n        }\r\n        this.m_changes.reverse();\r\n        return this.m_changes;\r\n    };\r\n    return DiffChangeHelper;\r\n}());\r\n/**\r\n * An implementation of the difference algorithm described in\r\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\r\n */\r\nvar LcsDiff = /** @class */ (function () {\r\n    /**\r\n     * Constructs the DiffFinder\r\n     */\r\n    function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\r\n        if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\r\n        this.OriginalSequence = originalSequence;\r\n        this.ModifiedSequence = newSequence;\r\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\r\n        this.m_forwardHistory = [];\r\n        this.m_reverseHistory = [];\r\n    }\r\n    LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\r\n        return (this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex));\r\n    };\r\n    LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\r\n        return (this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2));\r\n    };\r\n    LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\r\n        return (this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2));\r\n    };\r\n    LcsDiff.prototype.ComputeDiff = function (pretty) {\r\n        return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\r\n    };\r\n    /**\r\n     * Computes the differences between the original and modified input\r\n     * sequences on the bounded range.\r\n     * @returns An array of the differences between the two input sequences.\r\n     */\r\n    LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\r\n        var quitEarlyArr = [false];\r\n        var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\r\n        if (pretty) {\r\n            // We have to clean up the computed diff to be more intuitive\r\n            // but it turns out this cannot be done correctly until the entire set\r\n            // of diffs have been computed\r\n            return this.ShiftChanges(changes);\r\n        }\r\n        return changes;\r\n    };\r\n    /**\r\n     * Private helper method which computes the differences on the bounded range\r\n     * recursively.\r\n     * @returns An array of the differences between the two input sequences.\r\n     */\r\n    LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\r\n        quitEarlyArr[0] = false;\r\n        // Find the start of the differences\r\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\r\n            originalStart++;\r\n            modifiedStart++;\r\n        }\r\n        // Find the end of the differences\r\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\r\n            originalEnd--;\r\n            modifiedEnd--;\r\n        }\r\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\r\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\r\n            var changes = void 0;\r\n            if (modifiedStart <= modifiedEnd) {\r\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\r\n                // All insertions\r\n                changes = [\r\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\r\n                ];\r\n            }\r\n            else if (originalStart <= originalEnd) {\r\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\r\n                // All deletions\r\n                changes = [\r\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\r\n                ];\r\n            }\r\n            else {\r\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\r\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\r\n                // Identical sequences - No differences\r\n                changes = [];\r\n            }\r\n            return changes;\r\n        }\r\n        // This problem can be solved using the Divide-And-Conquer technique.\r\n        var midOriginalArr = [0], midModifiedArr = [0];\r\n        var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\r\n        var midOriginal = midOriginalArr[0];\r\n        var midModified = midModifiedArr[0];\r\n        if (result !== null) {\r\n            // Result is not-null when there was enough memory to compute the changes while\r\n            // searching for the recursion point\r\n            return result;\r\n        }\r\n        else if (!quitEarlyArr[0]) {\r\n            // We can break the problem down recursively by finding the changes in the\r\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\r\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\r\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\r\n            var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\r\n            var rightChanges = [];\r\n            if (!quitEarlyArr[0]) {\r\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\r\n            }\r\n            else {\r\n                // We did't have time to finish the first half, so we don't have time to compute this half.\r\n                // Consider the entire rest of the sequence different.\r\n                rightChanges = [\r\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\r\n                ];\r\n            }\r\n            return this.ConcatenateChanges(leftChanges, rightChanges);\r\n        }\r\n        // If we hit here, we quit early, and so can't return anything meaningful\r\n        return [\r\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\r\n        ];\r\n    };\r\n    LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\r\n        var forwardChanges = null, reverseChanges = null;\r\n        // First, walk backward through the forward diagonals history\r\n        var changeHelper = new DiffChangeHelper();\r\n        var diagonalMin = diagonalForwardStart;\r\n        var diagonalMax = diagonalForwardEnd;\r\n        var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\r\n        var lastOriginalIndex = Number.MIN_VALUE;\r\n        var historyIndex = this.m_forwardHistory.length - 1;\r\n        var diagonal;\r\n        do {\r\n            // Get the diagonal index from the relative diagonal number\r\n            diagonal = diagonalRelative + diagonalForwardBase;\r\n            // Figure out where we came from\r\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\r\n                // Vertical line (the element is an insert)\r\n                originalIndex = forwardPoints[diagonal + 1];\r\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\r\n                if (originalIndex < lastOriginalIndex) {\r\n                    changeHelper.MarkNextChange();\r\n                }\r\n                lastOriginalIndex = originalIndex;\r\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\r\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\r\n            }\r\n            else {\r\n                // Horizontal line (the element is a deletion)\r\n                originalIndex = forwardPoints[diagonal - 1] + 1;\r\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\r\n                if (originalIndex < lastOriginalIndex) {\r\n                    changeHelper.MarkNextChange();\r\n                }\r\n                lastOriginalIndex = originalIndex - 1;\r\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\r\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\r\n            }\r\n            if (historyIndex >= 0) {\r\n                forwardPoints = this.m_forwardHistory[historyIndex];\r\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\r\n                diagonalMin = 1;\r\n                diagonalMax = forwardPoints.length - 1;\r\n            }\r\n        } while (--historyIndex >= -1);\r\n        // Ironically, we get the forward changes as the reverse of the\r\n        // order we added them since we technically added them backwards\r\n        forwardChanges = changeHelper.getReverseChanges();\r\n        if (quitEarlyArr[0]) {\r\n            // TODO: Calculate a partial from the reverse diagonals.\r\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\r\n            var originalStartPoint = midOriginalArr[0] + 1;\r\n            var modifiedStartPoint = midModifiedArr[0] + 1;\r\n            if (forwardChanges !== null && forwardChanges.length > 0) {\r\n                var lastForwardChange = forwardChanges[forwardChanges.length - 1];\r\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\r\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\r\n            }\r\n            reverseChanges = [\r\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\r\n            ];\r\n        }\r\n        else {\r\n            // Now walk backward through the reverse diagonals history\r\n            changeHelper = new DiffChangeHelper();\r\n            diagonalMin = diagonalReverseStart;\r\n            diagonalMax = diagonalReverseEnd;\r\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\r\n            lastOriginalIndex = Number.MAX_VALUE;\r\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\r\n            do {\r\n                // Get the diagonal index from the relative diagonal number\r\n                diagonal = diagonalRelative + diagonalReverseBase;\r\n                // Figure out where we came from\r\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\r\n                    // Horizontal line (the element is a deletion))\r\n                    originalIndex = reversePoints[diagonal + 1] - 1;\r\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\r\n                    if (originalIndex > lastOriginalIndex) {\r\n                        changeHelper.MarkNextChange();\r\n                    }\r\n                    lastOriginalIndex = originalIndex + 1;\r\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\r\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\r\n                }\r\n                else {\r\n                    // Vertical line (the element is an insertion)\r\n                    originalIndex = reversePoints[diagonal - 1];\r\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\r\n                    if (originalIndex > lastOriginalIndex) {\r\n                        changeHelper.MarkNextChange();\r\n                    }\r\n                    lastOriginalIndex = originalIndex;\r\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\r\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\r\n                }\r\n                if (historyIndex >= 0) {\r\n                    reversePoints = this.m_reverseHistory[historyIndex];\r\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\r\n                    diagonalMin = 1;\r\n                    diagonalMax = reversePoints.length - 1;\r\n                }\r\n            } while (--historyIndex >= -1);\r\n            // There are cases where the reverse history will find diffs that\r\n            // are correct, but not intuitive, so we need shift them.\r\n            reverseChanges = changeHelper.getChanges();\r\n        }\r\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\r\n    };\r\n    /**\r\n     * Given the range to compute the diff on, this method finds the point:\r\n     * (midOriginal, midModified)\r\n     * that exists in the middle of the LCS of the two sequences and\r\n     * is the point at which the LCS problem may be broken down recursively.\r\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\r\n     * point is calculated and the full trace is available in memory, then this method\r\n     * will return the change list.\r\n     * @param originalStart The start bound of the original sequence range\r\n     * @param originalEnd The end bound of the original sequence range\r\n     * @param modifiedStart The start bound of the modified sequence range\r\n     * @param modifiedEnd The end bound of the modified sequence range\r\n     * @param midOriginal The middle point of the original sequence range\r\n     * @param midModified The middle point of the modified sequence range\r\n     * @returns The diff changes, if available, otherwise null\r\n     */\r\n    LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\r\n        var originalIndex, modifiedIndex;\r\n        var diagonalForwardStart = 0, diagonalForwardEnd = 0;\r\n        var diagonalReverseStart = 0, diagonalReverseEnd = 0;\r\n        var numDifferences;\r\n        // To traverse the edit graph and produce the proper LCS, our actual\r\n        // start position is just outside the given boundary\r\n        originalStart--;\r\n        modifiedStart--;\r\n        // We set these up to make the compiler happy, but they will\r\n        // be replaced before we return with the actual recursion point\r\n        midOriginalArr[0] = 0;\r\n        midModifiedArr[0] = 0;\r\n        // Clear out the history\r\n        this.m_forwardHistory = [];\r\n        this.m_reverseHistory = [];\r\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\r\n        // The integer value in the cell represents the originalIndex of the furthest\r\n        // reaching point found so far that ends in that diagonal.\r\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\r\n        var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\r\n        var numDiagonals = maxDifferences + 1;\r\n        var forwardPoints = new Array(numDiagonals);\r\n        var reversePoints = new Array(numDiagonals);\r\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\r\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\r\n        var diagonalForwardBase = (modifiedEnd - modifiedStart);\r\n        var diagonalReverseBase = (originalEnd - originalStart);\r\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\r\n        //    diagonal number (relative to diagonalForwardBase)\r\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\r\n        //    diagonal number (relative to diagonalReverseBase)\r\n        var diagonalForwardOffset = (originalStart - modifiedStart);\r\n        var diagonalReverseOffset = (originalEnd - modifiedEnd);\r\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\r\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\r\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\r\n        var delta = diagonalReverseBase - diagonalForwardBase;\r\n        var deltaIsEven = (delta % 2 === 0);\r\n        // Here we set up the start and end points as the furthest points found so far\r\n        // in both the forward and reverse directions, respectively\r\n        forwardPoints[diagonalForwardBase] = originalStart;\r\n        reversePoints[diagonalReverseBase] = originalEnd;\r\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\r\n        quitEarlyArr[0] = false;\r\n        // A couple of points:\r\n        // --With this method, we iterate on the number of differences between the two sequences.\r\n        //   The more differences there actually are, the longer this will take.\r\n        // --Also, as the number of differences increases, we have to search on diagonals further\r\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\r\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\r\n        //   is even and odd diagonals only when numDifferences is odd.\r\n        var diagonal, tempOriginalIndex;\r\n        for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\r\n            var furthestOriginalIndex = 0;\r\n            var furthestModifiedIndex = 0;\r\n            // Run the algorithm in the forward direction\r\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\r\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\r\n            for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\r\n                // STEP 1: We extend the furthest reaching point in the present diagonal\r\n                // by looking at the diagonals above and below and picking the one whose point\r\n                // is further away from the start point (originalStart, modifiedStart)\r\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\r\n                    originalIndex = forwardPoints[diagonal + 1];\r\n                }\r\n                else {\r\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\r\n                }\r\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\r\n                // Save the current originalIndex so we can test for false overlap in step 3\r\n                tempOriginalIndex = originalIndex;\r\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\r\n                // so long as the elements are equal.\r\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\r\n                    originalIndex++;\r\n                    modifiedIndex++;\r\n                }\r\n                forwardPoints[diagonal] = originalIndex;\r\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\r\n                    furthestOriginalIndex = originalIndex;\r\n                    furthestModifiedIndex = modifiedIndex;\r\n                }\r\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\r\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\r\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\r\n                // then check for overlap.\r\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\r\n                    if (originalIndex >= reversePoints[diagonal]) {\r\n                        midOriginalArr[0] = originalIndex;\r\n                        midModifiedArr[0] = modifiedIndex;\r\n                        if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\r\n                            // BINGO! We overlapped, and we have the full trace in memory!\r\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\r\n                        }\r\n                        else {\r\n                            // Either false overlap, or we didn't have enough memory for the full trace\r\n                            // Just return the recursion point\r\n                            return null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Check to see if we should be quitting early, before moving on to the next iteration.\r\n            var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\r\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\r\n                // We can't finish, so skip ahead to generating a result from what we have.\r\n                quitEarlyArr[0] = true;\r\n                // Use the furthest distance we got in the forward direction.\r\n                midOriginalArr[0] = furthestOriginalIndex;\r\n                midModifiedArr[0] = furthestModifiedIndex;\r\n                if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\r\n                    // Enough of the history is in memory to walk it backwards\r\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\r\n                }\r\n                else {\r\n                    // We didn't actually remember enough of the history.\r\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\r\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\r\n                    originalStart++;\r\n                    modifiedStart++;\r\n                    return [\r\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\r\n                    ];\r\n                }\r\n            }\r\n            // Run the algorithm in the reverse direction\r\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\r\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\r\n            for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\r\n                // STEP 1: We extend the furthest reaching point in the present diagonal\r\n                // by looking at the diagonals above and below and picking the one whose point\r\n                // is further away from the start point (originalEnd, modifiedEnd)\r\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\r\n                    originalIndex = reversePoints[diagonal + 1] - 1;\r\n                }\r\n                else {\r\n                    originalIndex = reversePoints[diagonal - 1];\r\n                }\r\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\r\n                // Save the current originalIndex so we can test for false overlap\r\n                tempOriginalIndex = originalIndex;\r\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\r\n                // as long as the elements are equal.\r\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\r\n                    originalIndex--;\r\n                    modifiedIndex--;\r\n                }\r\n                reversePoints[diagonal] = originalIndex;\r\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\r\n                // and diagonal is in the range of forward diagonals computed for numDifferences\r\n                // then check for overlap.\r\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\r\n                    if (originalIndex <= forwardPoints[diagonal]) {\r\n                        midOriginalArr[0] = originalIndex;\r\n                        midModifiedArr[0] = modifiedIndex;\r\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\r\n                            // BINGO! We overlapped, and we have the full trace in memory!\r\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\r\n                        }\r\n                        else {\r\n                            // Either false overlap, or we didn't have enough memory for the full trace\r\n                            // Just return the recursion point\r\n                            return null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Save current vectors to history before the next iteration\r\n            if (numDifferences <= MaxDifferencesHistory) {\r\n                // We are allocating space for one extra int, which we fill with\r\n                // the index of the diagonal base index\r\n                var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\r\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\r\n                MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\r\n                this.m_forwardHistory.push(temp);\r\n                temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\r\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\r\n                MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\r\n                this.m_reverseHistory.push(temp);\r\n            }\r\n        }\r\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\r\n        // NOTE: This part is a bit messy\r\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\r\n    };\r\n    /**\r\n     * Shifts the given changes to provide a more intuitive diff.\r\n     * While the first element in a diff matches the first element after the diff,\r\n     * we shift the diff down.\r\n     *\r\n     * @param changes The list of changes to shift\r\n     * @returns The shifted changes\r\n     */\r\n    LcsDiff.prototype.ShiftChanges = function (changes) {\r\n        var mergedDiffs;\r\n        do {\r\n            mergedDiffs = false;\r\n            // Shift all the changes down first\r\n            for (var i = 0; i < changes.length; i++) {\r\n                var change = changes[i];\r\n                var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\r\n                var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\r\n                var checkOriginal = change.originalLength > 0;\r\n                var checkModified = change.modifiedLength > 0;\r\n                while (change.originalStart + change.originalLength < originalStop &&\r\n                    change.modifiedStart + change.modifiedLength < modifiedStop &&\r\n                    (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\r\n                    (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\r\n                    change.originalStart++;\r\n                    change.modifiedStart++;\r\n                }\r\n            }\r\n            // Build up the new list (we have to build a new list because we\r\n            // might have changes we can merge together now)\r\n            var result = new Array();\r\n            var mergedChangeArr = [null];\r\n            for (var i = 0; i < changes.length; i++) {\r\n                if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\r\n                    mergedDiffs = true;\r\n                    result.push(mergedChangeArr[0]);\r\n                    i++;\r\n                }\r\n                else {\r\n                    result.push(changes[i]);\r\n                }\r\n            }\r\n            changes = result;\r\n        } while (mergedDiffs);\r\n        // Shift changes back up until we hit empty or whitespace-only lines\r\n        for (var i = changes.length - 1; i >= 0; i--) {\r\n            var change = changes[i];\r\n            var originalStop = 0;\r\n            var modifiedStop = 0;\r\n            if (i > 0) {\r\n                var prevChange = changes[i - 1];\r\n                if (prevChange.originalLength > 0) {\r\n                    originalStop = prevChange.originalStart + prevChange.originalLength;\r\n                }\r\n                if (prevChange.modifiedLength > 0) {\r\n                    modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\r\n                }\r\n            }\r\n            var checkOriginal = change.originalLength > 0;\r\n            var checkModified = change.modifiedLength > 0;\r\n            var bestDelta = 0;\r\n            var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\r\n            for (var delta = 1;; delta++) {\r\n                var originalStart = change.originalStart - delta;\r\n                var modifiedStart = change.modifiedStart - delta;\r\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\r\n                    break;\r\n                }\r\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\r\n                    break;\r\n                }\r\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\r\n                    break;\r\n                }\r\n                var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\r\n                if (score > bestScore) {\r\n                    bestScore = score;\r\n                    bestDelta = delta;\r\n                }\r\n            }\r\n            change.originalStart -= bestDelta;\r\n            change.modifiedStart -= bestDelta;\r\n        }\r\n        return changes;\r\n    };\r\n    LcsDiff.prototype._OriginalIsBoundary = function (index) {\r\n        if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\r\n            return true;\r\n        }\r\n        var element = this.OriginalSequence.getElementAtIndex(index);\r\n        return (typeof element === 'string' && /^\\s*$/.test(element));\r\n    };\r\n    LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\r\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\r\n            return true;\r\n        }\r\n        if (originalLength > 0) {\r\n            var originalEnd = originalStart + originalLength;\r\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    LcsDiff.prototype._ModifiedIsBoundary = function (index) {\r\n        if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\r\n            return true;\r\n        }\r\n        var element = this.ModifiedSequence.getElementAtIndex(index);\r\n        return (typeof element === 'string' && /^\\s*$/.test(element));\r\n    };\r\n    LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\r\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\r\n            return true;\r\n        }\r\n        if (modifiedLength > 0) {\r\n            var modifiedEnd = modifiedStart + modifiedLength;\r\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\r\n        var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\r\n        var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\r\n        return (originalScore + modifiedScore);\r\n    };\r\n    /**\r\n     * Concatenates the two input DiffChange lists and returns the resulting\r\n     * list.\r\n     * @param The left changes\r\n     * @param The right changes\r\n     * @returns The concatenated list\r\n     */\r\n    LcsDiff.prototype.ConcatenateChanges = function (left, right) {\r\n        var mergedChangeArr = [];\r\n        var result = null;\r\n        if (left.length === 0 || right.length === 0) {\r\n            return (right.length > 0) ? right : left;\r\n        }\r\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\r\n            // Since we break the problem down recursively, it is possible that we\r\n            // might recurse in the middle of a change thereby splitting it into\r\n            // two changes. Here in the combining stage, we detect and fuse those\r\n            // changes back together\r\n            result = new Array(left.length + right.length - 1);\r\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\r\n            result[left.length - 1] = mergedChangeArr[0];\r\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\r\n            return result;\r\n        }\r\n        else {\r\n            result = new Array(left.length + right.length);\r\n            MyArray.Copy(left, 0, result, 0, left.length);\r\n            MyArray.Copy(right, 0, result, left.length, right.length);\r\n            return result;\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if the two changes overlap and can be merged into a single\r\n     * change\r\n     * @param left The left change\r\n     * @param right The right change\r\n     * @param mergedChange The merged change if the two overlap, null otherwise\r\n     * @returns True if the two changes overlap\r\n     */\r\n    LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\r\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\r\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\r\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\r\n            var originalStart = left.originalStart;\r\n            var originalLength = left.originalLength;\r\n            var modifiedStart = left.modifiedStart;\r\n            var modifiedLength = left.modifiedLength;\r\n            if (left.originalStart + left.originalLength >= right.originalStart) {\r\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\r\n            }\r\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\r\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\r\n            }\r\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\r\n            return true;\r\n        }\r\n        else {\r\n            mergedChangeArr[0] = null;\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Helper method used to clip a diagonal index to the range of valid\r\n     * diagonals. This also decides whether or not the diagonal index,\r\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\r\n     * one inside the boundary depending on the Even/Odd status of the boundary\r\n     * and numDifferences.\r\n     * @param diagonal The index of the diagonal to clip.\r\n     * @param numDifferences The current number of differences being iterated upon.\r\n     * @param diagonalBaseIndex The base reference diagonal.\r\n     * @param numDiagonals The total number of diagonals.\r\n     * @returns The clipped diagonal index.\r\n     */\r\n    LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\r\n        if (diagonal >= 0 && diagonal < numDiagonals) {\r\n            // Nothing to clip, its in range\r\n            return diagonal;\r\n        }\r\n        // diagonalsBelow: The number of diagonals below the reference diagonal\r\n        // diagonalsAbove: The number of diagonals above the reference diagonal\r\n        var diagonalsBelow = diagonalBaseIndex;\r\n        var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\r\n        var diffEven = (numDifferences % 2 === 0);\r\n        if (diagonal < 0) {\r\n            var lowerBoundEven = (diagonalsBelow % 2 === 0);\r\n            return (diffEven === lowerBoundEven) ? 0 : 1;\r\n        }\r\n        else {\r\n            var upperBoundEven = (diagonalsAbove % 2 === 0);\r\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\r\n        }\r\n    };\r\n    return LcsDiff;\r\n}());\r\nexport { LcsDiff };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n/**\r\n * The empty string.\r\n */\r\nexport var empty = '';\r\nexport function isFalsyOrWhitespace(str) {\r\n    if (!str || typeof str !== 'string') {\r\n        return true;\r\n    }\r\n    return str.trim().length === 0;\r\n}\r\n/**\r\n * @returns the provided number with the given number of preceding zeros.\r\n */\r\nexport function pad(n, l, char) {\r\n    if (char === void 0) { char = '0'; }\r\n    var str = '' + n;\r\n    var r = [str];\r\n    for (var i = str.length; i < l; i++) {\r\n        r.push(char);\r\n    }\r\n    return r.reverse().join('');\r\n}\r\nvar _formatRegexp = /{(\\d+)}/g;\r\n/**\r\n * Helper to produce a string with a variable number of arguments. Insert variable segments\r\n * into the string using the {n} notation where N is the index of the argument following the string.\r\n * @param value string to which formatting is applied\r\n * @param args replacements for {n}-entries\r\n */\r\nexport function format(value) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    if (args.length === 0) {\r\n        return value;\r\n    }\r\n    return value.replace(_formatRegexp, function (match, group) {\r\n        var idx = parseInt(group, 10);\r\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\r\n            match :\r\n            args[idx];\r\n    });\r\n}\r\n/**\r\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\r\n * being used e.g. in HTMLElement.innerHTML.\r\n */\r\nexport function escape(html) {\r\n    return html.replace(/[<|>|&]/g, function (match) {\r\n        switch (match) {\r\n            case '<': return '&lt;';\r\n            case '>': return '&gt;';\r\n            case '&': return '&amp;';\r\n            default: return match;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Escapes regular expression characters in a given string\r\n */\r\nexport function escapeRegExpCharacters(value) {\r\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\r\n}\r\n/**\r\n * Removes all occurrences of needle from the beginning and end of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim (default is a blank)\r\n */\r\nexport function trim(haystack, needle) {\r\n    if (needle === void 0) { needle = ' '; }\r\n    var trimmed = ltrim(haystack, needle);\r\n    return rtrim(trimmed, needle);\r\n}\r\n/**\r\n * Removes all occurrences of needle from the beginning of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim\r\n */\r\nexport function ltrim(haystack, needle) {\r\n    if (!haystack || !needle) {\r\n        return haystack;\r\n    }\r\n    var needleLen = needle.length;\r\n    if (needleLen === 0 || haystack.length === 0) {\r\n        return haystack;\r\n    }\r\n    var offset = 0, idx = -1;\r\n    while ((idx = haystack.indexOf(needle, offset)) === offset) {\r\n        offset = offset + needleLen;\r\n    }\r\n    return haystack.substring(offset);\r\n}\r\n/**\r\n * Removes all occurrences of needle from the end of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim\r\n */\r\nexport function rtrim(haystack, needle) {\r\n    if (!haystack || !needle) {\r\n        return haystack;\r\n    }\r\n    var needleLen = needle.length, haystackLen = haystack.length;\r\n    if (needleLen === 0 || haystackLen === 0) {\r\n        return haystack;\r\n    }\r\n    var offset = haystackLen, idx = -1;\r\n    while (true) {\r\n        idx = haystack.lastIndexOf(needle, offset - 1);\r\n        if (idx === -1 || idx + needleLen !== offset) {\r\n            break;\r\n        }\r\n        if (idx === 0) {\r\n            return '';\r\n        }\r\n        offset = idx;\r\n    }\r\n    return haystack.substring(0, offset);\r\n}\r\nexport function convertSimple2RegExpPattern(pattern) {\r\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\r\n}\r\n/**\r\n * Determines if haystack starts with needle.\r\n */\r\nexport function startsWith(haystack, needle) {\r\n    if (haystack.length < needle.length) {\r\n        return false;\r\n    }\r\n    if (haystack === needle) {\r\n        return true;\r\n    }\r\n    for (var i = 0; i < needle.length; i++) {\r\n        if (haystack[i] !== needle[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Determines if haystack ends with needle.\r\n */\r\nexport function endsWith(haystack, needle) {\r\n    var diff = haystack.length - needle.length;\r\n    if (diff > 0) {\r\n        return haystack.indexOf(needle, diff) === diff;\r\n    }\r\n    else if (diff === 0) {\r\n        return haystack === needle;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport function createRegExp(searchString, isRegex, options) {\r\n    if (options === void 0) { options = {}; }\r\n    if (!searchString) {\r\n        throw new Error('Cannot create regex from empty string');\r\n    }\r\n    if (!isRegex) {\r\n        searchString = escapeRegExpCharacters(searchString);\r\n    }\r\n    if (options.wholeWord) {\r\n        if (!/\\B/.test(searchString.charAt(0))) {\r\n            searchString = '\\\\b' + searchString;\r\n        }\r\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\r\n            searchString = searchString + '\\\\b';\r\n        }\r\n    }\r\n    var modifiers = '';\r\n    if (options.global) {\r\n        modifiers += 'g';\r\n    }\r\n    if (!options.matchCase) {\r\n        modifiers += 'i';\r\n    }\r\n    if (options.multiline) {\r\n        modifiers += 'm';\r\n    }\r\n    return new RegExp(searchString, modifiers);\r\n}\r\nexport function regExpLeadsToEndlessLoop(regexp) {\r\n    // Exit early if it's one of these special cases which are meant to match\r\n    // against an empty string\r\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\r\n        return false;\r\n    }\r\n    // We check against an empty string. If the regular expression doesn't advance\r\n    // (e.g. ends in an endless loop) it will match an empty string.\r\n    var match = regexp.exec('');\r\n    return (match && regexp.lastIndex === 0);\r\n}\r\n/**\r\n * Returns first index of the string that is not whitespace.\r\n * If string is empty or contains only whitespaces, returns -1\r\n */\r\nexport function firstNonWhitespaceIndex(str) {\r\n    for (var i = 0, len = str.length; i < len; i++) {\r\n        var chCode = str.charCodeAt(i);\r\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Returns the leading whitespace of the string.\r\n * If the string contains only whitespaces, returns entire string\r\n */\r\nexport function getLeadingWhitespace(str, start, end) {\r\n    if (start === void 0) { start = 0; }\r\n    if (end === void 0) { end = str.length; }\r\n    for (var i = start; i < end; i++) {\r\n        var chCode = str.charCodeAt(i);\r\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\r\n            return str.substring(start, i);\r\n        }\r\n    }\r\n    return str.substring(start, end);\r\n}\r\n/**\r\n * Returns last index of the string that is not whitespace.\r\n * If string is empty or contains only whitespaces, returns -1\r\n */\r\nexport function lastNonWhitespaceIndex(str, startIndex) {\r\n    if (startIndex === void 0) { startIndex = str.length - 1; }\r\n    for (var i = startIndex; i >= 0; i--) {\r\n        var chCode = str.charCodeAt(i);\r\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function compare(a, b) {\r\n    if (a < b) {\r\n        return -1;\r\n    }\r\n    else if (a > b) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\nexport function compareIgnoreCase(a, b) {\r\n    var len = Math.min(a.length, b.length);\r\n    for (var i = 0; i < len; i++) {\r\n        var codeA = a.charCodeAt(i);\r\n        var codeB = b.charCodeAt(i);\r\n        if (codeA === codeB) {\r\n            // equal\r\n            continue;\r\n        }\r\n        if (isUpperAsciiLetter(codeA)) {\r\n            codeA += 32;\r\n        }\r\n        if (isUpperAsciiLetter(codeB)) {\r\n            codeB += 32;\r\n        }\r\n        var diff = codeA - codeB;\r\n        if (diff === 0) {\r\n            // equal -> ignoreCase\r\n            continue;\r\n        }\r\n        else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\r\n            //\r\n            return diff;\r\n        }\r\n        else {\r\n            return compare(a.toLowerCase(), b.toLowerCase());\r\n        }\r\n    }\r\n    if (a.length < b.length) {\r\n        return -1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\nexport function isLowerAsciiLetter(code) {\r\n    return code >= 97 /* a */ && code <= 122 /* z */;\r\n}\r\nexport function isUpperAsciiLetter(code) {\r\n    return code >= 65 /* A */ && code <= 90 /* Z */;\r\n}\r\nfunction isAsciiLetter(code) {\r\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\r\n}\r\nexport function equalsIgnoreCase(a, b) {\r\n    var len1 = a ? a.length : 0;\r\n    var len2 = b ? b.length : 0;\r\n    if (len1 !== len2) {\r\n        return false;\r\n    }\r\n    return doEqualsIgnoreCase(a, b);\r\n}\r\nfunction doEqualsIgnoreCase(a, b, stopAt) {\r\n    if (stopAt === void 0) { stopAt = a.length; }\r\n    if (typeof a !== 'string' || typeof b !== 'string') {\r\n        return false;\r\n    }\r\n    for (var i = 0; i < stopAt; i++) {\r\n        var codeA = a.charCodeAt(i);\r\n        var codeB = b.charCodeAt(i);\r\n        if (codeA === codeB) {\r\n            continue;\r\n        }\r\n        // a-z A-Z\r\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\r\n            var diff = Math.abs(codeA - codeB);\r\n            if (diff !== 0 && diff !== 32) {\r\n                return false;\r\n            }\r\n        }\r\n        // Any other charcode\r\n        else {\r\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function startsWithIgnoreCase(str, candidate) {\r\n    var candidateLength = candidate.length;\r\n    if (candidate.length > str.length) {\r\n        return false;\r\n    }\r\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\r\n}\r\n/**\r\n * @returns the length of the common prefix of the two strings.\r\n */\r\nexport function commonPrefixLength(a, b) {\r\n    var i, len = Math.min(a.length, b.length);\r\n    for (i = 0; i < len; i++) {\r\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return len;\r\n}\r\n/**\r\n * @returns the length of the common suffix of the two strings.\r\n */\r\nexport function commonSuffixLength(a, b) {\r\n    var i, len = Math.min(a.length, b.length);\r\n    var aLastIndex = a.length - 1;\r\n    var bLastIndex = b.length - 1;\r\n    for (i = 0; i < len; i++) {\r\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return len;\r\n}\r\n// --- unicode\r\n// http://en.wikipedia.org/wiki/Surrogate_pair\r\n// Returns the code point starting at a specified index in a string\r\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\r\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\r\n//export function getUnicodePoint(str:string, index:number, len:number):number {\r\n//\tlet chrCode = str.charCodeAt(index);\r\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\r\n//\t\tlet nextChrCode = str.charCodeAt(index + 1);\r\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\r\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\r\n//\t\t}\r\n//\t}\r\n//\treturn chrCode;\r\n//}\r\nexport function isHighSurrogate(charCode) {\r\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\r\n}\r\nexport function isLowSurrogate(charCode) {\r\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\r\n}\r\n/**\r\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\r\n */\r\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\r\n/**\r\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\r\n */\r\nexport function containsRTL(str) {\r\n    return CONTAINS_RTL.test(str);\r\n}\r\n/**\r\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\r\n */\r\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\r\nexport function containsEmoji(str) {\r\n    return CONTAINS_EMOJI.test(str);\r\n}\r\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\r\n/**\r\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\r\n */\r\nexport function isBasicASCII(str) {\r\n    return IS_BASIC_ASCII.test(str);\r\n}\r\nexport function containsFullWidthCharacter(str) {\r\n    for (var i = 0, len = str.length; i < len; i++) {\r\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function isFullWidthCharacter(charCode) {\r\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\r\n    // http://jrgraphix.net/research/unicode_blocks.php\r\n    //          2E80 — 2EFF   CJK Radicals Supplement\r\n    //          2F00 — 2FDF   Kangxi Radicals\r\n    //          2FF0 — 2FFF   Ideographic Description Characters\r\n    //          3000 — 303F   CJK Symbols and Punctuation\r\n    //          3040 — 309F   Hiragana\r\n    //          30A0 — 30FF   Katakana\r\n    //          3100 — 312F   Bopomofo\r\n    //          3130 — 318F   Hangul Compatibility Jamo\r\n    //          3190 — 319F   Kanbun\r\n    //          31A0 — 31BF   Bopomofo Extended\r\n    //          31F0 — 31FF   Katakana Phonetic Extensions\r\n    //          3200 — 32FF   Enclosed CJK Letters and Months\r\n    //          3300 — 33FF   CJK Compatibility\r\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\r\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\r\n    //          4E00 — 9FFF   CJK Unified Ideographs\r\n    //          A000 — A48F   Yi Syllables\r\n    //          A490 — A4CF   Yi Radicals\r\n    //          AC00 — D7AF   Hangul Syllables\r\n    // [IGNORE] D800 — DB7F   High Surrogates\r\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\r\n    // [IGNORE] DC00 — DFFF   Low Surrogates\r\n    // [IGNORE] E000 — F8FF   Private Use Area\r\n    //          F900 — FAFF   CJK Compatibility Ideographs\r\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\r\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\r\n    // [IGNORE] FE00 — FE0F   Variation Selectors\r\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\r\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\r\n    // [IGNORE] FE50 — FE6F   Small Form Variants\r\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\r\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\r\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\r\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\r\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\r\n    // [IGNORE] FFF0 — FFFF   Specials\r\n    charCode = +charCode; // @perf\r\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\r\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\r\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\r\n}\r\n// -- UTF-8 BOM\r\nexport var UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\r\nexport function startsWithUTF8BOM(str) {\r\n    return (str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\r\n}\r\nexport function safeBtoa(str) {\r\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\r\n}\r\nexport function repeat(s, count) {\r\n    var result = '';\r\n    for (var i = 0; i < count; i++) {\r\n        result += s;\r\n    }\r\n    return result;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\r\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\r\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\r\n    var diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\r\n    return diffAlgo.ComputeDiff(pretty);\r\n}\r\nvar LineMarkerSequence = /** @class */ (function () {\r\n    function LineMarkerSequence(lines) {\r\n        var startColumns = [];\r\n        var endColumns = [];\r\n        for (var i = 0, length_1 = lines.length; i < length_1; i++) {\r\n            startColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\r\n            endColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\r\n        }\r\n        this._lines = lines;\r\n        this._startColumns = startColumns;\r\n        this._endColumns = endColumns;\r\n    }\r\n    LineMarkerSequence.prototype.getLength = function () {\r\n        return this._lines.length;\r\n    };\r\n    LineMarkerSequence.prototype.getElementAtIndex = function (i) {\r\n        return this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\r\n    };\r\n    LineMarkerSequence.prototype.getStartLineNumber = function (i) {\r\n        return i + 1;\r\n    };\r\n    LineMarkerSequence.prototype.getEndLineNumber = function (i) {\r\n        return i + 1;\r\n    };\r\n    LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\r\n        var r = strings.firstNonWhitespaceIndex(txt);\r\n        if (r === -1) {\r\n            return defaultValue;\r\n        }\r\n        return r + 1;\r\n    };\r\n    LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\r\n        var r = strings.lastNonWhitespaceIndex(txt);\r\n        if (r === -1) {\r\n            return defaultValue;\r\n        }\r\n        return r + 2;\r\n    };\r\n    LineMarkerSequence.prototype.getCharSequence = function (shouldIgnoreTrimWhitespace, startIndex, endIndex) {\r\n        var charCodes = [];\r\n        var lineNumbers = [];\r\n        var columns = [];\r\n        var len = 0;\r\n        for (var index = startIndex; index <= endIndex; index++) {\r\n            var lineContent = this._lines[index];\r\n            var startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\r\n            var endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\r\n            for (var col = startColumn; col < endColumn; col++) {\r\n                charCodes[len] = lineContent.charCodeAt(col - 1);\r\n                lineNumbers[len] = index + 1;\r\n                columns[len] = col;\r\n                len++;\r\n            }\r\n        }\r\n        return new CharSequence(charCodes, lineNumbers, columns);\r\n    };\r\n    return LineMarkerSequence;\r\n}());\r\nvar CharSequence = /** @class */ (function () {\r\n    function CharSequence(charCodes, lineNumbers, columns) {\r\n        this._charCodes = charCodes;\r\n        this._lineNumbers = lineNumbers;\r\n        this._columns = columns;\r\n    }\r\n    CharSequence.prototype.getLength = function () {\r\n        return this._charCodes.length;\r\n    };\r\n    CharSequence.prototype.getElementAtIndex = function (i) {\r\n        return this._charCodes[i];\r\n    };\r\n    CharSequence.prototype.getStartLineNumber = function (i) {\r\n        return this._lineNumbers[i];\r\n    };\r\n    CharSequence.prototype.getStartColumn = function (i) {\r\n        return this._columns[i];\r\n    };\r\n    CharSequence.prototype.getEndLineNumber = function (i) {\r\n        return this._lineNumbers[i];\r\n    };\r\n    CharSequence.prototype.getEndColumn = function (i) {\r\n        return this._columns[i] + 1;\r\n    };\r\n    return CharSequence;\r\n}());\r\nvar CharChange = /** @class */ (function () {\r\n    function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\r\n        this.originalStartLineNumber = originalStartLineNumber;\r\n        this.originalStartColumn = originalStartColumn;\r\n        this.originalEndLineNumber = originalEndLineNumber;\r\n        this.originalEndColumn = originalEndColumn;\r\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\r\n        this.modifiedStartColumn = modifiedStartColumn;\r\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\r\n        this.modifiedEndColumn = modifiedEndColumn;\r\n    }\r\n    CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\r\n        var originalStartLineNumber;\r\n        var originalStartColumn;\r\n        var originalEndLineNumber;\r\n        var originalEndColumn;\r\n        var modifiedStartLineNumber;\r\n        var modifiedStartColumn;\r\n        var modifiedEndLineNumber;\r\n        var modifiedEndColumn;\r\n        if (diffChange.originalLength === 0) {\r\n            originalStartLineNumber = 0;\r\n            originalStartColumn = 0;\r\n            originalEndLineNumber = 0;\r\n            originalEndColumn = 0;\r\n        }\r\n        else {\r\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\r\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\r\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\r\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\r\n        }\r\n        if (diffChange.modifiedLength === 0) {\r\n            modifiedStartLineNumber = 0;\r\n            modifiedStartColumn = 0;\r\n            modifiedEndLineNumber = 0;\r\n            modifiedEndColumn = 0;\r\n        }\r\n        else {\r\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\r\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\r\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n        }\r\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\r\n    };\r\n    return CharChange;\r\n}());\r\nfunction postProcessCharChanges(rawChanges) {\r\n    if (rawChanges.length <= 1) {\r\n        return rawChanges;\r\n    }\r\n    var result = [rawChanges[0]];\r\n    var prevChange = result[0];\r\n    for (var i = 1, len = rawChanges.length; i < len; i++) {\r\n        var currChange = rawChanges[i];\r\n        var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\r\n        var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\r\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\r\n        var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\r\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\r\n            // Merge the current change into the previous one\r\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\r\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\r\n        }\r\n        else {\r\n            // Add the current change\r\n            result.push(currChange);\r\n            prevChange = currChange;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar LineChange = /** @class */ (function () {\r\n    function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\r\n        this.originalStartLineNumber = originalStartLineNumber;\r\n        this.originalEndLineNumber = originalEndLineNumber;\r\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\r\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\r\n        this.charChanges = charChanges;\r\n    }\r\n    LineChange.createFromDiffResult = function (shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldComputeCharChanges, shouldPostProcessCharChanges) {\r\n        var originalStartLineNumber;\r\n        var originalEndLineNumber;\r\n        var modifiedStartLineNumber;\r\n        var modifiedEndLineNumber;\r\n        var charChanges;\r\n        if (diffChange.originalLength === 0) {\r\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\r\n            originalEndLineNumber = 0;\r\n        }\r\n        else {\r\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\r\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\r\n        }\r\n        if (diffChange.modifiedLength === 0) {\r\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\r\n            modifiedEndLineNumber = 0;\r\n        }\r\n        else {\r\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\r\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n        }\r\n        if (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\r\n            var originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\r\n            var modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\r\n            var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\r\n            if (shouldPostProcessCharChanges) {\r\n                rawChanges = postProcessCharChanges(rawChanges);\r\n            }\r\n            charChanges = [];\r\n            for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\r\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\r\n            }\r\n        }\r\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\r\n    };\r\n    return LineChange;\r\n}());\r\nvar DiffComputer = /** @class */ (function () {\r\n    function DiffComputer(originalLines, modifiedLines, opts) {\r\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\r\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\r\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\r\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\r\n        this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\r\n        this.originalLines = originalLines;\r\n        this.modifiedLines = modifiedLines;\r\n        this.original = new LineMarkerSequence(originalLines);\r\n        this.modified = new LineMarkerSequence(modifiedLines);\r\n    }\r\n    DiffComputer.prototype.computeDiff = function () {\r\n        if (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\r\n            // empty original => fast path\r\n            return [{\r\n                    originalStartLineNumber: 1,\r\n                    originalEndLineNumber: 1,\r\n                    modifiedStartLineNumber: 1,\r\n                    modifiedEndLineNumber: this.modified.getLength(),\r\n                    charChanges: [{\r\n                            modifiedEndColumn: 0,\r\n                            modifiedEndLineNumber: 0,\r\n                            modifiedStartColumn: 0,\r\n                            modifiedStartLineNumber: 0,\r\n                            originalEndColumn: 0,\r\n                            originalEndLineNumber: 0,\r\n                            originalStartColumn: 0,\r\n                            originalStartLineNumber: 0\r\n                        }]\r\n                }];\r\n        }\r\n        if (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\r\n            // empty modified => fast path\r\n            return [{\r\n                    originalStartLineNumber: 1,\r\n                    originalEndLineNumber: this.original.getLength(),\r\n                    modifiedStartLineNumber: 1,\r\n                    modifiedEndLineNumber: 1,\r\n                    charChanges: [{\r\n                            modifiedEndColumn: 0,\r\n                            modifiedEndLineNumber: 0,\r\n                            modifiedStartColumn: 0,\r\n                            modifiedStartLineNumber: 0,\r\n                            originalEndColumn: 0,\r\n                            originalEndLineNumber: 0,\r\n                            originalStartColumn: 0,\r\n                            originalStartLineNumber: 0\r\n                        }]\r\n                }];\r\n        }\r\n        this.computationStartTime = (new Date()).getTime();\r\n        var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\r\n        // The diff is always computed with ignoring trim whitespace\r\n        // This ensures we get the prettiest diff\r\n        if (this.shouldIgnoreTrimWhitespace) {\r\n            var lineChanges = [];\r\n            for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\r\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\r\n            }\r\n            return lineChanges;\r\n        }\r\n        // Need to post-process and introduce changes where the trim whitespace is different\r\n        // Note that we are looping starting at -1 to also cover the lines before the first change\r\n        var result = [];\r\n        var originalLineIndex = 0;\r\n        var modifiedLineIndex = 0;\r\n        for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\r\n            var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\r\n            var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\r\n            var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\r\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\r\n                var originalLine = this.originalLines[originalLineIndex];\r\n                var modifiedLine = this.modifiedLines[modifiedLineIndex];\r\n                if (originalLine !== modifiedLine) {\r\n                    // These lines differ only in trim whitespace\r\n                    // Check the leading whitespace\r\n                    {\r\n                        var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\r\n                        var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\r\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\r\n                            var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\r\n                            var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\r\n                            if (originalChar !== modifiedChar) {\r\n                                break;\r\n                            }\r\n                            originalStartColumn--;\r\n                            modifiedStartColumn--;\r\n                        }\r\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\r\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\r\n                        }\r\n                    }\r\n                    // Check the trailing whitespace\r\n                    {\r\n                        var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\r\n                        var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\r\n                        var originalMaxColumn = originalLine.length + 1;\r\n                        var modifiedMaxColumn = modifiedLine.length + 1;\r\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\r\n                            var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\r\n                            var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\r\n                            if (originalChar !== modifiedChar) {\r\n                                break;\r\n                            }\r\n                            originalEndColumn++;\r\n                            modifiedEndColumn++;\r\n                        }\r\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\r\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\r\n                        }\r\n                    }\r\n                }\r\n                originalLineIndex++;\r\n                modifiedLineIndex++;\r\n            }\r\n            if (nextChange) {\r\n                // Emit the actual change\r\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\r\n                originalLineIndex += nextChange.originalLength;\r\n                modifiedLineIndex += nextChange.modifiedLength;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\r\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\r\n            // Merged into previous\r\n            return;\r\n        }\r\n        var charChanges;\r\n        if (this.shouldComputeCharChanges) {\r\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\r\n        }\r\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\r\n    };\r\n    DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\r\n        var len = result.length;\r\n        if (len === 0) {\r\n            return false;\r\n        }\r\n        var prevChange = result[len - 1];\r\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\r\n            // Don't merge with inserts/deletes\r\n            return false;\r\n        }\r\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\r\n            prevChange.originalEndLineNumber = originalLineNumber;\r\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\r\n            if (this.shouldComputeCharChanges) {\r\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    DiffComputer.prototype._continueProcessingPredicate = function () {\r\n        if (this.maximumRunTimeMs === 0) {\r\n            return true;\r\n        }\r\n        var now = (new Date()).getTime();\r\n        return now - this.computationStartTime < this.maximumRunTimeMs;\r\n    };\r\n    return DiffComputer;\r\n}());\r\nexport { DiffComputer };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar Uint8Matrix = /** @class */ (function () {\r\n    function Uint8Matrix(rows, cols, defaultValue) {\r\n        var data = new Uint8Array(rows * cols);\r\n        for (var i = 0, len = rows * cols; i < len; i++) {\r\n            data[i] = defaultValue;\r\n        }\r\n        this._data = data;\r\n        this.rows = rows;\r\n        this.cols = cols;\r\n    }\r\n    Uint8Matrix.prototype.get = function (row, col) {\r\n        return this._data[row * this.cols + col];\r\n    };\r\n    Uint8Matrix.prototype.set = function (row, col, value) {\r\n        this._data[row * this.cols + col] = value;\r\n    };\r\n    return Uint8Matrix;\r\n}());\r\nexport { Uint8Matrix };\r\nexport function toUint8(v) {\r\n    if (v < 0) {\r\n        return 0;\r\n    }\r\n    if (v > 255 /* MAX_UINT_8 */) {\r\n        return 255 /* MAX_UINT_8 */;\r\n    }\r\n    return v | 0;\r\n}\r\nexport function toUint32(v) {\r\n    if (v < 0) {\r\n        return 0;\r\n    }\r\n    if (v > 4294967295 /* MAX_UINT_32 */) {\r\n        return 4294967295 /* MAX_UINT_32 */;\r\n    }\r\n    return v | 0;\r\n}\r\nexport function toUint32Array(arr) {\r\n    var len = arr.length;\r\n    var r = new Uint32Array(len);\r\n    for (var i = 0; i < len; i++) {\r\n        r[i] = toUint32(arr[i]);\r\n    }\r\n    return r;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { toUint32 } from '../core/uint.js';\r\nvar PrefixSumIndexOfResult = /** @class */ (function () {\r\n    function PrefixSumIndexOfResult(index, remainder) {\r\n        this.index = index;\r\n        this.remainder = remainder;\r\n    }\r\n    return PrefixSumIndexOfResult;\r\n}());\r\nexport { PrefixSumIndexOfResult };\r\nvar PrefixSumComputer = /** @class */ (function () {\r\n    function PrefixSumComputer(values) {\r\n        this.values = values;\r\n        this.prefixSum = new Uint32Array(values.length);\r\n        this.prefixSumValidIndex = new Int32Array(1);\r\n        this.prefixSumValidIndex[0] = -1;\r\n    }\r\n    PrefixSumComputer.prototype.getCount = function () {\r\n        return this.values.length;\r\n    };\r\n    PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\r\n        insertIndex = toUint32(insertIndex);\r\n        var oldValues = this.values;\r\n        var oldPrefixSum = this.prefixSum;\r\n        var insertValuesLen = insertValues.length;\r\n        if (insertValuesLen === 0) {\r\n            return false;\r\n        }\r\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\r\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\r\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\r\n        this.values.set(insertValues, insertIndex);\r\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\r\n            this.prefixSumValidIndex[0] = insertIndex - 1;\r\n        }\r\n        this.prefixSum = new Uint32Array(this.values.length);\r\n        if (this.prefixSumValidIndex[0] >= 0) {\r\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\r\n        }\r\n        return true;\r\n    };\r\n    PrefixSumComputer.prototype.changeValue = function (index, value) {\r\n        index = toUint32(index);\r\n        value = toUint32(value);\r\n        if (this.values[index] === value) {\r\n            return false;\r\n        }\r\n        this.values[index] = value;\r\n        if (index - 1 < this.prefixSumValidIndex[0]) {\r\n            this.prefixSumValidIndex[0] = index - 1;\r\n        }\r\n        return true;\r\n    };\r\n    PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\r\n        startIndex = toUint32(startIndex);\r\n        cnt = toUint32(cnt);\r\n        var oldValues = this.values;\r\n        var oldPrefixSum = this.prefixSum;\r\n        if (startIndex >= oldValues.length) {\r\n            return false;\r\n        }\r\n        var maxCnt = oldValues.length - startIndex;\r\n        if (cnt >= maxCnt) {\r\n            cnt = maxCnt;\r\n        }\r\n        if (cnt === 0) {\r\n            return false;\r\n        }\r\n        this.values = new Uint32Array(oldValues.length - cnt);\r\n        this.values.set(oldValues.subarray(0, startIndex), 0);\r\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\r\n        this.prefixSum = new Uint32Array(this.values.length);\r\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\r\n            this.prefixSumValidIndex[0] = startIndex - 1;\r\n        }\r\n        if (this.prefixSumValidIndex[0] >= 0) {\r\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\r\n        }\r\n        return true;\r\n    };\r\n    PrefixSumComputer.prototype.getTotalValue = function () {\r\n        if (this.values.length === 0) {\r\n            return 0;\r\n        }\r\n        return this._getAccumulatedValue(this.values.length - 1);\r\n    };\r\n    PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\r\n        if (index < 0) {\r\n            return 0;\r\n        }\r\n        index = toUint32(index);\r\n        return this._getAccumulatedValue(index);\r\n    };\r\n    PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\r\n        if (index <= this.prefixSumValidIndex[0]) {\r\n            return this.prefixSum[index];\r\n        }\r\n        var startIndex = this.prefixSumValidIndex[0] + 1;\r\n        if (startIndex === 0) {\r\n            this.prefixSum[0] = this.values[0];\r\n            startIndex++;\r\n        }\r\n        if (index >= this.values.length) {\r\n            index = this.values.length - 1;\r\n        }\r\n        for (var i = startIndex; i <= index; i++) {\r\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\r\n        }\r\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\r\n        return this.prefixSum[index];\r\n    };\r\n    PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\r\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\r\n        // Compute all sums (to get a fully valid prefixSum)\r\n        this.getTotalValue();\r\n        var low = 0;\r\n        var high = this.values.length - 1;\r\n        var mid;\r\n        var midStop;\r\n        var midStart;\r\n        while (low <= high) {\r\n            mid = low + ((high - low) / 2) | 0;\r\n            midStop = this.prefixSum[mid];\r\n            midStart = midStop - this.values[mid];\r\n            if (accumulatedValue < midStart) {\r\n                high = mid - 1;\r\n            }\r\n            else if (accumulatedValue >= midStop) {\r\n                low = mid + 1;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\r\n    };\r\n    return PrefixSumComputer;\r\n}());\r\nexport { PrefixSumComputer };\r\nvar PrefixSumComputerWithCache = /** @class */ (function () {\r\n    function PrefixSumComputerWithCache(values) {\r\n        this._cacheAccumulatedValueStart = 0;\r\n        this._cache = null;\r\n        this._actual = new PrefixSumComputer(values);\r\n        this._bustCache();\r\n    }\r\n    PrefixSumComputerWithCache.prototype._bustCache = function () {\r\n        this._cacheAccumulatedValueStart = 0;\r\n        this._cache = null;\r\n    };\r\n    PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\r\n        if (this._actual.insertValues(insertIndex, insertValues)) {\r\n            this._bustCache();\r\n        }\r\n    };\r\n    PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\r\n        if (this._actual.changeValue(index, value)) {\r\n            this._bustCache();\r\n        }\r\n    };\r\n    PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\r\n        if (this._actual.removeValues(startIndex, cnt)) {\r\n            this._bustCache();\r\n        }\r\n    };\r\n    PrefixSumComputerWithCache.prototype.getTotalValue = function () {\r\n        return this._actual.getTotalValue();\r\n    };\r\n    PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\r\n        return this._actual.getAccumulatedValue(index);\r\n    };\r\n    PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\r\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\r\n        if (this._cache !== null) {\r\n            var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\r\n            if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\r\n                // Cache hit!\r\n                return this._cache[cacheIndex];\r\n            }\r\n        }\r\n        // Cache miss!\r\n        return this._actual.getIndexOf(accumulatedValue);\r\n    };\r\n    /**\r\n     * Gives a hint that a lot of requests are about to come in for these accumulated values.\r\n     */\r\n    PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\r\n        var newCache = [];\r\n        for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\r\n            newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\r\n        }\r\n        this._cache = newCache;\r\n        this._cacheAccumulatedValueStart = accumulatedValueStart;\r\n    };\r\n    return PrefixSumComputerWithCache;\r\n}());\r\nexport { PrefixSumComputerWithCache };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\r\nimport { Position } from '../core/position.js';\r\nvar MirrorTextModel = /** @class */ (function () {\r\n    function MirrorTextModel(uri, lines, eol, versionId) {\r\n        this._uri = uri;\r\n        this._lines = lines;\r\n        this._eol = eol;\r\n        this._versionId = versionId;\r\n    }\r\n    MirrorTextModel.prototype.dispose = function () {\r\n        this._lines.length = 0;\r\n    };\r\n    MirrorTextModel.prototype.getText = function () {\r\n        return this._lines.join(this._eol);\r\n    };\r\n    MirrorTextModel.prototype.onEvents = function (e) {\r\n        if (e.eol && e.eol !== this._eol) {\r\n            this._eol = e.eol;\r\n            this._lineStarts = null;\r\n        }\r\n        // Update my lines\r\n        var changes = e.changes;\r\n        for (var i = 0, len = changes.length; i < len; i++) {\r\n            var change = changes[i];\r\n            this._acceptDeleteRange(change.range);\r\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\r\n        }\r\n        this._versionId = e.versionId;\r\n    };\r\n    MirrorTextModel.prototype._ensureLineStarts = function () {\r\n        if (!this._lineStarts) {\r\n            var eolLength = this._eol.length;\r\n            var linesLength = this._lines.length;\r\n            var lineStartValues = new Uint32Array(linesLength);\r\n            for (var i = 0; i < linesLength; i++) {\r\n                lineStartValues[i] = this._lines[i].length + eolLength;\r\n            }\r\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\r\n        }\r\n    };\r\n    /**\r\n     * All changes to a line's text go through this method\r\n     */\r\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\r\n        this._lines[lineIndex] = newValue;\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\r\n        }\r\n    };\r\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\r\n        if (range.startLineNumber === range.endLineNumber) {\r\n            if (range.startColumn === range.endColumn) {\r\n                // Nothing to delete\r\n                return;\r\n            }\r\n            // Delete text on the affected line\r\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\r\n            return;\r\n        }\r\n        // Take remaining text on last line and append it to remaining text on first line\r\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\r\n        // Delete middle lines\r\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n        }\r\n    };\r\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\r\n        if (insertText.length === 0) {\r\n            // Nothing to insert\r\n            return;\r\n        }\r\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\r\n        if (insertLines.length === 1) {\r\n            // Inserting text on one line\r\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n                + insertLines[0]\r\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\r\n            return;\r\n        }\r\n        // Append overflowing text from first line to the end of text to insert\r\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\r\n        // Delete overflowing text from first line and insert text on first line\r\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n            + insertLines[0]);\r\n        // Insert new lines & store lengths\r\n        var newLengths = new Uint32Array(insertLines.length - 1);\r\n        for (var i = 1; i < insertLines.length; i++) {\r\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\r\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\r\n        }\r\n        if (this._lineStarts) {\r\n            // update prefix sum\r\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\r\n        }\r\n    };\r\n    return MirrorTextModel;\r\n}());\r\nexport { MirrorTextModel };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { toUint8 } from './uint.js';\r\n/**\r\n * A fast character classifier that uses a compact array for ASCII values.\r\n */\r\nvar CharacterClassifier = /** @class */ (function () {\r\n    function CharacterClassifier(_defaultValue) {\r\n        var defaultValue = toUint8(_defaultValue);\r\n        this._defaultValue = defaultValue;\r\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\r\n        this._map = new Map();\r\n    }\r\n    CharacterClassifier._createAsciiMap = function (defaultValue) {\r\n        var asciiMap = new Uint8Array(256);\r\n        for (var i = 0; i < 256; i++) {\r\n            asciiMap[i] = defaultValue;\r\n        }\r\n        return asciiMap;\r\n    };\r\n    CharacterClassifier.prototype.set = function (charCode, _value) {\r\n        var value = toUint8(_value);\r\n        if (charCode >= 0 && charCode < 256) {\r\n            this._asciiMap[charCode] = value;\r\n        }\r\n        else {\r\n            this._map.set(charCode, value);\r\n        }\r\n    };\r\n    CharacterClassifier.prototype.get = function (charCode) {\r\n        if (charCode >= 0 && charCode < 256) {\r\n            return this._asciiMap[charCode];\r\n        }\r\n        else {\r\n            return (this._map.get(charCode) || this._defaultValue);\r\n        }\r\n    };\r\n    return CharacterClassifier;\r\n}());\r\nexport { CharacterClassifier };\r\nvar CharacterSet = /** @class */ (function () {\r\n    function CharacterSet() {\r\n        this._actual = new CharacterClassifier(0 /* False */);\r\n    }\r\n    CharacterSet.prototype.add = function (charCode) {\r\n        this._actual.set(charCode, 1 /* True */);\r\n    };\r\n    CharacterSet.prototype.has = function (charCode) {\r\n        return (this._actual.get(charCode) === 1 /* True */);\r\n    };\r\n    return CharacterSet;\r\n}());\r\nexport { CharacterSet };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { CharacterClassifier } from '../core/characterClassifier.js';\r\nimport { Uint8Matrix } from '../core/uint.js';\r\nvar StateMachine = /** @class */ (function () {\r\n    function StateMachine(edges) {\r\n        var maxCharCode = 0;\r\n        var maxState = 0 /* Invalid */;\r\n        for (var i = 0, len = edges.length; i < len; i++) {\r\n            var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\r\n            if (chCode > maxCharCode) {\r\n                maxCharCode = chCode;\r\n            }\r\n            if (from > maxState) {\r\n                maxState = from;\r\n            }\r\n            if (to > maxState) {\r\n                maxState = to;\r\n            }\r\n        }\r\n        maxCharCode++;\r\n        maxState++;\r\n        var states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\r\n        for (var i = 0, len = edges.length; i < len; i++) {\r\n            var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\r\n            states.set(from, chCode, to);\r\n        }\r\n        this._states = states;\r\n        this._maxCharCode = maxCharCode;\r\n    }\r\n    StateMachine.prototype.nextState = function (currentState, chCode) {\r\n        if (chCode < 0 || chCode >= this._maxCharCode) {\r\n            return 0 /* Invalid */;\r\n        }\r\n        return this._states.get(currentState, chCode);\r\n    };\r\n    return StateMachine;\r\n}());\r\n// State machine for http:// or https:// or file://\r\nvar _stateMachine = null;\r\nfunction getStateMachine() {\r\n    if (_stateMachine === null) {\r\n        _stateMachine = new StateMachine([\r\n            [1 /* Start */, 104 /* h */, 2 /* H */],\r\n            [1 /* Start */, 72 /* H */, 2 /* H */],\r\n            [1 /* Start */, 102 /* f */, 6 /* F */],\r\n            [1 /* Start */, 70 /* F */, 6 /* F */],\r\n            [2 /* H */, 116 /* t */, 3 /* HT */],\r\n            [2 /* H */, 84 /* T */, 3 /* HT */],\r\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\r\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\r\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\r\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\r\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\r\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\r\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\r\n            [6 /* F */, 105 /* i */, 7 /* FI */],\r\n            [6 /* F */, 73 /* I */, 7 /* FI */],\r\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\r\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\r\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\r\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\r\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\r\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\r\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\r\n        ]);\r\n    }\r\n    return _stateMachine;\r\n}\r\nvar _classifier = null;\r\nfunction getClassifier() {\r\n    if (_classifier === null) {\r\n        _classifier = new CharacterClassifier(0 /* None */);\r\n        var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\r\n        for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\r\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\r\n        }\r\n        var CANNOT_END_WITH_CHARACTERS = '.,;';\r\n        for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\r\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\r\n        }\r\n    }\r\n    return _classifier;\r\n}\r\nvar LinkComputer = /** @class */ (function () {\r\n    function LinkComputer() {\r\n    }\r\n    LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\r\n        // Do not allow to end link in certain characters...\r\n        var lastIncludedCharIndex = linkEndIndex - 1;\r\n        do {\r\n            var chCode = line.charCodeAt(lastIncludedCharIndex);\r\n            var chClass = classifier.get(chCode);\r\n            if (chClass !== 2 /* CannotEndIn */) {\r\n                break;\r\n            }\r\n            lastIncludedCharIndex--;\r\n        } while (lastIncludedCharIndex > linkBeginIndex);\r\n        // Handle links enclosed in parens, square brackets and curlys.\r\n        if (linkBeginIndex > 0) {\r\n            var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\r\n            var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\r\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\r\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\r\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\r\n                // Do not end in ) if ( is before the link start\r\n                // Do not end in ] if [ is before the link start\r\n                // Do not end in } if { is before the link start\r\n                lastIncludedCharIndex--;\r\n            }\r\n        }\r\n        return {\r\n            range: {\r\n                startLineNumber: lineNumber,\r\n                startColumn: linkBeginIndex + 1,\r\n                endLineNumber: lineNumber,\r\n                endColumn: lastIncludedCharIndex + 2\r\n            },\r\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\r\n        };\r\n    };\r\n    LinkComputer.computeLinks = function (model) {\r\n        var stateMachine = getStateMachine();\r\n        var classifier = getClassifier();\r\n        var result = [];\r\n        for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\r\n            var line = model.getLineContent(i);\r\n            var len = line.length;\r\n            var j = 0;\r\n            var linkBeginIndex = 0;\r\n            var linkBeginChCode = 0;\r\n            var state = 1 /* Start */;\r\n            var hasOpenParens = false;\r\n            var hasOpenSquareBracket = false;\r\n            var hasOpenCurlyBracket = false;\r\n            while (j < len) {\r\n                var resetStateMachine = false;\r\n                var chCode = line.charCodeAt(j);\r\n                if (state === 13 /* Accept */) {\r\n                    var chClass = void 0;\r\n                    switch (chCode) {\r\n                        case 40 /* OpenParen */:\r\n                            hasOpenParens = true;\r\n                            chClass = 0 /* None */;\r\n                            break;\r\n                        case 41 /* CloseParen */:\r\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\r\n                            break;\r\n                        case 91 /* OpenSquareBracket */:\r\n                            hasOpenSquareBracket = true;\r\n                            chClass = 0 /* None */;\r\n                            break;\r\n                        case 93 /* CloseSquareBracket */:\r\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\r\n                            break;\r\n                        case 123 /* OpenCurlyBrace */:\r\n                            hasOpenCurlyBracket = true;\r\n                            chClass = 0 /* None */;\r\n                            break;\r\n                        case 125 /* CloseCurlyBrace */:\r\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\r\n                            break;\r\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\r\n                        case 39 /* SingleQuote */:\r\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\r\n                            break;\r\n                        case 34 /* DoubleQuote */:\r\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\r\n                            break;\r\n                        case 96 /* BackTick */:\r\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\r\n                            break;\r\n                        default:\r\n                            chClass = classifier.get(chCode);\r\n                    }\r\n                    // Check if character terminates link\r\n                    if (chClass === 1 /* ForceTermination */) {\r\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\r\n                        resetStateMachine = true;\r\n                    }\r\n                }\r\n                else if (state === 12 /* End */) {\r\n                    var chClass = classifier.get(chCode);\r\n                    // Check if character terminates link\r\n                    if (chClass === 1 /* ForceTermination */) {\r\n                        resetStateMachine = true;\r\n                    }\r\n                    else {\r\n                        state = 13 /* Accept */;\r\n                    }\r\n                }\r\n                else {\r\n                    state = stateMachine.nextState(state, chCode);\r\n                    if (state === 0 /* Invalid */) {\r\n                        resetStateMachine = true;\r\n                    }\r\n                }\r\n                if (resetStateMachine) {\r\n                    state = 1 /* Start */;\r\n                    hasOpenParens = false;\r\n                    hasOpenSquareBracket = false;\r\n                    hasOpenCurlyBracket = false;\r\n                    // Record where the link started\r\n                    linkBeginIndex = j + 1;\r\n                    linkBeginChCode = chCode;\r\n                }\r\n                j++;\r\n            }\r\n            if (state === 13 /* Accept */) {\r\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    return LinkComputer;\r\n}());\r\n/**\r\n * Returns an array of all links contains in the provided\r\n * document. *Note* that this operation is computational\r\n * expensive and should not run in the UI thread.\r\n */\r\nexport function computeLinks(model) {\r\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\r\n        // Unknown caller!\r\n        return [];\r\n    }\r\n    return LinkComputer.computeLinks(model);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar BasicInplaceReplace = /** @class */ (function () {\r\n    function BasicInplaceReplace() {\r\n        this._defaultValueSet = [\r\n            ['true', 'false'],\r\n            ['True', 'False'],\r\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\r\n            ['public', 'protected', 'private'],\r\n        ];\r\n    }\r\n    BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\r\n        if (range1 && text1) {\r\n            var result = this.doNavigateValueSet(text1, up);\r\n            if (result) {\r\n                return {\r\n                    range: range1,\r\n                    value: result\r\n                };\r\n            }\r\n        }\r\n        if (range2 && text2) {\r\n            var result = this.doNavigateValueSet(text2, up);\r\n            if (result) {\r\n                return {\r\n                    range: range2,\r\n                    value: result\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\r\n        var numberResult = this.numberReplace(text, up);\r\n        if (numberResult !== null) {\r\n            return numberResult;\r\n        }\r\n        return this.textReplace(text, up);\r\n    };\r\n    BasicInplaceReplace.prototype.numberReplace = function (value, up) {\r\n        var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\r\n        var n1 = Number(value);\r\n        var n2 = parseFloat(value);\r\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\r\n            if (n1 === 0 && !up) {\r\n                return null; // don't do negative\r\n                //\t\t\t} else if(n1 === 9 && up) {\r\n                //\t\t\t\treturn null; // don't insert 10 into a number\r\n            }\r\n            else {\r\n                n1 = Math.floor(n1 * precision);\r\n                n1 += up ? precision : -precision;\r\n                return String(n1 / precision);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    BasicInplaceReplace.prototype.textReplace = function (value, up) {\r\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\r\n    };\r\n    BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\r\n        var result = null;\r\n        for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\r\n            result = this.valueSetReplace(valueSets[i], value, up);\r\n        }\r\n        return result;\r\n    };\r\n    BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\r\n        var idx = valueSet.indexOf(value);\r\n        if (idx >= 0) {\r\n            idx += up ? +1 : -1;\r\n            if (idx < 0) {\r\n                idx = valueSet.length - 1;\r\n            }\r\n            else {\r\n                idx %= valueSet.length;\r\n            }\r\n            return valueSet[idx];\r\n        }\r\n        return null;\r\n    };\r\n    BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\r\n    return BasicInplaceReplace;\r\n}());\r\nexport { BasicInplaceReplace };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\r\n/**\r\n * Create a word definition regular expression based on default word separators.\r\n * Optionally provide allowed separators that should be included in words.\r\n *\r\n * The default would look like this:\r\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\r\n */\r\nfunction createWordRegExp(allowInWords) {\r\n    if (allowInWords === void 0) { allowInWords = ''; }\r\n    var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\r\n    for (var i = 0; i < USUAL_WORD_SEPARATORS.length; i++) {\r\n        if (allowInWords.indexOf(USUAL_WORD_SEPARATORS[i]) >= 0) {\r\n            continue;\r\n        }\r\n        source += '\\\\' + USUAL_WORD_SEPARATORS[i];\r\n    }\r\n    source += '\\\\s]+)';\r\n    return new RegExp(source, 'g');\r\n}\r\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\r\nexport var DEFAULT_WORD_REGEXP = createWordRegExp();\r\nexport function ensureValidWordDefinition(wordDefinition) {\r\n    var result = DEFAULT_WORD_REGEXP;\r\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\r\n        if (!wordDefinition.global) {\r\n            var flags = 'g';\r\n            if (wordDefinition.ignoreCase) {\r\n                flags += 'i';\r\n            }\r\n            if (wordDefinition.multiline) {\r\n                flags += 'm';\r\n            }\r\n            result = new RegExp(wordDefinition.source, flags);\r\n        }\r\n        else {\r\n            result = wordDefinition;\r\n        }\r\n    }\r\n    result.lastIndex = 0;\r\n    return result;\r\n}\r\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\r\n    // find whitespace enclosed text around column and match from there\r\n    var pos = column - 1 - textOffset;\r\n    var start = text.lastIndexOf(' ', pos - 1) + 1;\r\n    var end = text.indexOf(' ', pos);\r\n    if (end === -1) {\r\n        end = text.length;\r\n    }\r\n    wordDefinition.lastIndex = start;\r\n    var match;\r\n    while (match = wordDefinition.exec(text)) {\r\n        if (match.index <= pos && wordDefinition.lastIndex >= pos) {\r\n            return {\r\n                word: match[0],\r\n                startColumn: textOffset + 1 + match.index,\r\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\r\n    // matches all words starting at the beginning\r\n    // of the input until it finds a match that encloses\r\n    // the desired column. slow but correct\r\n    var pos = column - 1 - textOffset;\r\n    wordDefinition.lastIndex = 0;\r\n    var match;\r\n    while (match = wordDefinition.exec(text)) {\r\n        if (match.index > pos) {\r\n            // |nW -> matched only after the pos\r\n            return null;\r\n        }\r\n        else if (wordDefinition.lastIndex >= pos) {\r\n            // W|W -> match encloses pos\r\n            return {\r\n                word: match[0],\r\n                startColumn: textOffset + 1 + match.index,\r\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function getWordAtText(column, wordDefinition, text, textOffset) {\r\n    // if `words` can contain whitespace character we have to use the slow variant\r\n    // otherwise we use the fast variant of finding a word\r\n    wordDefinition.lastIndex = 0;\r\n    var match = wordDefinition.exec(text);\r\n    if (!match) {\r\n        return null;\r\n    }\r\n    // todo@joh the `match` could already be the (first) word\r\n    var ret = match[0].indexOf(' ') >= 0\r\n        // did match a word which contains a space character -> use slow word find\r\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\r\n        // sane word definition -> use fast word find\r\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\r\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\r\n    // in an undefined state and to not confuse other users of the wordDefinition\r\n    // we reset the lastIndex\r\n    wordDefinition.lastIndex = 0;\r\n    return ret;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { TPromise } from './winjs.base.js';\r\n// ------ BEGIN Hook up error listeners to winjs promises\r\nvar outstandingPromiseErrors = {};\r\nfunction promiseErrorHandler(e) {\r\n    //\r\n    // e.detail looks like: { exception, error, promise, handler, id, parent }\r\n    //\r\n    var details = e.detail;\r\n    var id = details.id;\r\n    // If the error has a parent promise then this is not the origination of the\r\n    //  error so we check if it has a handler, and if so we mark that the error\r\n    //  was handled by removing it from outstandingPromiseErrors\r\n    //\r\n    if (details.parent) {\r\n        if (details.handler && outstandingPromiseErrors) {\r\n            delete outstandingPromiseErrors[id];\r\n        }\r\n        return;\r\n    }\r\n    // Indicate that this error was originated and needs to be handled\r\n    outstandingPromiseErrors[id] = details;\r\n    // The first time the queue fills up this iteration, schedule a timeout to\r\n    // check if any errors are still unhandled.\r\n    if (Object.keys(outstandingPromiseErrors).length === 1) {\r\n        setTimeout(function () {\r\n            var errors = outstandingPromiseErrors;\r\n            outstandingPromiseErrors = {};\r\n            Object.keys(errors).forEach(function (errorId) {\r\n                var error = errors[errorId];\r\n                if (error.exception) {\r\n                    onUnexpectedError(error.exception);\r\n                }\r\n                else if (error.error) {\r\n                    onUnexpectedError(error.error);\r\n                }\r\n                console.log('WARNING: Promise with no error callback:' + error.id);\r\n                console.log(error);\r\n                if (error.exception) {\r\n                    console.log(error.exception.stack);\r\n                }\r\n            });\r\n        }, 0);\r\n    }\r\n}\r\nTPromise.addEventListener('error', promiseErrorHandler);\r\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\r\nvar ErrorHandler = /** @class */ (function () {\r\n    function ErrorHandler() {\r\n        this.listeners = [];\r\n        this.unexpectedErrorHandler = function (e) {\r\n            setTimeout(function () {\r\n                if (e.stack) {\r\n                    throw new Error(e.message + '\\n\\n' + e.stack);\r\n                }\r\n                throw e;\r\n            }, 0);\r\n        };\r\n    }\r\n    ErrorHandler.prototype.emit = function (e) {\r\n        this.listeners.forEach(function (listener) {\r\n            listener(e);\r\n        });\r\n    };\r\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\r\n        this.unexpectedErrorHandler(e);\r\n        this.emit(e);\r\n    };\r\n    // For external errors, we don't want the listeners to be called\r\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\r\n        this.unexpectedErrorHandler(e);\r\n    };\r\n    return ErrorHandler;\r\n}());\r\nexport { ErrorHandler };\r\nexport var errorHandler = new ErrorHandler();\r\nexport function onUnexpectedError(e) {\r\n    // ignore errors from cancelled promises\r\n    if (!isPromiseCanceledError(e)) {\r\n        errorHandler.onUnexpectedError(e);\r\n    }\r\n    return undefined;\r\n}\r\nexport function onUnexpectedExternalError(e) {\r\n    // ignore errors from cancelled promises\r\n    if (!isPromiseCanceledError(e)) {\r\n        errorHandler.onUnexpectedExternalError(e);\r\n    }\r\n    return undefined;\r\n}\r\nexport function transformErrorForSerialization(error) {\r\n    if (error instanceof Error) {\r\n        var name_1 = error.name, message = error.message;\r\n        var stack = error.stacktrace || error.stack;\r\n        return {\r\n            $isError: true,\r\n            name: name_1,\r\n            message: message,\r\n            stack: stack\r\n        };\r\n    }\r\n    // return as is\r\n    return error;\r\n}\r\nvar canceledName = 'Canceled';\r\n/**\r\n * Checks if the given error is a promise in canceled state\r\n */\r\nexport function isPromiseCanceledError(error) {\r\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\r\n}\r\n/**\r\n * Returns an error that signals cancellation.\r\n */\r\nexport function canceled() {\r\n    var error = new Error(canceledName);\r\n    error.name = error.message;\r\n    return error;\r\n}\r\nexport function illegalArgument(name) {\r\n    if (name) {\r\n        return new Error(\"Illegal argument: \" + name);\r\n    }\r\n    else {\r\n        return new Error('Illegal argument');\r\n    }\r\n}\r\nexport function illegalState(name) {\r\n    if (name) {\r\n        return new Error(\"Illegal state: \" + name);\r\n    }\r\n    else {\r\n        return new Error('Illegal state');\r\n    }\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport function once(fn) {\r\n    var _this = this;\r\n    var didCall = false;\r\n    var result;\r\n    return function () {\r\n        if (didCall) {\r\n            return result;\r\n        }\r\n        didCall = true;\r\n        result = fn.apply(_this, arguments);\r\n        return result;\r\n    };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport function isDisposable(thing) {\r\n    return typeof thing.dispose === 'function'\r\n        && thing.dispose.length === 0;\r\n}\r\nexport function dispose(first) {\r\n    var rest = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        rest[_i - 1] = arguments[_i];\r\n    }\r\n    if (Array.isArray(first)) {\r\n        first.forEach(function (d) { return d && d.dispose(); });\r\n        return [];\r\n    }\r\n    else if (rest.length === 0) {\r\n        if (first) {\r\n            first.dispose();\r\n            return first;\r\n        }\r\n        return undefined;\r\n    }\r\n    else {\r\n        dispose(first);\r\n        dispose(rest);\r\n        return [];\r\n    }\r\n}\r\nexport function combinedDisposable(disposables) {\r\n    return { dispose: function () { return dispose(disposables); } };\r\n}\r\nexport function toDisposable(fn) {\r\n    return { dispose: function () { fn(); } };\r\n}\r\nvar Disposable = /** @class */ (function () {\r\n    function Disposable() {\r\n        this._toDispose = [];\r\n    }\r\n    Object.defineProperty(Disposable.prototype, \"toDispose\", {\r\n        get: function () { return this._toDispose; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Disposable.prototype.dispose = function () {\r\n        this._toDispose = dispose(this._toDispose);\r\n    };\r\n    Disposable.prototype._register = function (t) {\r\n        this._toDispose.push(t);\r\n        return t;\r\n    };\r\n    Disposable.None = Object.freeze({ dispose: function () { } });\r\n    return Disposable;\r\n}());\r\nexport { Disposable };\r\nvar ImmortalReference = /** @class */ (function () {\r\n    function ImmortalReference(object) {\r\n        this.object = object;\r\n    }\r\n    ImmortalReference.prototype.dispose = function () { };\r\n    return ImmortalReference;\r\n}());\r\nexport { ImmortalReference };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { onUnexpectedError } from './errors.js';\r\nimport { once as onceFn } from './functional.js';\r\nimport { combinedDisposable, Disposable, toDisposable } from './lifecycle.js';\r\nimport { LinkedList } from './linkedList.js';\r\nexport var Event;\r\n(function (Event) {\r\n    var _disposable = { dispose: function () { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event || (Event = {}));\r\n/**\r\n * The Emitter can be used to expose an Event to the public\r\n * to fire it from the insides.\r\n * Sample:\r\n    class Document {\r\n\r\n        private _onDidChange = new Emitter<(value:string)=>any>();\r\n\r\n        public onDidChange = this._onDidChange.event;\r\n\r\n        // getter-style\r\n        // get onDidChange(): Event<(value:string)=>any> {\r\n        // \treturn this._onDidChange.event;\r\n        // }\r\n\r\n        private _doIt() {\r\n            //...\r\n            this._onDidChange.fire(value);\r\n        }\r\n    }\r\n */\r\nvar Emitter = /** @class */ (function () {\r\n    function Emitter(_options) {\r\n        this._options = _options;\r\n    }\r\n    Object.defineProperty(Emitter.prototype, \"event\", {\r\n        /**\r\n         * For the public to allow to subscribe\r\n         * to events from this Emitter\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._event) {\r\n                this._event = function (listener, thisArgs, disposables) {\r\n                    if (!_this._listeners) {\r\n                        _this._listeners = new LinkedList();\r\n                    }\r\n                    var firstListener = _this._listeners.isEmpty();\r\n                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\r\n                        _this._options.onFirstListenerAdd(_this);\r\n                    }\r\n                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\r\n                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\r\n                        _this._options.onFirstListenerDidAdd(_this);\r\n                    }\r\n                    if (_this._options && _this._options.onListenerDidAdd) {\r\n                        _this._options.onListenerDidAdd(_this, listener, thisArgs);\r\n                    }\r\n                    var result;\r\n                    result = {\r\n                        dispose: function () {\r\n                            result.dispose = Emitter._noop;\r\n                            if (!_this._disposed) {\r\n                                remove();\r\n                                if (_this._options && _this._options.onLastListenerRemove && _this._listeners.isEmpty()) {\r\n                                    _this._options.onLastListenerRemove(_this);\r\n                                }\r\n                            }\r\n                        }\r\n                    };\r\n                    if (Array.isArray(disposables)) {\r\n                        disposables.push(result);\r\n                    }\r\n                    return result;\r\n                };\r\n            }\r\n            return this._event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    Emitter.prototype.fire = function (event) {\r\n        if (this._listeners) {\r\n            // put all [listener,event]-pairs into delivery queue\r\n            // then emit all event. an inner/nested event might be\r\n            // the driver of this\r\n            if (!this._deliveryQueue) {\r\n                this._deliveryQueue = [];\r\n            }\r\n            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\r\n                this._deliveryQueue.push([e.value, event]);\r\n            }\r\n            while (this._deliveryQueue.length > 0) {\r\n                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\r\n                try {\r\n                    if (typeof listener === 'function') {\r\n                        listener.call(undefined, event_1);\r\n                    }\r\n                    else {\r\n                        listener[0].call(listener[1], event_1);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    onUnexpectedError(e);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Emitter.prototype.dispose = function () {\r\n        if (this._listeners) {\r\n            this._listeners = undefined;\r\n        }\r\n        if (this._deliveryQueue) {\r\n            this._deliveryQueue.length = 0;\r\n        }\r\n        this._disposed = true;\r\n    };\r\n    Emitter._noop = function () { };\r\n    return Emitter;\r\n}());\r\nexport { Emitter };\r\nvar EventMultiplexer = /** @class */ (function () {\r\n    function EventMultiplexer() {\r\n        var _this = this;\r\n        this.hasListeners = false;\r\n        this.events = [];\r\n        this.emitter = new Emitter({\r\n            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\r\n            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\r\n        });\r\n    }\r\n    Object.defineProperty(EventMultiplexer.prototype, \"event\", {\r\n        get: function () {\r\n            return this.emitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    EventMultiplexer.prototype.add = function (event) {\r\n        var _this = this;\r\n        var e = { event: event, listener: null };\r\n        this.events.push(e);\r\n        if (this.hasListeners) {\r\n            this.hook(e);\r\n        }\r\n        var dispose = function () {\r\n            if (_this.hasListeners) {\r\n                _this.unhook(e);\r\n            }\r\n            var idx = _this.events.indexOf(e);\r\n            _this.events.splice(idx, 1);\r\n        };\r\n        return toDisposable(onceFn(dispose));\r\n    };\r\n    EventMultiplexer.prototype.onFirstListenerAdd = function () {\r\n        var _this = this;\r\n        this.hasListeners = true;\r\n        this.events.forEach(function (e) { return _this.hook(e); });\r\n    };\r\n    EventMultiplexer.prototype.onLastListenerRemove = function () {\r\n        var _this = this;\r\n        this.hasListeners = false;\r\n        this.events.forEach(function (e) { return _this.unhook(e); });\r\n    };\r\n    EventMultiplexer.prototype.hook = function (e) {\r\n        var _this = this;\r\n        e.listener = e.event(function (r) { return _this.emitter.fire(r); });\r\n    };\r\n    EventMultiplexer.prototype.unhook = function (e) {\r\n        e.listener.dispose();\r\n        e.listener = null;\r\n    };\r\n    EventMultiplexer.prototype.dispose = function () {\r\n        this.emitter.dispose();\r\n    };\r\n    return EventMultiplexer;\r\n}());\r\nexport { EventMultiplexer };\r\nexport function once(event) {\r\n    return function (listener, thisArgs, disposables) {\r\n        if (thisArgs === void 0) { thisArgs = null; }\r\n        var result = event(function (e) {\r\n            result.dispose();\r\n            return listener.call(thisArgs, e);\r\n        }, null, disposables);\r\n        return result;\r\n    };\r\n}\r\nexport function anyEvent() {\r\n    var events = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        events[_i] = arguments[_i];\r\n    }\r\n    return function (listener, thisArgs, disposables) {\r\n        if (thisArgs === void 0) { thisArgs = null; }\r\n        return combinedDisposable(events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\r\n    };\r\n}\r\nexport function debounceEvent(event, merger, delay, leading) {\r\n    if (delay === void 0) { delay = 100; }\r\n    if (leading === void 0) { leading = false; }\r\n    var subscription;\r\n    var output = undefined;\r\n    var handle = undefined;\r\n    var numDebouncedCalls = 0;\r\n    var emitter = new Emitter({\r\n        onFirstListenerAdd: function () {\r\n            subscription = event(function (cur) {\r\n                numDebouncedCalls++;\r\n                output = merger(output, cur);\r\n                if (leading && !handle) {\r\n                    emitter.fire(output);\r\n                }\r\n                clearTimeout(handle);\r\n                handle = setTimeout(function () {\r\n                    var _output = output;\r\n                    output = undefined;\r\n                    handle = undefined;\r\n                    if (!leading || numDebouncedCalls > 1) {\r\n                        emitter.fire(_output);\r\n                    }\r\n                    numDebouncedCalls = 0;\r\n                }, delay);\r\n            });\r\n        },\r\n        onLastListenerRemove: function () {\r\n            subscription.dispose();\r\n        }\r\n    });\r\n    return emitter.event;\r\n}\r\n/**\r\n * The EventDelayer is useful in situations in which you want\r\n * to delay firing your events during some code.\r\n * You can wrap that code and be sure that the event will not\r\n * be fired during that wrap.\r\n *\r\n * ```\r\n * const emitter: Emitter;\r\n * const delayer = new EventDelayer();\r\n * const delayedEvent = delayer.wrapEvent(emitter.event);\r\n *\r\n * delayedEvent(console.log);\r\n *\r\n * delayer.bufferEvents(() => {\r\n *   emitter.fire(); // event will not be fired yet\r\n * });\r\n *\r\n * // event will only be fired at this point\r\n * ```\r\n */\r\nvar EventBufferer = /** @class */ (function () {\r\n    function EventBufferer() {\r\n        this.buffers = [];\r\n    }\r\n    EventBufferer.prototype.wrapEvent = function (event) {\r\n        var _this = this;\r\n        return function (listener, thisArgs, disposables) {\r\n            return event(function (i) {\r\n                var buffer = _this.buffers[_this.buffers.length - 1];\r\n                if (buffer) {\r\n                    buffer.push(function () { return listener.call(thisArgs, i); });\r\n                }\r\n                else {\r\n                    listener.call(thisArgs, i);\r\n                }\r\n            }, void 0, disposables);\r\n        };\r\n    };\r\n    EventBufferer.prototype.bufferEvents = function (fn) {\r\n        var buffer = [];\r\n        this.buffers.push(buffer);\r\n        fn();\r\n        this.buffers.pop();\r\n        buffer.forEach(function (flush) { return flush(); });\r\n    };\r\n    return EventBufferer;\r\n}());\r\nexport { EventBufferer };\r\nexport function mapEvent(event, map) {\r\n    return function (listener, thisArgs, disposables) {\r\n        if (thisArgs === void 0) { thisArgs = null; }\r\n        return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\r\n    };\r\n}\r\nexport function filterEvent(event, filter) {\r\n    return function (listener, thisArgs, disposables) {\r\n        if (thisArgs === void 0) { thisArgs = null; }\r\n        return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\r\n    };\r\n}\r\nvar ChainableEvent = /** @class */ (function () {\r\n    function ChainableEvent(_event) {\r\n        this._event = _event;\r\n    }\r\n    Object.defineProperty(ChainableEvent.prototype, \"event\", {\r\n        get: function () { return this._event; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChainableEvent.prototype.map = function (fn) {\r\n        return new ChainableEvent(mapEvent(this._event, fn));\r\n    };\r\n    ChainableEvent.prototype.filter = function (fn) {\r\n        return new ChainableEvent(filterEvent(this._event, fn));\r\n    };\r\n    ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\r\n        return this._event(listener, thisArgs, disposables);\r\n    };\r\n    return ChainableEvent;\r\n}());\r\nexport function chain(event) {\r\n    return new ChainableEvent(event);\r\n}\r\nvar Relay = /** @class */ (function () {\r\n    function Relay() {\r\n        this.emitter = new Emitter();\r\n        this.event = this.emitter.event;\r\n        this.disposable = Disposable.None;\r\n    }\r\n    Object.defineProperty(Relay.prototype, \"input\", {\r\n        set: function (event) {\r\n            this.disposable.dispose();\r\n            this.disposable = event(this.emitter.fire, this.emitter);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Relay.prototype.dispose = function () {\r\n        this.disposable.dispose();\r\n        this.emitter.dispose();\r\n    };\r\n    return Relay;\r\n}());\r\nexport { Relay };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar Node = /** @class */ (function () {\r\n    function Node(element) {\r\n        this.element = element;\r\n    }\r\n    return Node;\r\n}());\r\nvar LinkedList = /** @class */ (function () {\r\n    function LinkedList() {\r\n    }\r\n    LinkedList.prototype.isEmpty = function () {\r\n        return !this._first;\r\n    };\r\n    LinkedList.prototype.unshift = function (element) {\r\n        return this.insert(element, false);\r\n    };\r\n    LinkedList.prototype.push = function (element) {\r\n        return this.insert(element, true);\r\n    };\r\n    LinkedList.prototype.insert = function (element, atTheEnd) {\r\n        var _this = this;\r\n        var newNode = new Node(element);\r\n        if (!this._first) {\r\n            this._first = newNode;\r\n            this._last = newNode;\r\n        }\r\n        else if (atTheEnd) {\r\n            // push\r\n            var oldLast = this._last;\r\n            this._last = newNode;\r\n            newNode.prev = oldLast;\r\n            oldLast.next = newNode;\r\n        }\r\n        else {\r\n            // unshift\r\n            var oldFirst = this._first;\r\n            this._first = newNode;\r\n            newNode.next = oldFirst;\r\n            oldFirst.prev = newNode;\r\n        }\r\n        return function () {\r\n            for (var candidate = _this._first; candidate instanceof Node; candidate = candidate.next) {\r\n                if (candidate !== newNode) {\r\n                    continue;\r\n                }\r\n                if (candidate.prev && candidate.next) {\r\n                    // middle\r\n                    var anchor = candidate.prev;\r\n                    anchor.next = candidate.next;\r\n                    candidate.next.prev = anchor;\r\n                }\r\n                else if (!candidate.prev && !candidate.next) {\r\n                    // only node\r\n                    _this._first = undefined;\r\n                    _this._last = undefined;\r\n                }\r\n                else if (!candidate.next) {\r\n                    // last\r\n                    _this._last = _this._last.prev;\r\n                    _this._last.next = undefined;\r\n                }\r\n                else if (!candidate.prev) {\r\n                    // first\r\n                    _this._first = _this._first.next;\r\n                    _this._first.prev = undefined;\r\n                }\r\n                // done\r\n                break;\r\n            }\r\n        };\r\n    };\r\n    LinkedList.prototype.iterator = function () {\r\n        var element = {\r\n            done: undefined,\r\n            value: undefined,\r\n        };\r\n        var node = this._first;\r\n        return {\r\n            next: function () {\r\n                if (!node) {\r\n                    element.done = true;\r\n                    element.value = undefined;\r\n                }\r\n                else {\r\n                    element.done = false;\r\n                    element.value = node.element;\r\n                    node = node.next;\r\n                }\r\n                return element;\r\n            }\r\n        };\r\n    };\r\n    return LinkedList;\r\n}());\r\nexport { LinkedList };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar KeyCodeStrMap = /** @class */ (function () {\r\n    function KeyCodeStrMap() {\r\n        this._keyCodeToStr = [];\r\n        this._strToKeyCode = Object.create(null);\r\n    }\r\n    KeyCodeStrMap.prototype.define = function (keyCode, str) {\r\n        this._keyCodeToStr[keyCode] = str;\r\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\r\n    };\r\n    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\r\n        return this._keyCodeToStr[keyCode];\r\n    };\r\n    KeyCodeStrMap.prototype.strToKeyCode = function (str) {\r\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\r\n    };\r\n    return KeyCodeStrMap;\r\n}());\r\nvar uiMap = new KeyCodeStrMap();\r\nvar userSettingsUSMap = new KeyCodeStrMap();\r\nvar userSettingsGeneralMap = new KeyCodeStrMap();\r\n(function () {\r\n    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\r\n        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\r\n        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\r\n        uiMap.define(keyCode, uiLabel);\r\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\r\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\r\n    }\r\n    define(0 /* Unknown */, 'unknown');\r\n    define(1 /* Backspace */, 'Backspace');\r\n    define(2 /* Tab */, 'Tab');\r\n    define(3 /* Enter */, 'Enter');\r\n    define(4 /* Shift */, 'Shift');\r\n    define(5 /* Ctrl */, 'Ctrl');\r\n    define(6 /* Alt */, 'Alt');\r\n    define(7 /* PauseBreak */, 'PauseBreak');\r\n    define(8 /* CapsLock */, 'CapsLock');\r\n    define(9 /* Escape */, 'Escape');\r\n    define(10 /* Space */, 'Space');\r\n    define(11 /* PageUp */, 'PageUp');\r\n    define(12 /* PageDown */, 'PageDown');\r\n    define(13 /* End */, 'End');\r\n    define(14 /* Home */, 'Home');\r\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\r\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\r\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\r\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\r\n    define(19 /* Insert */, 'Insert');\r\n    define(20 /* Delete */, 'Delete');\r\n    define(21 /* KEY_0 */, '0');\r\n    define(22 /* KEY_1 */, '1');\r\n    define(23 /* KEY_2 */, '2');\r\n    define(24 /* KEY_3 */, '3');\r\n    define(25 /* KEY_4 */, '4');\r\n    define(26 /* KEY_5 */, '5');\r\n    define(27 /* KEY_6 */, '6');\r\n    define(28 /* KEY_7 */, '7');\r\n    define(29 /* KEY_8 */, '8');\r\n    define(30 /* KEY_9 */, '9');\r\n    define(31 /* KEY_A */, 'A');\r\n    define(32 /* KEY_B */, 'B');\r\n    define(33 /* KEY_C */, 'C');\r\n    define(34 /* KEY_D */, 'D');\r\n    define(35 /* KEY_E */, 'E');\r\n    define(36 /* KEY_F */, 'F');\r\n    define(37 /* KEY_G */, 'G');\r\n    define(38 /* KEY_H */, 'H');\r\n    define(39 /* KEY_I */, 'I');\r\n    define(40 /* KEY_J */, 'J');\r\n    define(41 /* KEY_K */, 'K');\r\n    define(42 /* KEY_L */, 'L');\r\n    define(43 /* KEY_M */, 'M');\r\n    define(44 /* KEY_N */, 'N');\r\n    define(45 /* KEY_O */, 'O');\r\n    define(46 /* KEY_P */, 'P');\r\n    define(47 /* KEY_Q */, 'Q');\r\n    define(48 /* KEY_R */, 'R');\r\n    define(49 /* KEY_S */, 'S');\r\n    define(50 /* KEY_T */, 'T');\r\n    define(51 /* KEY_U */, 'U');\r\n    define(52 /* KEY_V */, 'V');\r\n    define(53 /* KEY_W */, 'W');\r\n    define(54 /* KEY_X */, 'X');\r\n    define(55 /* KEY_Y */, 'Y');\r\n    define(56 /* KEY_Z */, 'Z');\r\n    define(57 /* Meta */, 'Meta');\r\n    define(58 /* ContextMenu */, 'ContextMenu');\r\n    define(59 /* F1 */, 'F1');\r\n    define(60 /* F2 */, 'F2');\r\n    define(61 /* F3 */, 'F3');\r\n    define(62 /* F4 */, 'F4');\r\n    define(63 /* F5 */, 'F5');\r\n    define(64 /* F6 */, 'F6');\r\n    define(65 /* F7 */, 'F7');\r\n    define(66 /* F8 */, 'F8');\r\n    define(67 /* F9 */, 'F9');\r\n    define(68 /* F10 */, 'F10');\r\n    define(69 /* F11 */, 'F11');\r\n    define(70 /* F12 */, 'F12');\r\n    define(71 /* F13 */, 'F13');\r\n    define(72 /* F14 */, 'F14');\r\n    define(73 /* F15 */, 'F15');\r\n    define(74 /* F16 */, 'F16');\r\n    define(75 /* F17 */, 'F17');\r\n    define(76 /* F18 */, 'F18');\r\n    define(77 /* F19 */, 'F19');\r\n    define(78 /* NumLock */, 'NumLock');\r\n    define(79 /* ScrollLock */, 'ScrollLock');\r\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\r\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\r\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\r\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\r\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\r\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\r\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\r\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\r\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\r\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\r\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\r\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\r\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\r\n    define(91 /* OEM_8 */, 'OEM_8');\r\n    define(92 /* OEM_102 */, 'OEM_102');\r\n    define(93 /* NUMPAD_0 */, 'NumPad0');\r\n    define(94 /* NUMPAD_1 */, 'NumPad1');\r\n    define(95 /* NUMPAD_2 */, 'NumPad2');\r\n    define(96 /* NUMPAD_3 */, 'NumPad3');\r\n    define(97 /* NUMPAD_4 */, 'NumPad4');\r\n    define(98 /* NUMPAD_5 */, 'NumPad5');\r\n    define(99 /* NUMPAD_6 */, 'NumPad6');\r\n    define(100 /* NUMPAD_7 */, 'NumPad7');\r\n    define(101 /* NUMPAD_8 */, 'NumPad8');\r\n    define(102 /* NUMPAD_9 */, 'NumPad9');\r\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\r\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\r\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\r\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\r\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\r\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\r\n})();\r\nexport var KeyCodeUtils;\r\n(function (KeyCodeUtils) {\r\n    function toString(keyCode) {\r\n        return uiMap.keyCodeToStr(keyCode);\r\n    }\r\n    KeyCodeUtils.toString = toString;\r\n    function fromString(key) {\r\n        return uiMap.strToKeyCode(key);\r\n    }\r\n    KeyCodeUtils.fromString = fromString;\r\n    function toUserSettingsUS(keyCode) {\r\n        return userSettingsUSMap.keyCodeToStr(keyCode);\r\n    }\r\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\r\n    function toUserSettingsGeneral(keyCode) {\r\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\r\n    }\r\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\r\n    function fromUserSettings(key) {\r\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\r\n    }\r\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\r\n})(KeyCodeUtils || (KeyCodeUtils = {}));\r\nexport function KeyChord(firstPart, secondPart) {\r\n    var chordPart = ((secondPart & 0x0000ffff) << 16) >>> 0;\r\n    return (firstPart | chordPart) >>> 0;\r\n}\r\nexport function createKeybinding(keybinding, OS) {\r\n    if (keybinding === 0) {\r\n        return null;\r\n    }\r\n    var firstPart = (keybinding & 0x0000ffff) >>> 0;\r\n    var chordPart = (keybinding & 0xffff0000) >>> 16;\r\n    if (chordPart !== 0) {\r\n        return new ChordKeybinding(createSimpleKeybinding(firstPart, OS), createSimpleKeybinding(chordPart, OS));\r\n    }\r\n    return createSimpleKeybinding(firstPart, OS);\r\n}\r\nexport function createSimpleKeybinding(keybinding, OS) {\r\n    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\r\n    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\r\n    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\r\n    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\r\n    var altKey = (keybinding & 512 /* Alt */ ? true : false);\r\n    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\r\n    var keyCode = (keybinding & 255 /* KeyCode */);\r\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\r\n}\r\nvar SimpleKeybinding = /** @class */ (function () {\r\n    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\r\n        this.type = 1 /* Simple */;\r\n        this.ctrlKey = ctrlKey;\r\n        this.shiftKey = shiftKey;\r\n        this.altKey = altKey;\r\n        this.metaKey = metaKey;\r\n        this.keyCode = keyCode;\r\n    }\r\n    SimpleKeybinding.prototype.equals = function (other) {\r\n        if (other.type !== 1 /* Simple */) {\r\n            return false;\r\n        }\r\n        return (this.ctrlKey === other.ctrlKey\r\n            && this.shiftKey === other.shiftKey\r\n            && this.altKey === other.altKey\r\n            && this.metaKey === other.metaKey\r\n            && this.keyCode === other.keyCode);\r\n    };\r\n    SimpleKeybinding.prototype.isModifierKey = function () {\r\n        return (this.keyCode === 0 /* Unknown */\r\n            || this.keyCode === 5 /* Ctrl */\r\n            || this.keyCode === 57 /* Meta */\r\n            || this.keyCode === 6 /* Alt */\r\n            || this.keyCode === 4 /* Shift */);\r\n    };\r\n    /**\r\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\r\n     */\r\n    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\r\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\r\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\r\n            || (this.altKey && this.keyCode === 6 /* Alt */)\r\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\r\n    };\r\n    return SimpleKeybinding;\r\n}());\r\nexport { SimpleKeybinding };\r\nvar ChordKeybinding = /** @class */ (function () {\r\n    function ChordKeybinding(firstPart, chordPart) {\r\n        this.type = 2 /* Chord */;\r\n        this.firstPart = firstPart;\r\n        this.chordPart = chordPart;\r\n    }\r\n    return ChordKeybinding;\r\n}());\r\nexport { ChordKeybinding };\r\nvar ResolvedKeybindingPart = /** @class */ (function () {\r\n    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\r\n        this.ctrlKey = ctrlKey;\r\n        this.shiftKey = shiftKey;\r\n        this.altKey = altKey;\r\n        this.metaKey = metaKey;\r\n        this.keyLabel = kbLabel;\r\n        this.keyAriaLabel = kbAriaLabel;\r\n    }\r\n    return ResolvedKeybindingPart;\r\n}());\r\nexport { ResolvedKeybindingPart };\r\n/**\r\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\r\n */\r\nvar ResolvedKeybinding = /** @class */ (function () {\r\n    function ResolvedKeybinding() {\r\n    }\r\n    return ResolvedKeybinding;\r\n}());\r\nexport { ResolvedKeybinding };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { Range } from './range.js';\r\nimport { Position } from './position.js';\r\n/**\r\n * The direction of a selection.\r\n */\r\nexport var SelectionDirection;\r\n(function (SelectionDirection) {\r\n    /**\r\n     * The selection starts above where it ends.\r\n     */\r\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\r\n    /**\r\n     * The selection starts below where it ends.\r\n     */\r\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\r\n})(SelectionDirection || (SelectionDirection = {}));\r\n/**\r\n * A selection in the editor.\r\n * The selection is a range that has an orientation.\r\n */\r\nvar Selection = /** @class */ (function (_super) {\r\n    __extends(Selection, _super);\r\n    function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\r\n        var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\r\n        _this.selectionStartLineNumber = selectionStartLineNumber;\r\n        _this.selectionStartColumn = selectionStartColumn;\r\n        _this.positionLineNumber = positionLineNumber;\r\n        _this.positionColumn = positionColumn;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Clone this selection.\r\n     */\r\n    Selection.prototype.clone = function () {\r\n        return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\r\n    };\r\n    /**\r\n     * Transform to a human-readable representation.\r\n     */\r\n    Selection.prototype.toString = function () {\r\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\r\n    };\r\n    /**\r\n     * Test if equals other selection.\r\n     */\r\n    Selection.prototype.equalsSelection = function (other) {\r\n        return (Selection.selectionsEqual(this, other));\r\n    };\r\n    /**\r\n     * Test if the two selections are equal.\r\n     */\r\n    Selection.selectionsEqual = function (a, b) {\r\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\r\n            a.selectionStartColumn === b.selectionStartColumn &&\r\n            a.positionLineNumber === b.positionLineNumber &&\r\n            a.positionColumn === b.positionColumn);\r\n    };\r\n    /**\r\n     * Get directions (LTR or RTL).\r\n     */\r\n    Selection.prototype.getDirection = function () {\r\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\r\n            return SelectionDirection.LTR;\r\n        }\r\n        return SelectionDirection.RTL;\r\n    };\r\n    /**\r\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\r\n     */\r\n    Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\r\n        if (this.getDirection() === SelectionDirection.LTR) {\r\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\r\n        }\r\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\r\n    };\r\n    /**\r\n     * Get the position at `positionLineNumber` and `positionColumn`.\r\n     */\r\n    Selection.prototype.getPosition = function () {\r\n        return new Position(this.positionLineNumber, this.positionColumn);\r\n    };\r\n    /**\r\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\r\n     */\r\n    Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\r\n        if (this.getDirection() === SelectionDirection.LTR) {\r\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\r\n        }\r\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\r\n    };\r\n    // ----\r\n    /**\r\n     * Create a `Selection` from one or two positions\r\n     */\r\n    Selection.fromPositions = function (start, end) {\r\n        if (end === void 0) { end = start; }\r\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\r\n    };\r\n    /**\r\n     * Create a `Selection` from an `ISelection`.\r\n     */\r\n    Selection.liftSelection = function (sel) {\r\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\r\n    };\r\n    /**\r\n     * `a` equals `b`.\r\n     */\r\n    Selection.selectionsArrEqual = function (a, b) {\r\n        if (a && !b || !a && b) {\r\n            return false;\r\n        }\r\n        if (!a && !b) {\r\n            return true;\r\n        }\r\n        if (a.length !== b.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0, len = a.length; i < len; i++) {\r\n            if (!this.selectionsEqual(a[i], b[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Test if `obj` is an `ISelection`.\r\n     */\r\n    Selection.isISelection = function (obj) {\r\n        return (obj\r\n            && (typeof obj.selectionStartLineNumber === 'number')\r\n            && (typeof obj.selectionStartColumn === 'number')\r\n            && (typeof obj.positionLineNumber === 'number')\r\n            && (typeof obj.positionColumn === 'number'));\r\n    };\r\n    /**\r\n     * Create with a direction.\r\n     */\r\n    Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\r\n        if (direction === SelectionDirection.LTR) {\r\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\r\n        }\r\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\r\n    };\r\n    return Selection;\r\n}(Range));\r\nexport { Selection };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { Event, Emitter } from './event.js';\r\nvar shortcutEvent = Object.freeze(function (callback, context) {\r\n    var handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose: function () { clearTimeout(handle); } };\r\n});\r\nexport var CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: shortcutEvent\r\n    });\r\n})(CancellationToken || (CancellationToken = {}));\r\nvar MutableToken = /** @class */ (function () {\r\n    function MutableToken() {\r\n        this._isCancelled = false;\r\n    }\r\n    MutableToken.prototype.cancel = function () {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this.dispose();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\r\n        get: function () {\r\n            return this._isCancelled;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\r\n        get: function () {\r\n            if (this._isCancelled) {\r\n                return shortcutEvent;\r\n            }\r\n            if (!this._emitter) {\r\n                this._emitter = new Emitter();\r\n            }\r\n            return this._emitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MutableToken.prototype.dispose = function () {\r\n        if (this._emitter) {\r\n            this._emitter.dispose();\r\n            this._emitter = undefined;\r\n        }\r\n    };\r\n    return MutableToken;\r\n}());\r\nvar CancellationTokenSource = /** @class */ (function () {\r\n    function CancellationTokenSource() {\r\n    }\r\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\r\n        get: function () {\r\n            if (!this._token) {\r\n                // be lazy and create the token only when\r\n                // actually needed\r\n                this._token = new MutableToken();\r\n            }\r\n            return this._token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CancellationTokenSource.prototype.cancel = function () {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else if (this._token instanceof MutableToken) {\r\n            // actually cancel\r\n            this._token.cancel();\r\n        }\r\n    };\r\n    CancellationTokenSource.prototype.dispose = function () {\r\n        if (!this._token) {\r\n            // ensure to initialize with an empty token if we had none\r\n            this._token = CancellationToken.None;\r\n        }\r\n        else if (this._token instanceof MutableToken) {\r\n            // actually dispose\r\n            this._token.dispose();\r\n        }\r\n    };\r\n    return CancellationTokenSource;\r\n}());\r\nexport { CancellationTokenSource };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { Position } from '../core/position.js';\r\nimport { Range } from '../core/range.js';\r\nimport { Selection, SelectionDirection } from '../core/selection.js';\r\nimport { TPromise } from '../../../base/common/winjs.base.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { Token } from '../core/token.js';\r\nimport URI from '../../../base/common/uri.js';\r\n// --------------------------------------------\r\n// This is repeated here so it can be exported\r\n// because TS inlines const enums\r\n// --------------------------------------------\r\nexport var MarkerTag;\r\n(function (MarkerTag) {\r\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\r\n})(MarkerTag || (MarkerTag = {}));\r\nexport var MarkerSeverity;\r\n(function (MarkerSeverity) {\r\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\r\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\r\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\r\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\r\n})(MarkerSeverity || (MarkerSeverity = {}));\r\n// --------------------------------------------\r\n// This is repeated here so it can be exported\r\n// because TS inlines const enums\r\n// --------------------------------------------\r\nvar KeyMod = /** @class */ (function () {\r\n    function KeyMod() {\r\n    }\r\n    KeyMod.chord = function (firstPart, secondPart) {\r\n        return KeyChord(firstPart, secondPart);\r\n    };\r\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\r\n    KeyMod.Shift = 1024 /* Shift */;\r\n    KeyMod.Alt = 512 /* Alt */;\r\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\r\n    return KeyMod;\r\n}());\r\nexport { KeyMod };\r\n// --------------------------------------------\r\n// This is repeated here so it can be exported\r\n// because TS inlines const enums\r\n// --------------------------------------------\r\n/**\r\n * Virtual Key Codes, the value does not hold any inherent meaning.\r\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\r\n * But these are \"more general\", as they should work across browsers & OS`s.\r\n */\r\nexport var KeyCode;\r\n(function (KeyCode) {\r\n    /**\r\n     * Placed first to cover the 0 value of the enum.\r\n     */\r\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\r\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\r\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\r\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\r\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\r\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\r\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\r\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\r\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\r\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\r\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\r\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\r\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\r\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\r\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\r\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\r\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\r\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\r\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\r\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\r\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\r\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\r\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\r\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\r\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\r\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\r\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\r\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\r\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\r\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\r\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\r\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\r\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\r\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\r\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\r\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\r\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\r\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\r\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\r\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\r\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\r\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\r\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\r\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\r\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\r\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\r\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\r\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\r\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\r\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\r\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\r\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\r\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\r\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\r\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\r\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\r\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\r\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\r\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\r\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\r\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\r\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\r\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\r\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\r\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\r\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\r\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\r\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\r\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\r\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\r\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\r\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\r\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\r\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\r\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\r\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\r\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\r\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\r\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\r\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the ';:' key\r\n     */\r\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\r\n    /**\r\n     * For any country/region, the '+' key\r\n     * For the US standard keyboard, the '=+' key\r\n     */\r\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\r\n    /**\r\n     * For any country/region, the ',' key\r\n     * For the US standard keyboard, the ',<' key\r\n     */\r\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\r\n    /**\r\n     * For any country/region, the '-' key\r\n     * For the US standard keyboard, the '-_' key\r\n     */\r\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\r\n    /**\r\n     * For any country/region, the '.' key\r\n     * For the US standard keyboard, the '.>' key\r\n     */\r\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '/?' key\r\n     */\r\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '`~' key\r\n     */\r\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '[{' key\r\n     */\r\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '\\|' key\r\n     */\r\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the ']}' key\r\n     */\r\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the ''\"' key\r\n     */\r\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     */\r\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\r\n    /**\r\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\r\n     */\r\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\r\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\r\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\r\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\r\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\r\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\r\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\r\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\r\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\r\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\r\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\r\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\r\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\r\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\r\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\r\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\r\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\r\n    /**\r\n     * Cover all key codes when IME is processing input.\r\n     */\r\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\r\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\r\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\r\n    /**\r\n     * Placed last to cover the length of the enum.\r\n     * Please do not depend on this value!\r\n     */\r\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\r\n})(KeyCode || (KeyCode = {}));\r\nexport function createMonacoBaseAPI() {\r\n    return {\r\n        editor: undefined,\r\n        languages: undefined,\r\n        CancellationTokenSource: CancellationTokenSource,\r\n        Emitter: Emitter,\r\n        KeyCode: KeyCode,\r\n        KeyMod: KeyMod,\r\n        Position: Position,\r\n        Range: Range,\r\n        Selection: Selection,\r\n        SelectionDirection: SelectionDirection,\r\n        MarkerSeverity: MarkerSeverity,\r\n        MarkerTag: MarkerTag,\r\n        Promise: TPromise,\r\n        Uri: URI,\r\n        Token: Token\r\n    };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar Token = /** @class */ (function () {\r\n    function Token(offset, type, language) {\r\n        this.offset = offset | 0; // @perf\r\n        this.type = type;\r\n        this.language = language;\r\n    }\r\n    Token.prototype.toString = function () {\r\n        return '(' + this.offset + ', ' + this.type + ')';\r\n    };\r\n    return Token;\r\n}());\r\nexport { Token };\r\nvar TokenizationResult = /** @class */ (function () {\r\n    function TokenizationResult(tokens, endState) {\r\n        this.tokens = tokens;\r\n        this.endState = endState;\r\n    }\r\n    return TokenizationResult;\r\n}());\r\nexport { TokenizationResult };\r\nvar TokenizationResult2 = /** @class */ (function () {\r\n    function TokenizationResult2(tokens, endState) {\r\n        this.tokens = tokens;\r\n        this.endState = endState;\r\n    }\r\n    return TokenizationResult2;\r\n}());\r\nexport { TokenizationResult2 };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport URI from '../../../base/common/uri.js';\r\nimport { TPromise } from '../../../base/common/winjs.base.js';\r\nimport { Range } from '../core/range.js';\r\nimport { DiffComputer } from '../diff/diffComputer.js';\r\nimport { stringDiff } from '../../../base/common/diff/diff.js';\r\nimport { Position } from '../core/position.js';\r\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\r\nimport { computeLinks } from '../modes/linkComputer.js';\r\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\r\nimport { getWordAtText, ensureValidWordDefinition } from '../model/wordHelper.js';\r\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\r\nimport { globals } from '../../../base/common/platform.js';\r\n/**\r\n * @internal\r\n */\r\nvar MirrorModel = /** @class */ (function (_super) {\r\n    __extends(MirrorModel, _super);\r\n    function MirrorModel() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(MirrorModel.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MirrorModel.prototype, \"version\", {\r\n        get: function () {\r\n            return this._versionId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MirrorModel.prototype, \"eol\", {\r\n        get: function () {\r\n            return this._eol;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MirrorModel.prototype.getValue = function () {\r\n        return this.getText();\r\n    };\r\n    MirrorModel.prototype.getLinesContent = function () {\r\n        return this._lines.slice(0);\r\n    };\r\n    MirrorModel.prototype.getLineCount = function () {\r\n        return this._lines.length;\r\n    };\r\n    MirrorModel.prototype.getLineContent = function (lineNumber) {\r\n        return this._lines[lineNumber - 1];\r\n    };\r\n    MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\r\n        var wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\r\n        if (wordAtText) {\r\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\r\n        }\r\n        return null;\r\n    };\r\n    MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\r\n        var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\r\n        if (!wordAtPosition) {\r\n            return {\r\n                word: '',\r\n                startColumn: position.column,\r\n                endColumn: position.column\r\n            };\r\n        }\r\n        return {\r\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\r\n            startColumn: wordAtPosition.startColumn,\r\n            endColumn: position.column\r\n        };\r\n    };\r\n    MirrorModel.prototype.createWordIterator = function (wordDefinition) {\r\n        var _this = this;\r\n        var obj = {\r\n            done: false,\r\n            value: ''\r\n        };\r\n        var lineNumber = 0;\r\n        var lineText;\r\n        var wordRangesIdx = 0;\r\n        var wordRanges = [];\r\n        var next = function () {\r\n            if (wordRangesIdx < wordRanges.length) {\r\n                obj.done = false;\r\n                obj.value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\r\n                wordRangesIdx += 1;\r\n            }\r\n            else if (lineNumber >= _this._lines.length) {\r\n                obj.done = true;\r\n                obj.value = undefined;\r\n            }\r\n            else {\r\n                lineText = _this._lines[lineNumber];\r\n                wordRanges = _this._wordenize(lineText, wordDefinition);\r\n                wordRangesIdx = 0;\r\n                lineNumber += 1;\r\n                return next();\r\n            }\r\n            return obj;\r\n        };\r\n        return { next: next };\r\n    };\r\n    MirrorModel.prototype._wordenize = function (content, wordDefinition) {\r\n        var result = [];\r\n        var match;\r\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\r\n        while (match = wordDefinition.exec(content)) {\r\n            if (match[0].length === 0) {\r\n                // it did match the empty string\r\n                break;\r\n            }\r\n            result.push({ start: match.index, end: match.index + match[0].length });\r\n        }\r\n        return result;\r\n    };\r\n    MirrorModel.prototype.getValueInRange = function (range) {\r\n        range = this._validateRange(range);\r\n        if (range.startLineNumber === range.endLineNumber) {\r\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\r\n        }\r\n        var lineEnding = this._eol;\r\n        var startLineIndex = range.startLineNumber - 1;\r\n        var endLineIndex = range.endLineNumber - 1;\r\n        var resultLines = [];\r\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\r\n        for (var i = startLineIndex + 1; i < endLineIndex; i++) {\r\n            resultLines.push(this._lines[i]);\r\n        }\r\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\r\n        return resultLines.join(lineEnding);\r\n    };\r\n    MirrorModel.prototype.offsetAt = function (position) {\r\n        position = this._validatePosition(position);\r\n        this._ensureLineStarts();\r\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\r\n    };\r\n    MirrorModel.prototype.positionAt = function (offset) {\r\n        offset = Math.floor(offset);\r\n        offset = Math.max(0, offset);\r\n        this._ensureLineStarts();\r\n        var out = this._lineStarts.getIndexOf(offset);\r\n        var lineLength = this._lines[out.index].length;\r\n        // Ensure we return a valid position\r\n        return {\r\n            lineNumber: 1 + out.index,\r\n            column: 1 + Math.min(out.remainder, lineLength)\r\n        };\r\n    };\r\n    MirrorModel.prototype._validateRange = function (range) {\r\n        var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\r\n        var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\r\n        if (start.lineNumber !== range.startLineNumber\r\n            || start.column !== range.startColumn\r\n            || end.lineNumber !== range.endLineNumber\r\n            || end.column !== range.endColumn) {\r\n            return {\r\n                startLineNumber: start.lineNumber,\r\n                startColumn: start.column,\r\n                endLineNumber: end.lineNumber,\r\n                endColumn: end.column\r\n            };\r\n        }\r\n        return range;\r\n    };\r\n    MirrorModel.prototype._validatePosition = function (position) {\r\n        if (!Position.isIPosition(position)) {\r\n            throw new Error('bad position');\r\n        }\r\n        var lineNumber = position.lineNumber, column = position.column;\r\n        var hasChanged = false;\r\n        if (lineNumber < 1) {\r\n            lineNumber = 1;\r\n            column = 1;\r\n            hasChanged = true;\r\n        }\r\n        else if (lineNumber > this._lines.length) {\r\n            lineNumber = this._lines.length;\r\n            column = this._lines[lineNumber - 1].length + 1;\r\n            hasChanged = true;\r\n        }\r\n        else {\r\n            var maxCharacter = this._lines[lineNumber - 1].length + 1;\r\n            if (column < 1) {\r\n                column = 1;\r\n                hasChanged = true;\r\n            }\r\n            else if (column > maxCharacter) {\r\n                column = maxCharacter;\r\n                hasChanged = true;\r\n            }\r\n        }\r\n        if (!hasChanged) {\r\n            return position;\r\n        }\r\n        else {\r\n            return { lineNumber: lineNumber, column: column };\r\n        }\r\n    };\r\n    return MirrorModel;\r\n}(BaseMirrorModel));\r\n/**\r\n * @internal\r\n */\r\nvar BaseEditorSimpleWorker = /** @class */ (function () {\r\n    function BaseEditorSimpleWorker(foreignModuleFactory) {\r\n        this._foreignModuleFactory = foreignModuleFactory;\r\n        this._foreignModule = null;\r\n    }\r\n    // ---- BEGIN diff --------------------------------------------------------------------------\r\n    BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\r\n        var original = this._getModel(originalUrl);\r\n        var modified = this._getModel(modifiedUrl);\r\n        if (!original || !modified) {\r\n            return null;\r\n        }\r\n        var originalLines = original.getLinesContent();\r\n        var modifiedLines = modified.getLinesContent();\r\n        var diffComputer = new DiffComputer(originalLines, modifiedLines, {\r\n            shouldComputeCharChanges: true,\r\n            shouldPostProcessCharChanges: true,\r\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\r\n            shouldMakePrettyDiff: true\r\n        });\r\n        return TPromise.as(diffComputer.computeDiff());\r\n    };\r\n    BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\r\n        var model = this._getModel(modelUrl);\r\n        if (!model) {\r\n            return TPromise.as(edits);\r\n        }\r\n        var result = [];\r\n        var lastEol;\r\n        for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\r\n            var _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\r\n            if (typeof eol === 'number') {\r\n                lastEol = eol;\r\n            }\r\n            if (!range) {\r\n                // eol-change only\r\n                continue;\r\n            }\r\n            var original = model.getValueInRange(range);\r\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\r\n            if (original === text) {\r\n                // noop\r\n                continue;\r\n            }\r\n            // make sure diff won't take too long\r\n            if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\r\n                result.push({ range: range, text: text });\r\n                continue;\r\n            }\r\n            // compute diff between original and edit.text\r\n            var changes = stringDiff(original, text, false);\r\n            var editOffset = model.offsetAt(Range.lift(range).getStartPosition());\r\n            for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\r\n                var change = changes_1[_b];\r\n                var start = model.positionAt(editOffset + change.originalStart);\r\n                var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\r\n                var newEdit = {\r\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\r\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\r\n                };\r\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\r\n                    result.push(newEdit);\r\n                }\r\n            }\r\n        }\r\n        if (typeof lastEol === 'number') {\r\n            result.push({ eol: lastEol, text: undefined, range: undefined });\r\n        }\r\n        return TPromise.as(result);\r\n    };\r\n    // ---- END minimal edits ---------------------------------------------------------------\r\n    BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\r\n        var model = this._getModel(modelUrl);\r\n        if (!model) {\r\n            return null;\r\n        }\r\n        return TPromise.as(computeLinks(model));\r\n    };\r\n    BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\r\n        var model = this._getModel(modelUrl);\r\n        if (model) {\r\n            var suggestions = [];\r\n            var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n            var currentWord = model.getWordUntilPosition(position, wordDefRegExp).word;\r\n            var seen = Object.create(null);\r\n            seen[currentWord] = true;\r\n            for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\r\n                var word = e.value;\r\n                if (seen[word]) {\r\n                    continue;\r\n                }\r\n                seen[word] = true;\r\n                if (!isNaN(Number(word))) {\r\n                    continue;\r\n                }\r\n                suggestions.push({\r\n                    type: 'text',\r\n                    label: word,\r\n                    insertText: word,\r\n                    noAutoAccept: true,\r\n                    overwriteBefore: currentWord.length\r\n                });\r\n            }\r\n            return TPromise.as({ suggestions: suggestions });\r\n        }\r\n        return undefined;\r\n    };\r\n    // ---- END suggest --------------------------------------------------------------------------\r\n    BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\r\n        var model = this._getModel(modelUrl);\r\n        if (!model) {\r\n            return null;\r\n        }\r\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\r\n        if (range.startColumn === range.endColumn) {\r\n            range = {\r\n                startLineNumber: range.startLineNumber,\r\n                startColumn: range.startColumn,\r\n                endLineNumber: range.endLineNumber,\r\n                endColumn: range.endColumn + 1\r\n            };\r\n        }\r\n        var selectionText = model.getValueInRange(range);\r\n        var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\r\n        var word = null;\r\n        if (wordRange !== null) {\r\n            word = model.getValueInRange(wordRange);\r\n        }\r\n        var result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\r\n        return TPromise.as(result);\r\n    };\r\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\r\n    BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\r\n        var _this = this;\r\n        var ctx = {\r\n            getMirrorModels: function () {\r\n                return _this._getModels();\r\n            }\r\n        };\r\n        if (this._foreignModuleFactory) {\r\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\r\n            // static foreing module\r\n            var methods = [];\r\n            for (var prop in this._foreignModule) {\r\n                if (typeof this._foreignModule[prop] === 'function') {\r\n                    methods.push(prop);\r\n                }\r\n            }\r\n            return TPromise.as(methods);\r\n        }\r\n        // ESM-comment-begin\r\n        // \t\treturn new TPromise<any>((c, e) => {\r\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\r\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\r\n        // \r\n        // \t\t\t\tlet methods: string[] = [];\r\n        // \t\t\t\tfor (let prop in this._foreignModule) {\r\n        // \t\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\r\n        // \t\t\t\t\t\tmethods.push(prop);\r\n        // \t\t\t\t\t}\r\n        // \t\t\t\t}\r\n        // \r\n        // \t\t\t\tc(methods);\r\n        // \r\n        // \t\t\t}, e);\r\n        // \t\t});\r\n        // ESM-comment-end\r\n        // ESM-uncomment-begin\r\n        return TPromise.wrapError(new Error(\"Unexpected usage\"));\r\n        // ESM-uncomment-end\r\n    };\r\n    // foreign method request\r\n    BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\r\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\r\n            return TPromise.wrapError(new Error('Missing requestHandler or method: ' + method));\r\n        }\r\n        try {\r\n            return TPromise.as(this._foreignModule[method].apply(this._foreignModule, args));\r\n        }\r\n        catch (e) {\r\n            return TPromise.wrapError(e);\r\n        }\r\n    };\r\n    // ---- END diff --------------------------------------------------------------------------\r\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\r\n    BaseEditorSimpleWorker._diffLimit = 10000;\r\n    // ---- BEGIN suggest --------------------------------------------------------------------------\r\n    BaseEditorSimpleWorker._suggestionsLimit = 10000;\r\n    return BaseEditorSimpleWorker;\r\n}());\r\nexport { BaseEditorSimpleWorker };\r\n/**\r\n * @internal\r\n */\r\nvar EditorSimpleWorkerImpl = /** @class */ (function (_super) {\r\n    __extends(EditorSimpleWorkerImpl, _super);\r\n    function EditorSimpleWorkerImpl(foreignModuleFactory) {\r\n        var _this = _super.call(this, foreignModuleFactory) || this;\r\n        _this._models = Object.create(null);\r\n        return _this;\r\n    }\r\n    EditorSimpleWorkerImpl.prototype.dispose = function () {\r\n        this._models = Object.create(null);\r\n    };\r\n    EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\r\n        return this._models[uri];\r\n    };\r\n    EditorSimpleWorkerImpl.prototype._getModels = function () {\r\n        var _this = this;\r\n        var all = [];\r\n        Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\r\n        return all;\r\n    };\r\n    EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\r\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\r\n    };\r\n    EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\r\n        if (!this._models[strURL]) {\r\n            return;\r\n        }\r\n        var model = this._models[strURL];\r\n        model.onEvents(e);\r\n    };\r\n    EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\r\n        if (!this._models[strURL]) {\r\n            return;\r\n        }\r\n        delete this._models[strURL];\r\n    };\r\n    return EditorSimpleWorkerImpl;\r\n}(BaseEditorSimpleWorker));\r\nexport { EditorSimpleWorkerImpl };\r\n/**\r\n * Called on the worker side\r\n * @internal\r\n */\r\nexport function create() {\r\n    return new EditorSimpleWorkerImpl(null);\r\n}\r\nif (typeof importScripts === 'function') {\r\n    // Running in a web worker\r\n    globals.monaco = createMonacoBaseAPI();\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as errors from './errors.js';\r\nimport { TPromise } from './winjs.base.js';\r\nimport { CancellationTokenSource } from './cancellation.js';\r\nimport { Disposable } from './lifecycle.js';\r\nexport function isThenable(obj) {\r\n    return obj && typeof obj.then === 'function';\r\n}\r\nexport function toThenable(arg) {\r\n    if (isThenable(arg)) {\r\n        return arg;\r\n    }\r\n    else {\r\n        return TPromise.as(arg);\r\n    }\r\n}\r\nexport function createCancelablePromise(callback) {\r\n    var source = new CancellationTokenSource();\r\n    var thenable = callback(source.token);\r\n    var promise = new Promise(function (resolve, reject) {\r\n        source.token.onCancellationRequested(function () {\r\n            reject(errors.canceled());\r\n        });\r\n        Promise.resolve(thenable).then(function (value) {\r\n            source.dispose();\r\n            resolve(value);\r\n        }, function (err) {\r\n            source.dispose();\r\n            reject(err);\r\n        });\r\n    });\r\n    return new /** @class */ (function () {\r\n        function class_1() {\r\n        }\r\n        class_1.prototype.cancel = function () {\r\n            source.cancel();\r\n        };\r\n        class_1.prototype.then = function (resolve, reject) {\r\n            return promise.then(resolve, reject);\r\n        };\r\n        class_1.prototype.catch = function (reject) {\r\n            return this.then(undefined, reject);\r\n        };\r\n        return class_1;\r\n    }());\r\n}\r\nexport function asWinJsPromise(callback) {\r\n    var source = new CancellationTokenSource();\r\n    return new TPromise(function (resolve, reject, progress) {\r\n        var item = callback(source.token);\r\n        if (item instanceof TPromise) {\r\n            item.then(function (result) {\r\n                source.dispose();\r\n                resolve(result);\r\n            }, function (err) {\r\n                source.dispose();\r\n                reject(err);\r\n            }, progress);\r\n        }\r\n        else if (isThenable(item)) {\r\n            item.then(function (result) {\r\n                source.dispose();\r\n                resolve(result);\r\n            }, function (err) {\r\n                source.dispose();\r\n                reject(err);\r\n            });\r\n        }\r\n        else {\r\n            source.dispose();\r\n            resolve(item);\r\n        }\r\n    }, function () {\r\n        source.cancel();\r\n    });\r\n}\r\n/**\r\n * Hook a cancellation token to a WinJS Promise\r\n */\r\nexport function wireCancellationToken(token, promise, resolveAsUndefinedWhenCancelled) {\r\n    var subscription = token.onCancellationRequested(function () { return promise.cancel(); });\r\n    if (resolveAsUndefinedWhenCancelled) {\r\n        promise = promise.then(undefined, function (err) {\r\n            if (!errors.isPromiseCanceledError(err)) {\r\n                return TPromise.wrapError(err);\r\n            }\r\n            return undefined;\r\n        });\r\n    }\r\n    return always(promise, function () { return subscription.dispose(); });\r\n}\r\n/**\r\n * A helper to prevent accumulation of sequential async tasks.\r\n *\r\n * Imagine a mail man with the sole task of delivering letters. As soon as\r\n * a letter submitted for delivery, he drives to the destination, delivers it\r\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\r\n * When the mail man returns, he picks those N letters and delivers them all in a\r\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\r\n *\r\n * The throttler implements this via the queue() method, by providing it a task\r\n * factory. Following the example:\r\n *\r\n * \t\tconst throttler = new Throttler();\r\n * \t\tconst letters = [];\r\n *\r\n * \t\tfunction deliver() {\r\n * \t\t\tconst lettersToDeliver = letters;\r\n * \t\t\tletters = [];\r\n * \t\t\treturn makeTheTrip(lettersToDeliver);\r\n * \t\t}\r\n *\r\n * \t\tfunction onLetterReceived(l) {\r\n * \t\t\tletters.push(l);\r\n * \t\t\tthrottler.queue(deliver);\r\n * \t\t}\r\n */\r\nvar Throttler = /** @class */ (function () {\r\n    function Throttler() {\r\n        this.activePromise = null;\r\n        this.queuedPromise = null;\r\n        this.queuedPromiseFactory = null;\r\n    }\r\n    Throttler.prototype.queue = function (promiseFactory) {\r\n        var _this = this;\r\n        if (this.activePromise) {\r\n            this.queuedPromiseFactory = promiseFactory;\r\n            if (!this.queuedPromise) {\r\n                var onComplete_1 = function () {\r\n                    _this.queuedPromise = null;\r\n                    var result = _this.queue(_this.queuedPromiseFactory);\r\n                    _this.queuedPromiseFactory = null;\r\n                    return result;\r\n                };\r\n                this.queuedPromise = new TPromise(function (c, e, p) {\r\n                    _this.activePromise.then(onComplete_1, onComplete_1, p).done(c);\r\n                }, function () {\r\n                    _this.activePromise.cancel();\r\n                });\r\n            }\r\n            return new TPromise(function (c, e, p) {\r\n                _this.queuedPromise.then(c, e, p);\r\n            }, function () {\r\n                // no-op\r\n            });\r\n        }\r\n        this.activePromise = promiseFactory();\r\n        return new TPromise(function (c, e, p) {\r\n            _this.activePromise.done(function (result) {\r\n                _this.activePromise = null;\r\n                c(result);\r\n            }, function (err) {\r\n                _this.activePromise = null;\r\n                e(err);\r\n            }, p);\r\n        }, function () {\r\n            _this.activePromise.cancel();\r\n        });\r\n    };\r\n    return Throttler;\r\n}());\r\nexport { Throttler };\r\n/**\r\n * A helper to delay execution of a task that is being requested often.\r\n *\r\n * Following the throttler, now imagine the mail man wants to optimize the number of\r\n * trips proactively. The trip itself can be long, so he decides not to make the trip\r\n * as soon as a letter is submitted. Instead he waits a while, in case more\r\n * letters are submitted. After said waiting period, if no letters were submitted, he\r\n * decides to make the trip. Imagine that N more letters were submitted after the first\r\n * one, all within a short period of time between each other. Even though N+1\r\n * submissions occurred, only 1 delivery was made.\r\n *\r\n * The delayer offers this behavior via the trigger() method, into which both the task\r\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\r\n * the example:\r\n *\r\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\r\n * \t\tconst letters = [];\r\n *\r\n * \t\tfunction letterReceived(l) {\r\n * \t\t\tletters.push(l);\r\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\r\n * \t\t}\r\n */\r\nvar Delayer = /** @class */ (function () {\r\n    function Delayer(defaultDelay) {\r\n        this.defaultDelay = defaultDelay;\r\n        this.timeout = null;\r\n        this.completionPromise = null;\r\n        this.onSuccess = null;\r\n        this.task = null;\r\n    }\r\n    Delayer.prototype.trigger = function (task, delay) {\r\n        var _this = this;\r\n        if (delay === void 0) { delay = this.defaultDelay; }\r\n        this.task = task;\r\n        this.cancelTimeout();\r\n        if (!this.completionPromise) {\r\n            this.completionPromise = new TPromise(function (c) {\r\n                _this.onSuccess = c;\r\n            }, function () {\r\n                // no-op\r\n            }).then(function () {\r\n                _this.completionPromise = null;\r\n                _this.onSuccess = null;\r\n                var task = _this.task;\r\n                _this.task = null;\r\n                return task();\r\n            });\r\n        }\r\n        this.timeout = setTimeout(function () {\r\n            _this.timeout = null;\r\n            _this.onSuccess(null);\r\n        }, delay);\r\n        return this.completionPromise;\r\n    };\r\n    Delayer.prototype.cancel = function () {\r\n        this.cancelTimeout();\r\n        if (this.completionPromise) {\r\n            this.completionPromise.cancel();\r\n            this.completionPromise = null;\r\n        }\r\n    };\r\n    Delayer.prototype.cancelTimeout = function () {\r\n        if (this.timeout !== null) {\r\n            clearTimeout(this.timeout);\r\n            this.timeout = null;\r\n        }\r\n    };\r\n    return Delayer;\r\n}());\r\nexport { Delayer };\r\nvar ShallowCancelThenPromise = /** @class */ (function (_super) {\r\n    __extends(ShallowCancelThenPromise, _super);\r\n    function ShallowCancelThenPromise(outer) {\r\n        var _this = this;\r\n        var completeCallback, errorCallback, progressCallback;\r\n        _this = _super.call(this, function (c, e, p) {\r\n            completeCallback = c;\r\n            errorCallback = e;\r\n            progressCallback = p;\r\n        }, function () {\r\n            // cancel this promise but not the\r\n            // outer promise\r\n            errorCallback(errors.canceled());\r\n        }) || this;\r\n        outer.then(completeCallback, errorCallback, progressCallback);\r\n        return _this;\r\n    }\r\n    return ShallowCancelThenPromise;\r\n}(TPromise));\r\nexport { ShallowCancelThenPromise };\r\n/**\r\n * Replacement for `WinJS.TPromise.timeout`.\r\n */\r\nexport function timeout(n) {\r\n    return createCancelablePromise(function (token) {\r\n        return new Promise(function (resolve, reject) {\r\n            var handle = setTimeout(resolve, n);\r\n            token.onCancellationRequested(function (_) {\r\n                clearTimeout(handle);\r\n                reject(errors.canceled());\r\n            });\r\n        });\r\n    });\r\n}\r\nfunction isWinJSPromise(candidate) {\r\n    return TPromise.is(candidate) && typeof candidate.done === 'function';\r\n}\r\nexport function always(winjsPromiseOrThenable, f) {\r\n    if (isWinJSPromise(winjsPromiseOrThenable)) {\r\n        return new TPromise(function (c, e, p) {\r\n            winjsPromiseOrThenable.done(function (result) {\r\n                try {\r\n                    f(result);\r\n                }\r\n                catch (e1) {\r\n                    errors.onUnexpectedError(e1);\r\n                }\r\n                c(result);\r\n            }, function (err) {\r\n                try {\r\n                    f(err);\r\n                }\r\n                catch (e1) {\r\n                    errors.onUnexpectedError(e1);\r\n                }\r\n                e(err);\r\n            }, function (progress) {\r\n                p(progress);\r\n            });\r\n        }, function () {\r\n            winjsPromiseOrThenable.cancel();\r\n        });\r\n    }\r\n    else {\r\n        // simple\r\n        winjsPromiseOrThenable.then(function (_) { return f(); }, function (_) { return f(); });\r\n        return winjsPromiseOrThenable;\r\n    }\r\n}\r\nexport function first2(promiseFactories, shouldStop, defaultValue) {\r\n    if (shouldStop === void 0) { shouldStop = function (t) { return !!t; }; }\r\n    if (defaultValue === void 0) { defaultValue = null; }\r\n    var index = 0;\r\n    var len = promiseFactories.length;\r\n    var loop = function () {\r\n        if (index >= len) {\r\n            return Promise.resolve(defaultValue);\r\n        }\r\n        var factory = promiseFactories[index++];\r\n        var promise = factory();\r\n        return promise.then(function (result) {\r\n            if (shouldStop(result)) {\r\n                return Promise.resolve(result);\r\n            }\r\n            return loop();\r\n        });\r\n    };\r\n    return loop();\r\n}\r\nexport function first(promiseFactories, shouldStop, defaultValue) {\r\n    if (shouldStop === void 0) { shouldStop = function (t) { return !!t; }; }\r\n    if (defaultValue === void 0) { defaultValue = null; }\r\n    var index = 0;\r\n    var len = promiseFactories.length;\r\n    var loop = function () {\r\n        if (index >= len) {\r\n            return TPromise.as(defaultValue);\r\n        }\r\n        var factory = promiseFactories[index++];\r\n        var promise = factory();\r\n        return promise.then(function (result) {\r\n            if (shouldStop(result)) {\r\n                return TPromise.as(result);\r\n            }\r\n            return loop();\r\n        });\r\n    };\r\n    return loop();\r\n}\r\nexport function setDisposableTimeout(handler, timeout) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    var handle = setTimeout.apply(void 0, [handler, timeout].concat(args));\r\n    return { dispose: function () { clearTimeout(handle); } };\r\n}\r\nvar TimeoutTimer = /** @class */ (function (_super) {\r\n    __extends(TimeoutTimer, _super);\r\n    function TimeoutTimer() {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = -1;\r\n        return _this;\r\n    }\r\n    TimeoutTimer.prototype.dispose = function () {\r\n        this.cancel();\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    TimeoutTimer.prototype.cancel = function () {\r\n        if (this._token !== -1) {\r\n            clearTimeout(this._token);\r\n            this._token = -1;\r\n        }\r\n    };\r\n    TimeoutTimer.prototype.cancelAndSet = function (runner, timeout) {\r\n        var _this = this;\r\n        this.cancel();\r\n        this._token = setTimeout(function () {\r\n            _this._token = -1;\r\n            runner();\r\n        }, timeout);\r\n    };\r\n    TimeoutTimer.prototype.setIfNotSet = function (runner, timeout) {\r\n        var _this = this;\r\n        if (this._token !== -1) {\r\n            // timer is already set\r\n            return;\r\n        }\r\n        this._token = setTimeout(function () {\r\n            _this._token = -1;\r\n            runner();\r\n        }, timeout);\r\n    };\r\n    return TimeoutTimer;\r\n}(Disposable));\r\nexport { TimeoutTimer };\r\nvar IntervalTimer = /** @class */ (function (_super) {\r\n    __extends(IntervalTimer, _super);\r\n    function IntervalTimer() {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = -1;\r\n        return _this;\r\n    }\r\n    IntervalTimer.prototype.dispose = function () {\r\n        this.cancel();\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    IntervalTimer.prototype.cancel = function () {\r\n        if (this._token !== -1) {\r\n            clearInterval(this._token);\r\n            this._token = -1;\r\n        }\r\n    };\r\n    IntervalTimer.prototype.cancelAndSet = function (runner, interval) {\r\n        this.cancel();\r\n        this._token = setInterval(function () {\r\n            runner();\r\n        }, interval);\r\n    };\r\n    return IntervalTimer;\r\n}(Disposable));\r\nexport { IntervalTimer };\r\nvar RunOnceScheduler = /** @class */ (function () {\r\n    function RunOnceScheduler(runner, timeout) {\r\n        this.timeoutToken = -1;\r\n        this.runner = runner;\r\n        this.timeout = timeout;\r\n        this.timeoutHandler = this.onTimeout.bind(this);\r\n    }\r\n    /**\r\n     * Dispose RunOnceScheduler\r\n     */\r\n    RunOnceScheduler.prototype.dispose = function () {\r\n        this.cancel();\r\n        this.runner = null;\r\n    };\r\n    /**\r\n     * Cancel current scheduled runner (if any).\r\n     */\r\n    RunOnceScheduler.prototype.cancel = function () {\r\n        if (this.isScheduled()) {\r\n            clearTimeout(this.timeoutToken);\r\n            this.timeoutToken = -1;\r\n        }\r\n    };\r\n    /**\r\n     * Cancel previous runner (if any) & schedule a new runner.\r\n     */\r\n    RunOnceScheduler.prototype.schedule = function (delay) {\r\n        if (delay === void 0) { delay = this.timeout; }\r\n        this.cancel();\r\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\r\n    };\r\n    /**\r\n     * Returns true if scheduled.\r\n     */\r\n    RunOnceScheduler.prototype.isScheduled = function () {\r\n        return this.timeoutToken !== -1;\r\n    };\r\n    RunOnceScheduler.prototype.onTimeout = function () {\r\n        this.timeoutToken = -1;\r\n        if (this.runner) {\r\n            this.doRun();\r\n        }\r\n    };\r\n    RunOnceScheduler.prototype.doRun = function () {\r\n        this.runner();\r\n    };\r\n    return RunOnceScheduler;\r\n}());\r\nexport { RunOnceScheduler };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { transformErrorForSerialization } from '../errors.js';\r\nimport { Disposable } from '../lifecycle.js';\r\nimport { TPromise } from '../winjs.base.js';\r\nimport { ShallowCancelThenPromise } from '../async.js';\r\nimport { isWeb } from '../platform.js';\r\nvar INITIALIZE = '$initialize';\r\nvar webWorkerWarningLogged = false;\r\nexport function logOnceWebWorkerWarning(err) {\r\n    if (!isWeb) {\r\n        // running tests\r\n        return;\r\n    }\r\n    if (!webWorkerWarningLogged) {\r\n        webWorkerWarningLogged = true;\r\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\r\n    }\r\n    console.warn(err.message);\r\n}\r\nvar SimpleWorkerProtocol = /** @class */ (function () {\r\n    function SimpleWorkerProtocol(handler) {\r\n        this._workerId = -1;\r\n        this._handler = handler;\r\n        this._lastSentReq = 0;\r\n        this._pendingReplies = Object.create(null);\r\n    }\r\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\r\n        this._workerId = workerId;\r\n    };\r\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\r\n        var req = String(++this._lastSentReq);\r\n        var reply = {\r\n            c: null,\r\n            e: null\r\n        };\r\n        var result = new TPromise(function (c, e) {\r\n            reply.c = c;\r\n            reply.e = e;\r\n        }, function () {\r\n            // Cancel not supported\r\n        });\r\n        this._pendingReplies[req] = reply;\r\n        this._send({\r\n            vsWorker: this._workerId,\r\n            req: req,\r\n            method: method,\r\n            args: args\r\n        });\r\n        return result;\r\n    };\r\n    SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\r\n        var message;\r\n        try {\r\n            message = JSON.parse(serializedMessage);\r\n        }\r\n        catch (e) {\r\n            // nothing\r\n        }\r\n        if (!message || !message.vsWorker) {\r\n            return;\r\n        }\r\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\r\n            return;\r\n        }\r\n        this._handleMessage(message);\r\n    };\r\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\r\n        var _this = this;\r\n        if (msg.seq) {\r\n            var replyMessage = msg;\r\n            if (!this._pendingReplies[replyMessage.seq]) {\r\n                console.warn('Got reply to unknown seq');\r\n                return;\r\n            }\r\n            var reply = this._pendingReplies[replyMessage.seq];\r\n            delete this._pendingReplies[replyMessage.seq];\r\n            if (replyMessage.err) {\r\n                var err = replyMessage.err;\r\n                if (replyMessage.err.$isError) {\r\n                    err = new Error();\r\n                    err.name = replyMessage.err.name;\r\n                    err.message = replyMessage.err.message;\r\n                    err.stack = replyMessage.err.stack;\r\n                }\r\n                reply.e(err);\r\n                return;\r\n            }\r\n            reply.c(replyMessage.res);\r\n            return;\r\n        }\r\n        var requestMessage = msg;\r\n        var req = requestMessage.req;\r\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\r\n        result.then(function (r) {\r\n            _this._send({\r\n                vsWorker: _this._workerId,\r\n                seq: req,\r\n                res: r,\r\n                err: undefined\r\n            });\r\n        }, function (e) {\r\n            if (e.detail instanceof Error) {\r\n                // Loading errors have a detail property that points to the actual error\r\n                e.detail = transformErrorForSerialization(e.detail);\r\n            }\r\n            _this._send({\r\n                vsWorker: _this._workerId,\r\n                seq: req,\r\n                res: undefined,\r\n                err: transformErrorForSerialization(e)\r\n            });\r\n        });\r\n    };\r\n    SimpleWorkerProtocol.prototype._send = function (msg) {\r\n        var strMsg = JSON.stringify(msg);\r\n        // console.log('SENDING: ' + strMsg);\r\n        this._handler.sendMessage(strMsg);\r\n    };\r\n    return SimpleWorkerProtocol;\r\n}());\r\n/**\r\n * Main thread side\r\n */\r\nvar SimpleWorkerClient = /** @class */ (function (_super) {\r\n    __extends(SimpleWorkerClient, _super);\r\n    function SimpleWorkerClient(workerFactory, moduleId) {\r\n        var _this = _super.call(this) || this;\r\n        var lazyProxyFulfill = null;\r\n        var lazyProxyReject = null;\r\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\r\n            _this._protocol.handleMessage(msg);\r\n        }, function (err) {\r\n            // in Firefox, web workers fail lazily :(\r\n            // we will reject the proxy\r\n            lazyProxyReject(err);\r\n        }));\r\n        _this._protocol = new SimpleWorkerProtocol({\r\n            sendMessage: function (msg) {\r\n                _this._worker.postMessage(msg);\r\n            },\r\n            handleMessage: function (method, args) {\r\n                // Intentionally not supporting worker -> main requests\r\n                return TPromise.as(null);\r\n            }\r\n        });\r\n        _this._protocol.setWorkerId(_this._worker.getId());\r\n        // Gather loader configuration\r\n        var loaderConfiguration = null;\r\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\r\n            // Get the configuration from the Monaco AMD Loader\r\n            loaderConfiguration = self.require.getConfig();\r\n        }\r\n        else if (typeof self.requirejs !== 'undefined') {\r\n            // Get the configuration from requirejs\r\n            loaderConfiguration = self.requirejs.s.contexts._.config;\r\n        }\r\n        _this._lazyProxy = new TPromise(function (c, e) {\r\n            lazyProxyFulfill = c;\r\n            lazyProxyReject = e;\r\n        }, function () { });\r\n        // Send initialize message\r\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\r\n            _this._worker.getId(),\r\n            moduleId,\r\n            loaderConfiguration\r\n        ]);\r\n        _this._onModuleLoaded.then(function (availableMethods) {\r\n            var proxy = {};\r\n            for (var i = 0; i < availableMethods.length; i++) {\r\n                proxy[availableMethods[i]] = createProxyMethod(availableMethods[i], proxyMethodRequest);\r\n            }\r\n            lazyProxyFulfill(proxy);\r\n        }, function (e) {\r\n            lazyProxyReject(e);\r\n            _this._onError('Worker failed to load ' + moduleId, e);\r\n        });\r\n        // Create proxy to loaded code\r\n        var proxyMethodRequest = function (method, args) {\r\n            return _this._request(method, args);\r\n        };\r\n        var createProxyMethod = function (method, proxyMethodRequest) {\r\n            return function () {\r\n                var args = Array.prototype.slice.call(arguments, 0);\r\n                return proxyMethodRequest(method, args);\r\n            };\r\n        };\r\n        return _this;\r\n    }\r\n    SimpleWorkerClient.prototype.getProxyObject = function () {\r\n        // Do not allow chaining promises to cancel the proxy creation\r\n        return new ShallowCancelThenPromise(this._lazyProxy);\r\n    };\r\n    SimpleWorkerClient.prototype._request = function (method, args) {\r\n        var _this = this;\r\n        return new TPromise(function (c, e) {\r\n            _this._onModuleLoaded.then(function () {\r\n                _this._protocol.sendMessage(method, args).then(c, e);\r\n            }, e);\r\n        }, function () {\r\n            // Cancel intentionally not supported\r\n        });\r\n    };\r\n    SimpleWorkerClient.prototype._onError = function (message, error) {\r\n        console.error(message);\r\n        console.info(error);\r\n    };\r\n    return SimpleWorkerClient;\r\n}(Disposable));\r\nexport { SimpleWorkerClient };\r\n/**\r\n * Worker side\r\n */\r\nvar SimpleWorkerServer = /** @class */ (function () {\r\n    function SimpleWorkerServer(postSerializedMessage, requestHandler) {\r\n        var _this = this;\r\n        this._requestHandler = requestHandler;\r\n        this._protocol = new SimpleWorkerProtocol({\r\n            sendMessage: function (msg) {\r\n                postSerializedMessage(msg);\r\n            },\r\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\r\n        });\r\n    }\r\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\r\n        this._protocol.handleMessage(msg);\r\n    };\r\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\r\n        if (method === INITIALIZE) {\r\n            return this.initialize(args[0], args[1], args[2]);\r\n        }\r\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\r\n            return TPromise.wrapError(new Error('Missing requestHandler or method: ' + method));\r\n        }\r\n        try {\r\n            return TPromise.as(this._requestHandler[method].apply(this._requestHandler, args));\r\n        }\r\n        catch (e) {\r\n            return TPromise.wrapError(e);\r\n        }\r\n    };\r\n    SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\r\n        var _this = this;\r\n        this._protocol.setWorkerId(workerId);\r\n        if (this._requestHandler) {\r\n            // static request handler\r\n            var methods = [];\r\n            for (var prop in this._requestHandler) {\r\n                if (typeof this._requestHandler[prop] === 'function') {\r\n                    methods.push(prop);\r\n                }\r\n            }\r\n            return TPromise.as(methods);\r\n        }\r\n        if (loaderConfig) {\r\n            // Remove 'baseUrl', handling it is beyond scope for now\r\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\r\n                delete loaderConfig['baseUrl'];\r\n            }\r\n            if (typeof loaderConfig.paths !== 'undefined') {\r\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\r\n                    delete loaderConfig.paths['vs'];\r\n                }\r\n            }\r\n            // Since this is in a web worker, enable catching errors\r\n            loaderConfig.catchError = true;\r\n            self.require.config(loaderConfig);\r\n        }\r\n        var cc;\r\n        var ee;\r\n        var r = new TPromise(function (c, e) {\r\n            cc = c;\r\n            ee = e;\r\n        });\r\n        // Use the global require to be sure to get the global config\r\n        self.require([moduleId], function () {\r\n            var result = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                result[_i] = arguments[_i];\r\n            }\r\n            var handlerModule = result[0];\r\n            _this._requestHandler = handlerModule.create();\r\n            var methods = [];\r\n            for (var prop in _this._requestHandler) {\r\n                if (typeof _this._requestHandler[prop] === 'function') {\r\n                    methods.push(prop);\r\n                }\r\n            }\r\n            cc(methods);\r\n        }, ee);\r\n        return r;\r\n    };\r\n    return SimpleWorkerServer;\r\n}());\r\nexport { SimpleWorkerServer };\r\n/**\r\n * Called on the worker side\r\n */\r\nexport function create(postMessage) {\r\n    return new SimpleWorkerServer(postMessage, null);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { EditorSimpleWorkerImpl } from './common/services/editorSimpleWorker.js';\r\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\r\nvar initialized = false;\r\nexport function initialize(foreignModule) {\r\n    if (initialized) {\r\n        return;\r\n    }\r\n    initialized = true;\r\n    var editorWorker = new EditorSimpleWorkerImpl(foreignModule);\r\n    var simpleWorker = new SimpleWorkerServer(function (msg) {\r\n        self.postMessage(msg);\r\n    }, editorWorker);\r\n    self.onmessage = function (e) {\r\n        simpleWorker.onmessage(e.data);\r\n    };\r\n}\r\nself.onmessage = function (e) {\r\n    // Ignore first message in this case and initialize if not yet initialized\r\n    if (!initialized) {\r\n        initialize(null);\r\n    }\r\n};\r\n"],"sourceRoot":""}