{"version":3,"sources":["webpack:///./src/pages/BigQuestion.vue?5c33","webpack:///src/pages/BigQuestion.vue","webpack:///./src/pages/BigQuestion.vue?8996","webpack:///./src/pages/BigQuestion.vue","webpack:///./src/pages/BigQuestion.vue?fa98"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","size","fix","_e","onRecord","staticStyle","height","width","_v","_s","questionnaire","title","description","type","on","click","start","report","schemas","margin-left","$event","stopPropagation","reset","name","after-leave","nextQuestion","_l","schema","index","key","text-align","additionalKey","commit","Commit","have","AdditionalDown","model","value","callback","$$v","$set","expression","k","inx","getComponentName","schemaType","apiType","propsObject","schemaKey","input","Input","additional","Additional","validator","initValidator","uuid","multiKey","properties","answers","button","reportAnswer","domProps","innerHTML","reportContent","staticRenderFns","BigQuestionvue_type_script_lang_js_","components","schemaComponent","MultiNest","multiNest","Tree","simple_tree","data","pageLoading","schemaBack","schemaString","compoentMap","recordId","projectId","lastPos","innerWidth","innerHeight","x","y","isMove","additionalKeys","answerRecord","loading","show","validators","computed","token","$store","state","user","watch","created","_created","Object","asyncToGenerator","regeneratorRuntime","mark","_callee","xAccessToken","_this","wrap","_context","prev","next","$route","query","$Message","error","abrupt","rootId","v4_default","window","localStorage","$request","defaults","headers","common","setItem","location","href","replace","answer","$bus","$on","stop","apply","arguments","beforeDestroy","$off","methods","answerHandler","uuids","r","deepCopy","includes","n","length","console","log","keys","JSON","stringify","e","_answer","_callee2","action","valueJson","jumpToQuestion","_args2","_context2","undefined","question","answerBig","targetId","sent","status","result","uiType","JsonSchemaParse","getReport","msg","_getReport","_callee3","reportData","_context3","getBigReport","remark","val","parse","typeToValue","jsons","_this2","tmp","map","json","_start","_callee4","_context4","indexOf","split","current","first","_this3","then","commitAnswer","validates","push","Promise","all","catch","err","_this4","$nextTick","additionalShow","allowClose","splice","backTo","$router","params","pages_BigQuestionvue_type_script_lang_js_","component","componentNormalizer","options","__file","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_BigQuestion_vue_vue_type_style_index_0_id_274c403e_lang_stylus_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_BigQuestion_vue_vue_type_style_index_0_id_274c403e_lang_stylus_scoped_true___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/chunk-6f0d9e13.f1baffe9.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"question-page\"},[(_vm.pageLoading)?_c('Spin',{attrs:{\"size\":\"large\",\"fix\":\"\"}}):_vm._e(),_c('div',{staticClass:\"answer-question\"},[(!_vm.onRecord)?_c('div',{staticClass:\"question-row\"},[_c('div',{staticStyle:{\"height\":\"480px\",\"width\":\"100%\"}},[_c('Card',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}},[(!_vm.onRecord)?_c('div',{staticClass:\"questionnaire\"},[_c('div',{staticClass:\"project-title\"},[_vm._v(_vm._s(_vm.questionnaire.title))]),_c('div',{staticClass:\"project-description\"},[_c('span',{staticClass:\"description\"},[_vm._v(_vm._s(_vm.questionnaire.description))])]),_c('div',{staticClass:\"bottom-btn\"},[_c('Button',{attrs:{\"type\":\"primary\",\"size\":\"large\"},on:{\"click\":_vm.start}},[_vm._v(\"开始咨询\")])],1)]):_vm._e()])],1)]):_vm._e(),(_vm.onRecord)?_c('div',{staticClass:\"question-row question-center\"},[(!_vm.report && _vm.schemas)?_c('div',{staticClass:\"que\"},[_c('div',{staticClass:\"backhome\"},[_c('Button',{staticStyle:{\"margin-left\":\"0.5rem\"},attrs:{\"type\":\"info\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.reset($event)}}},[_vm._v(\"重做\")])],1),_c('div',{staticClass:\"questions\"},[_c('Card',[_c('transition-group',{attrs:{\"name\":\"fade\"},on:{\"after-leave\":_vm.nextQuestion}},_vm._l((_vm.schemas),function(schema,index){return (_vm.show)?_c('div',{key:index},[_c('h2',{staticClass:\"question-title\",staticStyle:{\"text-align\":\"center\"}},[_vm._v(_vm._s(schema.title))]),_c('p',{staticClass:\"question-description\"},[_vm._v(_vm._s(schema.description))]),_c('div',{staticClass:\"question-options\"},[_vm._l((schema.properties),function(key,index){return [(key.additional)?_c('Additional',{key:index,attrs:{\"title\":key.title,\"additionalKey\":index},on:{\"commit\":_vm.Commit,\"have\":_vm.AdditionalDown},model:{value:(key.additionalShow),callback:function ($$v) {_vm.$set(key, \"additionalShow\", $$v)},expression:\"key.additionalShow\"}},[_vm._l((key.properties),function(k,inx){return [_c('schemaComponent',{key:inx,attrs:{\"name\":_vm.getComponentName(k),\"schemaType\":\"big\",\"apiType\":\"open\",\"propsObject\":k,\"schemaKey\":index + '-----' + inx},on:{\"input\":_vm.Input,\"commit\":_vm.Commit,\"additional\":_vm.Additional,\"validator\":_vm.initValidator}})]})],2):(key.uuid === \"00000000-0000-0000-0000-000000000012\" && key.multiKey)?_c('MultiNest',{key:index,attrs:{\"properties\":schema.properties,\"answers\":_vm.answers,\"title\":key.title,\"schemaKey\":index,\"multiKey\":key.multiKey},on:{\"additional\":_vm.Additional}}):_c('schemaComponent',{key:index,attrs:{\"schemaType\":\"big\",\"apiType\":\"open\",\"name\":_vm.getComponentName(key),\"propsObject\":key,\"schemaKey\":index},on:{\"input\":_vm.Input,\"commit\":_vm.Commit,\"additional\":_vm.Additional,\"validator\":_vm.initValidator}})]})],2)]):_vm._e()})),(_vm.show)?_c('schemaComponent',{attrs:{\"schemaType\":\"big\",\"name\":'00000000-0000-0000-0000-0000000000Z1',\"propsObject\":_vm.button,\"schemaKey\":'button'},on:{\"commit\":_vm.Commit}}):_vm._e()],1)],1)]):_c('div',{staticClass:\"report\"},[_c('div',{staticClass:\"backhome\"},[_c('Button',{attrs:{\"type\":\"info\"},on:{\"click\":function($event){$event.stopPropagation();_vm.reportAnswer(2)}}},[_vm._v(\"上一题\")]),_c('Button',{staticStyle:{\"margin-left\":\"0.5rem\"},attrs:{\"type\":\"info\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.reset($event)}}},[_vm._v(\"重做\")])],1),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('div',[(_vm.show)?_c('div',{staticClass:\"report-title\"},[_vm._v(\"报告\")]):_vm._e(),_c('div',{staticClass:\"report-content\",domProps:{\"innerHTML\":_vm._s(_vm.reportContent)}})])])],1)]):_vm._e()])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\r\n.question-page\r\n  Spin(size=\"large\", fix, v-if=\"pageLoading\")\r\n  .answer-question\r\n    .question-row(v-if='!onRecord')\r\n      div(style='height: 480px; width: 100%')\r\n        Card(style='width: 100%; height: 100%')\r\n          .questionnaire(v-if='!onRecord')\r\n            .project-title {{questionnaire.title}}\r\n            .project-description\r\n              span.description {{questionnaire.description}}\r\n            .bottom-btn\r\n              Button(type='primary', size='large', @click='start') 开始咨询\r\n    .question-row.question-center(v-if='onRecord')\r\n      .que(v-if='!report && schemas')\r\n        .backhome\r\n          Button(type='info', style='margin-left: 0.5rem', @click.stop='reset') 重做\r\n        .questions\r\n          Card\r\n            transition-group(name='fade', @after-leave='nextQuestion')\r\n              div(v-if='show' v-for=\"(schema, index) in schemas\" :key=\"index\")\r\n                h2.question-title(style='text-align: center') {{ schema.title }}\r\n                p.question-description {{ schema.description }}\r\n                .question-options\r\n                  template(v-for='(key, index) in schema.properties')\r\n                    Additional(v-if='key.additional', :title='key.title', v-model='key.additionalShow', :key='index', :additionalKey='index', @commit='Commit', @have='AdditionalDown')\r\n                      template(v-for='(k, inx) in key.properties')\r\n                        schemaComponent(:name='getComponentName(k)' schemaType=\"big\" apiType=\"open\" :propsObject='k' :schemaKey=\"index + '-----' + inx\" @input='Input' @commit='Commit', @additional='Additional', :key='inx', @validator=\"initValidator\")\r\n                    MultiNest(v-else-if='key.uuid === \"00000000-0000-0000-0000-000000000012\" && key.multiKey', :properties=\"schema.properties\", :answers=\"answers\", :title='key.title', :schemaKey='index', :key='index', :multiKey='key.multiKey', @additional='Additional')\r\n                    schemaComponent(v-else='' schemaType=\"big\" apiType=\"open\" :name='getComponentName(key)', :propsObject='key', :schemaKey='index', @input='Input', @commit='Commit', @additional='Additional', :key='index', @validator=\"initValidator\")\r\n            schemaComponent(v-if='show' schemaType=\"big\" :name=\"'00000000-0000-0000-0000-0000000000Z1'\" :propsObject='button', :schemaKey=\"'button'\" @commit='Commit')\r\n      .report(v-else='')\r\n        .backhome\r\n          Button(type='info', @click.stop='reportAnswer(2)') 上一题\r\n          Button(type='info', style='margin-left: 0.5rem', @click.stop='reset') 重做\r\n        transition(name='fade')\r\n          div\r\n            .report-title(v-if='show') 报告\r\n            .report-content(v-html='reportContent')\r\n</template>\r\n\r\n<script>\r\nimport question from '@/api/question'\r\nimport Additional from '@components/additional'\r\nimport MultiNest from '@components/multiNest'\r\nimport schemaComponent from '@components/schemaComponent'\r\nimport uuidv4 from 'uuid/v4'\r\nimport Tree from '@/components/simple-tree'\r\n\r\nexport default {\r\n  name: 'question-page',\r\n  components: {\r\n    schemaComponent,\r\n    Additional,\r\n    MultiNest,\r\n    Tree\r\n  },\r\n  data () {\r\n    return {\r\n      pageLoading: true,\r\n      schemas: null,\r\n      schemaBack: null,\r\n      schemaString: null,\r\n      compoentMap: null,\r\n      onRecord: false,\r\n      questionnaire: {},\r\n      answers: {},\r\n      recordId: null,\r\n      report: false,\r\n      reportContent: null,\r\n      projectId: '3001',\r\n      lastPos: {\r\n        innerWidth: 0,\r\n        innerHeight: 0,\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      isMove: false,\r\n      additionalKeys: [],\r\n      answerRecord: [],\r\n      loading: false,\r\n      show: true,\r\n      validators: {},\r\n      button: {\r\n        commit: true,\r\n        title: '提交',\r\n        uuid: '00000000-0000-0000-0000-0000000000Z1'\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    token () {\r\n      return this.$store.state.user.token\r\n    }\r\n  },\r\n  watch: {\r\n    loading () {\r\n      if (!this.loading && !this.show) {\r\n        this.show = true\r\n      }\r\n    }\r\n  },\r\n  async created () {\r\n    this.projectId = this.$route.query.projectId\r\n    if (!this.projectId) {\r\n      this.$Message.error('请重新选择需要访问的项目')\r\n      return\r\n    }\r\n    this.rootId = this.$route.query.rootId\r\n    if (this.$route.query.reset == 1) { // eslint-disable-line\r\n      const xAccessToken = uuidv4()\r\n      window.localStorage.xAccessToken = xAccessToken\r\n      this.$request.defaults.headers.common['x-access-token'] = xAccessToken\r\n      window.localStorage.setItem('onRecord_' + this.projectId, '0')\r\n      window.location.href = window.location.href.replace('&reset=1', '')\r\n    }\r\n    // if (window.localStorage.getItem('onRecord_' + this.projectId) === '3') {\r\n    //   await this.getReport()\r\n    //   // this.requestAnswerRecord()\r\n    // } else if (window.localStorage.getItem('onRecord_' + this.projectId) === '1') {\r\n    //   await this.answer(1)\r\n    // } else {\r\n    await this.answer(3, '', '')\r\n    // }\r\n    this.$bus.$on('get-root-project', (callback) => callback(this.rootId))\r\n    // this.questionnaire = await this.getQuestionnaire(projectId)\r\n\r\n    // 如果有正在做题\r\n    // if (window.sessionStorage.recordId && this.questionnaire.recordId === parseInt(window.sessionStorage.recordId) && window.sessionStorage.schema && window.sessionStorage.valueJson) {\r\n    //   this.recordId = parseInt(this.questionnaire.recordId)\r\n    //   await this.answer(1, JSON.parse(window.sessionStorage.schema), window.sessionStorage.valueJson)\r\n    // }\r\n  },\r\n  beforeDestroy () {\r\n    this.$bus.$off('get-root-project')\r\n  },\r\n  methods: {\r\n    // validJsonSchema () {\r\n    //   let validate = ajv.compile(this.schema)\r\n    //   let valid = validate({})\r\n    //   if (!valid) console.log(validate.errors)\r\n    // },\r\n    // async getQuestionnaire (projectId) {\r\n    //   return question.getQuestionnaire.apply(this, [projectId])\r\n    // },\r\n    answerHandler (answer, schema) {\r\n      const uuids = ['00000000-0000-0000-0000-000000000013', '00000000-0000-0000-0000-000000000005', '00000000-0000-0000-0000-000000000007'] // 判断、单选、多选\r\n      let r = this.deepCopy(answer)\r\n      for (const key in schema.properties) {\r\n        if (uuids.includes(schema.properties[key].uuid)) {\r\n          for (const n in schema.properties[key].properties) { // TODO: 一堆脏代码\r\n            // console.log(answer[key])\r\n            // console.log(schema.properties[key])\r\n            if (!answer[key].includes(n) && schema.properties[key].properties[n].additionalKeys && schema.properties[key].properties[n].additionalKeys.length) { // eslint-disable-line\r\n              // const addTmpKey = schema.properties[key].properties[n].additionalKeys[0]\r\n              // console.log(schema.properties[addTmpKey])\r\n              // console.log(Object.keys(schema.properties[addTmpKey].properties)[0])\r\n              console.log(Object.keys(schema.properties[schema.properties[key].properties[n].additionalKeys[0]].properties)[0])\r\n              delete r[Object.keys(schema.properties[schema.properties[key].properties[n].additionalKeys[0]].properties)[0]]\r\n              console.log(r)\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return JSON.stringify(r)\r\n    },\r\n    initValidator (e) {\r\n      this.validators[e.key] = e.validator\r\n    },\r\n    reset () {\r\n      const xAccessToken = uuidv4()\r\n      window.localStorage.xAccessToken = xAccessToken\r\n      this.$request.defaults.headers.common['x-access-token'] = xAccessToken\r\n      window.localStorage.setItem('onRecord_' + this.projectId, '0')\r\n      this.answer(3, 0, 0)\r\n    },\r\n    async answer (action = 3, schema, valueJson, jumpToQuestion) {\r\n      if (this.loading) return\r\n      if (action === 4) {\r\n        this.show = false\r\n      }\r\n      this.loading = true\r\n      this.schemaBack = null\r\n      if (this.answers.button === null) {\r\n        delete this.answers.button\r\n      }\r\n      let data = await question.answerBig.apply(this, [{\r\n        projectId: this.projectId,\r\n        action, // 3 第一个表单，4 下一个表单， 5提交表单\r\n        targetId: jumpToQuestion || null, // 跳转到某题目的记录id\r\n        schema: schema === 0 ? null : this.schemas, // 原样返回json模式\r\n        valueJson: valueJson === 0 ? null : JSON.stringify(this.answers) === '{}' ? null : this.answerHandler(this.answers, this.schemas) // 做题得到的结果\r\n      }])\r\n      if (data) {\r\n        if (data.status === 1) {\r\n          console.log(data)\r\n          // 1返回的是开始咨询界面的json模式,2:联系方式界面json模式,3:做题界面的json模式\r\n          if (data.result.schemas[0].uiType === 1) {\r\n            window.localStorage.setItem('onRecord_' + this.projectId, '0')\r\n            this.questionnaire = data.result.schemas[0]\r\n            this.report = false\r\n            this.onRecord = false\r\n            this.loading = false\r\n          } else if (data.result.schemas[0].uiType === 2) {\r\n            window.localStorage.setItem('onRecord_' + this.projectId, '4')\r\n            let schemas = data.result.schemas\r\n            this.additionalKeys = null\r\n            this.schemaString = JSON.stringify(schemas)\r\n            this.validators = {}\r\n            this.schemas = schemas\r\n            // const valueJson = JSON.stringify(this.answers)\r\n            this.answers = this.JsonSchemaParse(this.schemas)\r\n            this.report = false\r\n            this.onRecord = true\r\n            // if (schemas.properties === null) {\r\n            //   this.onRecord = false\r\n            // } else {\r\n            //   this.onRecord = true\r\n            //   // window.sessionStorage.valueJson = valueJson\r\n            //   // window.sessionStorage.recordId = this.recordId\r\n            //   // window.sessionStorage.schema = JSON.stringify(this.schema)\r\n            // }\r\n            this.loading = false\r\n          } else if (data.result.uiType === 3) { // TODO: 联系方式界面\r\n            // window.localStorage.setItem('onRecord_' + this.projectId, '1')\r\n            await this.getReport()\r\n            this.loading = false\r\n            // window.sessionStorage.removeItem('valueJson')\r\n            // window.sessionStorage.removeItem('recordId')\r\n            // window.sessionStorage.removeItem('schema')\r\n          }\r\n        } else {\r\n          this.$Message.error(data.msg || '未知错误')\r\n          this.loading = false\r\n        }\r\n        // this.requestAnswerRecord()\r\n      } else {\r\n        this.$Message.error('发生错误，请稍后再试')\r\n        this.loading = false\r\n      }\r\n      this.pageLoading = false\r\n    },\r\n    async getReport () {\r\n      let reportData = await question.getBigReport.apply(this, [\r\n        {\r\n          projectId: this.projectId\r\n        }\r\n      ])\r\n      console.log(reportData)\r\n      if (reportData.status === 1) {\r\n        this.reportContent = reportData.result.remark\r\n        this.report = true\r\n        this.onRecord = true\r\n        this.schemaBack = JSON.stringify(this.schema)\r\n        this.schema = null\r\n        // window.localStorage.setItem('onRecord_' + this.projectId, '3')\r\n      } else {\r\n        this.$Message.error(reportData.msg)\r\n      }\r\n    },\r\n    reportAnswer (val) {\r\n      this.schema = JSON.parse(this.schemaBack)\r\n      this.answer(val)\r\n    },\r\n    typeToValue (type) {\r\n      switch (type) {\r\n        case 'number':\r\n          return null\r\n        case 'string':\r\n          return ''\r\n        case 'boolean':\r\n          return false\r\n        case 'array':\r\n          return []\r\n        case 'object':\r\n          return {}\r\n        case 'whitespace':\r\n          return ' '\r\n        case 'null':\r\n          return null\r\n        default:\r\n          return null\r\n      }\r\n    },\r\n    JsonSchemaParse (jsons) {\r\n      let tmp = {}\r\n      jsons.map((json) => {\r\n        for (const key in json.properties) {\r\n          if (json.properties[key].additional) { // 追加题平铺\r\n            for (const k in json.properties[key].properties) {\r\n              tmp[k] = this.typeToValue(json.properties[key]['properties'][k]['type'])\r\n            }\r\n          } else {\r\n            // if (!(json.properties[key].uuid === '00000000-0000-0000-0000-000000000012' && json.properties[key].multiKey) && json.properties[key].uuid !== '00000000-0000-0000-0000-000000000024') {\r\n            if (!(json.properties[key].uuid === '00000000-0000-0000-0000-000000000012' && json.properties[key].multiKey)) {\r\n              tmp[key] = this.typeToValue(json.properties[key]['type'])\r\n            }\r\n          }\r\n        }\r\n      })\r\n      console.log(tmp)\r\n      return tmp\r\n    },\r\n    async start () {\r\n      await this.answer(3, 0, 0)\r\n    },\r\n    getComponentName (key) {\r\n      return key.uuid\r\n    },\r\n    Input (val) {\r\n      console.log(val.schemaKey)\r\n      // this.$set(this.values, Object.keys(val)[0], val[Object.keys(val)[0]])\r\n      if (val.schemaKey.indexOf('-----') !== -1) {\r\n        // if (this.answers[val.schemaKey.split('-----')[0]]) {\r\n        //   this.$set(this.answers[val.schemaKey.split('-----')[0]], val.schemaKey.split('-----')[1], val.value)\r\n        // } else {\r\n        //   this.$set(this.answers, val.schemaKey.split('-----')[0], {})\r\n        //   this.$set(this.answers[val.schemaKey.split('-----')[0]], val.schemaKey.split('-----')[1], val.value)\r\n        // }\r\n        this.$set(this.answers, val.schemaKey.split('-----')[1], val.value)\r\n        this.answers.current = val.schemaKey.split('-----')[1]\r\n      } else {\r\n        this.$set(this.answers, val.schemaKey, val.value)\r\n        this.answers.current = val.schemaKey\r\n      }\r\n      console.log(val)\r\n      // if (val.server) {\r\n      //   this.answer(4)\r\n      // }\r\n      if (val.first !== true) this.answer(4) // TODO:临时操作，后端去除了server标识，现在所有请求都需要异步访问后端\r\n      console.log(this.answers)\r\n    },\r\n    Commit (val) { // eslint-disable-next-line\r\n      if (this.validators[val.schemaKey] && typeof this.validators[val.schemaKey] === 'function') {\r\n        this.validators[val.schemaKey]().then(() => {\r\n          this.commitAnswer(val)\r\n        }, () => {\r\n          this.$Message.error(`请检查必填项！`)\r\n        })\r\n      } else if (val.schemaKey === 'button') {\r\n        const validates = []\r\n        for (const key in this.validators) {\r\n          validates.push(this.validators[key]())\r\n        }\r\n        Promise.all(validates).then(() => {\r\n          this.commitAnswer(val)\r\n        }).catch(err => {\r\n          console.log(err)\r\n          this.$Message.error(`请检查必填项！`)\r\n        })\r\n      } else {\r\n        this.commitAnswer(val)\r\n      }\r\n    },\r\n    commitAnswer (val) {\r\n      this.$nextTick(() => {\r\n        this.show = false\r\n      })\r\n      if (val.value) {\r\n        this.$set(this.answers, val.schemaKey, val.value)\r\n      }\r\n      // console.log(val.additionalKeys)\r\n      if (this.additionalKeys && this.additionalKeys.length) {\r\n        this.schema.properties[this.additionalKeys[0]].additionalShow = true\r\n      } else {\r\n        this.answer(5)\r\n      }\r\n    },\r\n    Additional (val) {\r\n      if (val.additionalKeys && val.additionalKeys.length) {\r\n        // if (!this.additionalKeys || (this.additionalKeys && this.additionalKeys.length === 0)) {\r\n        this.additionalKeys = this.deepCopy(val.additionalKeys)\r\n        // }\r\n\r\n        if (val.allowClose) { // 特殊用法，请勿效仿\r\n          this.schema.properties[this.additionalKeys[0]].additionalShow = true\r\n        } else {\r\n          this.schema.properties[this.additionalKeys[0]].additionalShow = 2\r\n        }\r\n      }\r\n    },\r\n    AdditionalDown (key) { // eslint-disable-next-line\r\n      for (const n in this.additionalKeys) {\r\n        if (this.additionalKeys[n] === key) {\r\n          this.additionalKeys.splice(n, 1) // TODO: 大表单是否要这样做，有待商榷\r\n          if (this.additionalKeys && this.additionalKeys.length) {\r\n            this.schema.properties[this.additionalKeys[0]].additionalShow = true\r\n          }\r\n          return\r\n        }\r\n      }\r\n    },\r\n    backTo (name) {\r\n      if (name === 'Report') {\r\n        this.$router.push({ name, query: { projectId: (this.$route.query.projectId), rootId: (this.$route.query.rootId) } })\r\n      } else if (name === 'Page') {\r\n        this.$router.push({ name, params: { projectId: this.$route.query.rootId } })\r\n      } else {\r\n        this.$router.push({ name, query: { projectId: (this.$route.query.rootId) } })\r\n      }\r\n    },\r\n    nextQuestion () {\r\n      if (!this.loading) {\r\n        this.show = true\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.question-page\r\n  position relative\r\n  background-color #f5f7f9\r\n  display flex\r\n  align-items stretch\r\n  overflow auto\r\n  height 100%\r\n  .answer-question\r\n    flex auto\r\n    background #f5f7f9\r\n    .question-row\r\n      height 100%\r\n      max-width 720px\r\n      margin 0 auto\r\n      text-align left\r\n      position relative\r\n      display flex\r\n      justify-content center\r\n      padding-top 72px\r\n      .que\r\n        height 480px\r\n        width 100%\r\n\r\n      .questions\r\n        flex 1 1 auto\r\n        // overflow auto\r\n        text-align center\r\n        margin-top 0.5rem\r\n\r\n        .ivu-card\r\n          height 100%\r\n\r\n        h2.question-title\r\n          color #212121\r\n          padding 1rem 0\r\n          font-size 2rem\r\n          font-weight bold\r\n\r\n        p.question-description\r\n          display inline-block\r\n          text-align center\r\n          font-size 16px\r\n          color #616161\r\n\r\n        .question-options\r\n          width: fit-content;\r\n          min-width: 240px;\r\n          margin: 0 auto;\r\n          text-align: left;\r\n          padding 1.5rem 0\r\n\r\n      li, .backhome\r\n        padding-bottom 10px\r\n        width 100%\r\n        text-align center\r\n\r\n      .backhome\r\n        input\r\n          height 40px\r\n          line-height 40px\r\n          font-size 14px\r\n          border-radius 2px\r\n          width 120px\r\n          padding-bottom 10px\r\n\r\n      .report\r\n        text-align center\r\n        .report-title\r\n          font-size 1.5rem\r\n          font-weight bold\r\n        .report-content\r\n          display inline-block\r\n    .questionnaire\r\n      text-align center\r\n      padding 0 32px\r\n      .project-title\r\n        color #212121\r\n        padding 1rem 0\r\n        font-size 2rem\r\n        font-weight bold\r\n      .project-description\r\n        padding 1rem 0\r\n        border-bottom 1px solid #ccc\r\n        .description\r\n          display inline-block\r\n          text-align center\r\n          font-size 16px\r\n          color #616161\r\n      .bottom-btn\r\n        margin-top 5rem\r\n        text-align center\r\n        .start\r\n          border-radius 2px\r\n  .answer-record\r\n    width 25%\r\n    min-width 250px\r\n    overflow auto\r\n    padding-top 2.5rem\r\n    position relative\r\n    background white\r\n    .answer-record-title\r\n      user-select none\r\n      background #F7F7F7\r\n      position absolute\r\n      width 100%\r\n      top 0\r\n      left 0\r\n      font-size 1.5rem\r\n      text-align center\r\n    .answer-record-tree\r\n      .root-node-content\r\n        font-size 1rem\r\n        font-weight bold\r\n      >.tree-node-container\r\n        margin 0 2px\r\n        margin-bottom 0.5rem\r\n        padding 0.5rem\r\n        box-shadow 0 0 2px 1px #A1BFFC\r\n        border-radius 4px\r\n  .question-node-tree\r\n    width 25%\r\n    min-width 250px\r\n    background #F7F7F7\r\n    overflow scroll\r\n    text-align center\r\n    .tree-title\r\n      user-select none\r\n      font-size 1.5rem\r\n      padding 0.2rem 0.5rem\r\n      border-bottom 1px solid rgba(0, 0, 0, 0.06)\r\n      user-select none\r\n    .tree-body\r\n      padding 0.2rem\r\n\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity .5s;\r\n}\r\n.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\r\n  opacity: 0;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BigQuestion.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BigQuestion.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BigQuestion.vue?vue&type=template&id=274c403e&scoped=true&lang=pug&\"\nimport script from \"./BigQuestion.vue?vue&type=script&lang=js&\"\nexport * from \"./BigQuestion.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BigQuestion.vue?vue&type=style&index=0&id=274c403e&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"274c403e\",\n  null\n  \n)\n\ncomponent.options.__file = \"BigQuestion.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BigQuestion.vue?vue&type=style&index=0&id=274c403e&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BigQuestion.vue?vue&type=style&index=0&id=274c403e&lang=stylus&scoped=true&\""],"sourceRoot":""}